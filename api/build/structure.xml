<?xml version="1.0" encoding="utf-8"?>
<project title="CodeIgniter v4.0.0 API" version="2.8.5">
  <partials/>
  <file path="Database/Query.php" generated-path="Database.Query.html" hash="c9ab8a1d2c936072a3e0626086aa39cb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="44" package="CodeIgniter\Database">
      <extends/>
      <implements>\CodeIgniter\Database\QueryInterface</implements>
      <name>Query</name>
      <full_name>\CodeIgniter\Database\Query</full_name>
      <docblock line="44">
        <description>Query builder</description>
        <long-description></long-description>
        <tag name="package" line="44" description="CodeIgniter\Database"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="51" package="CodeIgniter\Database">
        <name>$originalQueryString</name>
        <full_name>\CodeIgniter\Database\Query::originalQueryString</full_name>
        <default></default>
        <docblock line="51">
          <description>The query string, as provided by the user.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="58" package="CodeIgniter\Database">
        <name>$finalQueryString</name>
        <full_name>\CodeIgniter\Database\Query::finalQueryString</full_name>
        <default></default>
        <docblock line="58">
          <description>The final query string after binding, etc.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="65" package="CodeIgniter\Database">
        <name>$binds</name>
        <full_name>\CodeIgniter\Database\Query::binds</full_name>
        <default>array()</default>
        <docblock line="65">
          <description>The binds and their values used for binding.</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="74" package="CodeIgniter\Database">
        <name>$bindMarker</name>
        <full_name>\CodeIgniter\Database\Query::bindMarker</full_name>
        <default>'?'</default>
        <docblock line="74">
          <description>Bind marker</description>
          <long-description>Character used to identify values in a prepared statement.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="82" package="CodeIgniter\Database">
        <name>$startTime</name>
        <full_name>\CodeIgniter\Database\Query::startTime</full_name>
        <default></default>
        <docblock line="82">
          <description>The start time in seconds with microseconds
for when this query was executed.</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="90" package="CodeIgniter\Database">
        <name>$endTime</name>
        <full_name>\CodeIgniter\Database\Query::endTime</full_name>
        <default></default>
        <docblock line="90">
          <description>The end time in seconds with microseconds
for when this query was executed.</description>
          <long-description></long-description>
          <tag name="var" line="90" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="97" package="CodeIgniter\Database">
        <name>$errorCode</name>
        <full_name>\CodeIgniter\Database\Query::errorCode</full_name>
        <default></default>
        <docblock line="97">
          <description>The error code, if any.</description>
          <long-description></long-description>
          <tag name="var" line="97" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="104" package="CodeIgniter\Database">
        <name>$errorString</name>
        <full_name>\CodeIgniter\Database\Query::errorString</full_name>
        <default></default>
        <docblock line="104">
          <description>The error message, if any.</description>
          <long-description></long-description>
          <tag name="var" line="104" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="112" package="CodeIgniter\Database">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Query::db</full_name>
        <default></default>
        <docblock line="112">
          <description>Pointer to database connection.</description>
          <long-description>Mainly for escaping features.</long-description>
          <tag name="var" line="112" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="121" package="CodeIgniter\Database">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Query::__construct()</full_name>
        <docblock line="121">
          <description>BaseQuery constructor.</description>
          <long-description></long-description>
          <tag name="param" line="121" description="&lt;p&gt;ConnectionInterface&lt;/p&gt;" type="" variable="$db"/>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="137" package="CodeIgniter\Database">
        <name>setQuery</name>
        <full_name>\CodeIgniter\Database\Query::setQuery()</full_name>
        <docblock line="137">
          <description>Sets the raw query string to use for this statement.</description>
          <long-description></long-description>
          <tag name="param" line="137" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="137" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="return" line="137" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::setQuery()" refers="\CodeIgniter\Database\QueryInterface::setQuery()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_setQuery"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="157" package="CodeIgniter\Database">
        <name>getQuery</name>
        <full_name>\CodeIgniter\Database\Query::getQuery()</full_name>
        <docblock line="157">
          <description>Returns the final, processed query string after binding, etal
has been performed.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::getQuery()" refers="\CodeIgniter\Database\QueryInterface::getQuery()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_getQuery"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="181" package="CodeIgniter\Database">
        <name>setDuration</name>
        <full_name>\CodeIgniter\Database\Query::setDuration()</full_name>
        <docblock line="181">
          <description>Records the execution time of the statement using microtime(true)
for it's start and end values. If no end value is present, will
use the current time to determine total duration.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="integer" variable="$start">
            <type>integer</type>
          </tag>
          <tag name="param" line="181" description="" type="integer|null" variable="$end">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::setDuration()" refers="\CodeIgniter\Database\QueryInterface::setDuration()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_setDuration"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default>null</default>
          <type>integer|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="205" package="CodeIgniter\Database">
        <name>getStartTime</name>
        <full_name>\CodeIgniter\Database\Query::getStartTime()</full_name>
        <docblock line="205">
          <description>Returns the start time in seconds with microseconds.</description>
          <long-description></long-description>
          <tag name="param" line="205" description="" type="boolean" variable="$returnRaw">
            <type>boolean</type>
          </tag>
          <tag name="param" line="205" description="" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="205" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$returnRaw</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="224" package="CodeIgniter\Database">
        <name>getDuration</name>
        <full_name>\CodeIgniter\Database\Query::getDuration()</full_name>
        <docblock line="224">
          <description>Returns the duration of this query during execution, or null if
the query has not been executed yet.</description>
          <long-description></long-description>
          <tag name="param" line="224" description="&lt;p&gt;The accuracy of the returned time.&lt;/p&gt;" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="224" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::getDuration()" refers="\CodeIgniter\Database\QueryInterface::getDuration()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_getDuration"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="237" package="CodeIgniter\Database">
        <name>setError</name>
        <full_name>\CodeIgniter\Database\Query::setError()</full_name>
        <docblock line="237">
          <description>Stores the error description that happened for this query.</description>
          <long-description></long-description>
          <tag name="param" line="237" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="237" description="" type="string" variable="$error">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::setError()" refers="\CodeIgniter\Database\QueryInterface::setError()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_setError"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="252" package="CodeIgniter\Database">
        <name>hasError</name>
        <full_name>\CodeIgniter\Database\Query::hasError()</full_name>
        <docblock line="252">
          <description>Reports whether this statement created an error not.</description>
          <long-description></long-description>
          <tag name="return" line="252" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::hasError()" refers="\CodeIgniter\Database\QueryInterface::hasError()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_hasError"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="264" package="CodeIgniter\Database">
        <name>getErrorCode</name>
        <full_name>\CodeIgniter\Database\Query::getErrorCode()</full_name>
        <docblock line="264">
          <description>Returns the error code created while executing this statement.</description>
          <long-description></long-description>
          <tag name="return" line="264" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::getErrorCode()" refers="\CodeIgniter\Database\QueryInterface::getErrorCode()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_getErrorCode"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="276" package="CodeIgniter\Database">
        <name>getErrorMessage</name>
        <full_name>\CodeIgniter\Database\Query::getErrorMessage()</full_name>
        <docblock line="276">
          <description>Returns the error message created while executing this statement.</description>
          <long-description></long-description>
          <tag name="return" line="276" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::getErrorMessage()" refers="\CodeIgniter\Database\QueryInterface::getErrorMessage()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_getErrorMessage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="288" package="CodeIgniter\Database">
        <name>isWriteType</name>
        <full_name>\CodeIgniter\Database\Query::isWriteType()</full_name>
        <docblock line="288">
          <description>Determines if the statement is a write-type query or not.</description>
          <long-description></long-description>
          <tag name="return" line="288" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::isWriteType()" refers="\CodeIgniter\Database\QueryInterface::isWriteType()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_isWriteType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="305" package="CodeIgniter\Database">
        <name>swapPrefix</name>
        <full_name>\CodeIgniter\Database\Query::swapPrefix()</full_name>
        <docblock line="305">
          <description>Swaps out one table prefix for a new one.</description>
          <long-description></long-description>
          <tag name="param" line="305" description="" type="string" variable="$orig">
            <type>string</type>
          </tag>
          <tag name="param" line="305" description="" type="string" variable="$swap">
            <type>string</type>
          </tag>
          <tag name="return" line="305" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\QueryInterface::swapPrefix()" refers="\CodeIgniter\Database\QueryInterface::swapPrefix()" link="/classes/CodeIgniter.Database.QueryInterface.html#method_swapPrefix"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$swap</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="321" package="CodeIgniter\Database">
        <name>getOriginalQuery</name>
        <full_name>\CodeIgniter\Database\Query::getOriginalQuery()</full_name>
        <docblock line="321">
          <description>Returns the original SQL that was passed into the system.</description>
          <long-description></long-description>
          <tag name="return" line="321" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="331" package="CodeIgniter\Database">
        <name>compileBinds</name>
        <full_name>\CodeIgniter\Database\Query::compileBinds()</full_name>
        <docblock line="331">
          <description>Escapes and inserts any binds into the finalQueryString object.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="386" package="CodeIgniter\Database">
        <name>matchNamedBinds</name>
        <full_name>\CodeIgniter\Database\Query::matchNamedBinds()</full_name>
        <docblock line="386">
          <description>Match binfings</description>
          <long-description></long-description>
          <tag name="param" line="386" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="386" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="return" line="386" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="411" package="CodeIgniter\Database">
        <name>matchSimpleBinds</name>
        <full_name>\CodeIgniter\Database\Query::matchSimpleBinds()</full_name>
        <docblock line="411">
          <description>Match bindings</description>
          <long-description></long-description>
          <tag name="param" line="411" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="411" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="param" line="411" description="" type="integer" variable="$bindCount">
            <type>integer</type>
          </tag>
          <tag name="param" line="411" description="" type="integer" variable="$ml">
            <type>integer</type>
          </tag>
          <tag name="return" line="411" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$bindCount</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ml</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="457" package="CodeIgniter\Database">
        <name>__toString</name>
        <full_name>\CodeIgniter\Database\Query::__toString()</full_name>
        <docblock line="457">
          <description>Return text representation of the query</description>
          <long-description></long-description>
          <tag name="return" line="457" description="" type="\CodeIgniter\Database\type">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/MySQLi/Builder.php" generated-path="Database.MySQLi.Builder.html" hash="90fe18b32b0c27539149ee334569b126" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseBuilder">\CodeIgniter\Database\BaseBuilder</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\MySQLi" line="44" package="Default">
      <extends>\CodeIgniter\Database\BaseBuilder</extends>
      <name>Builder</name>
      <full_name>\CodeIgniter\Database\MySQLi\Builder</full_name>
      <docblock line="44">
        <description>Builder for MySQLi</description>
        <long-description>Provides the core Query Builder methods.
Database-specific Builders might need to override
certain methods to make them work.</long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder" refers="\CodeIgniter\Database\BaseBuilder" link="/classes/CodeIgniter.Database.BaseBuilder.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="51" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\MySQLi\Builder::escapeChar</full_name>
        <default>'`'</default>
        <docblock line="51">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="57" package="CodeIgniter\Database">
        <name>$resetDeleteData</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetDeleteData</full_name>
        <default>false</default>
        <docblock line="57">
          <description>Reset DELETE data flag</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="64" package="CodeIgniter\Database">
        <name>$QBSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSelect</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>QB SELECT data</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="71" package="CodeIgniter\Database">
        <name>$QBDistinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBDistinct</full_name>
        <default>false</default>
        <docblock line="71">
          <description>QB DISTINCT flag</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="78" package="CodeIgniter\Database">
        <name>$QBFrom</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBFrom</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>QB FROM data</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="85" package="CodeIgniter\Database">
        <name>$QBJoin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBJoin</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>QB JOIN data</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="92" package="CodeIgniter\Database">
        <name>$QBWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhere</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>QB WHERE data</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="99" package="CodeIgniter\Database">
        <name>$QBGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBGroupBy</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>QB GROUP BY data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="106" package="CodeIgniter\Database">
        <name>$QBHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBHaving</full_name>
        <default>array()</default>
        <docblock line="106">
          <description>QB HAVING data</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="113" package="CodeIgniter\Database">
        <name>$QBKeys</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBKeys</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>QB keys</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="120" package="CodeIgniter\Database">
        <name>$QBLimit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBLimit</full_name>
        <default>false</default>
        <docblock line="120">
          <description>QB LIMIT data</description>
          <long-description></long-description>
          <tag name="var" line="120" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="127" package="CodeIgniter\Database">
        <name>$QBOffset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOffset</full_name>
        <default>false</default>
        <docblock line="127">
          <description>QB OFFSET data</description>
          <long-description></long-description>
          <tag name="var" line="127" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="134" package="CodeIgniter\Database">
        <name>$QBOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOrderBy</full_name>
        <default>array()</default>
        <docblock line="134">
          <description>QB ORDER BY data</description>
          <long-description></long-description>
          <tag name="var" line="134" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="141" package="CodeIgniter\Database">
        <name>$QBSet</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSet</full_name>
        <default>array()</default>
        <docblock line="141">
          <description>QB data sets</description>
          <long-description></long-description>
          <tag name="var" line="141" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="148" package="CodeIgniter\Database">
        <name>$QBAliasedTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBAliasedTables</full_name>
        <default>array()</default>
        <docblock line="148">
          <description>QB aliased tables list</description>
          <long-description></long-description>
          <tag name="var" line="148" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="155" package="CodeIgniter\Database">
        <name>$QBWhereGroupStarted</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupStarted</full_name>
        <default>false</default>
        <docblock line="155">
          <description>QB WHERE group started flag</description>
          <long-description></long-description>
          <tag name="var" line="155" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="162" package="CodeIgniter\Database">
        <name>$QBWhereGroupCount</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupCount</full_name>
        <default>0</default>
        <docblock line="162">
          <description>QB WHERE group count</description>
          <long-description></long-description>
          <tag name="var" line="162" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="169" package="CodeIgniter\Database">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::db</full_name>
        <default></default>
        <docblock line="169">
          <description>A reference to the database connection.</description>
          <long-description></long-description>
          <tag name="var" line="169" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="176" package="CodeIgniter\Database">
        <name>$randomKeyword</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::randomKeyword</full_name>
        <default>array('RAND()', 'RAND(%d)')</default>
        <docblock line="176">
          <description>ORDER BY random keyword</description>
          <long-description></long-description>
          <tag name="var" line="176" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="186" package="CodeIgniter\Database">
        <name>$countString</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countString</full_name>
        <default>'SELECT COUNT(*) AS '</default>
        <docblock line="186">
          <description>COUNT string</description>
          <long-description></long-description>
          <tag name="used-by" line="186" description="CI_DB_driver::count_all()"/>
          <tag name="used-by" line="186" description="BaseBuilder::count_all_results()"/>
          <tag name="var" line="186" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="195" package="CodeIgniter\Database">
        <name>$binds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::binds</full_name>
        <default>array()</default>
        <docblock line="195">
          <description>Collects the named parameters and
their values for later binding
in the Query object.</description>
          <long-description></long-description>
          <tag name="var" line="195" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="207" package="CodeIgniter\Database">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::__construct()</full_name>
        <docblock line="207">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\type" variable="$tableName">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="param" line="207" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="throws" line="207" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="236" package="CodeIgniter\Database">
        <name>getBinds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getBinds()</full_name>
        <docblock line="236">
          <description>Returns an array of bind values and their
named parameters for binding in the Query object later.</description>
          <long-description></long-description>
          <tag name="return" line="236" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="253" package="CodeIgniter\Database">
        <name>select</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::select()</full_name>
        <docblock line="253">
          <description>Select</description>
          <long-description>Generates the SELECT portion of the query</long-description>
          <tag name="param" line="253" description="" type="string|array" variable="$select">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="253" description="" type="mixed" variable="$escape">
            <type>mixed</type>
          </tag>
          <tag name="return" line="253" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="289" package="CodeIgniter\Database">
        <name>selectMax</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMax()</full_name>
        <docblock line="289">
          <description>Select Max</description>
          <long-description>Generates a SELECT MAX(field) portion of a query</long-description>
          <tag name="param" line="289" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="289" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="289" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="306" package="CodeIgniter\Database">
        <name>selectMin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMin()</full_name>
        <docblock line="306">
          <description>Select Min</description>
          <long-description>Generates a SELECT MIN(field) portion of a query</long-description>
          <tag name="param" line="306" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="306" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="306" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="323" package="CodeIgniter\Database">
        <name>selectAvg</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectAvg()</full_name>
        <docblock line="323">
          <description>Select Average</description>
          <long-description>Generates a SELECT AVG(field) portion of a query</long-description>
          <tag name="param" line="323" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="323" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="340" package="CodeIgniter\Database">
        <name>selectSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectSum()</full_name>
        <docblock line="340">
          <description>Select Sum</description>
          <long-description>Generates a SELECT SUM(field) portion of a query</long-description>
          <tag name="param" line="340" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="340" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="340" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="361" package="CodeIgniter\Database">
        <name>maxMinAvgSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::maxMinAvgSum()</full_name>
        <docblock line="361">
          <description>SELECT [MAX|MIN|AVG|SUM]()</description>
          <long-description></long-description>
          <tag name="used-by" line="361" description="selectMax()"/>
          <tag name="used-by" line="361" description="selectMin()"/>
          <tag name="used-by" line="361" description="selectAvg()"/>
          <tag name="used-by" line="361" description="selectSum()"/>
          <tag name="param" line="361" description="&lt;p&gt;Field name&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="361" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'MAX'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="397" package="CodeIgniter\Database">
        <name>createAliasFromTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::createAliasFromTable()</full_name>
        <docblock line="397">
          <description>Determines the alias name based on the table</description>
          <long-description></long-description>
          <tag name="param" line="397" description="" type="string" variable="$item">
            <type>string</type>
          </tag>
          <tag name="return" line="397" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="420" package="CodeIgniter\Database">
        <name>distinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::distinct()</full_name>
        <docblock line="420">
          <description>DISTINCT</description>
          <long-description>Sets a flag which tells the query string compiler to add DISTINCT</long-description>
          <tag name="param" line="420" description="" type="boolean" variable="$val">
            <type>boolean</type>
          </tag>
          <tag name="return" line="420" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="439" package="CodeIgniter\Database">
        <name>from</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::from()</full_name>
        <docblock line="439">
          <description>From</description>
          <long-description>Generates the FROM portion of the query</long-description>
          <tag name="param" line="439" description="&lt;p&gt;can be a string or array&lt;/p&gt;" type="mixed" variable="$from">
            <type>mixed</type>
          </tag>
          <tag name="param" line="439" description="&lt;p&gt;Should we remove the first table existing?&lt;/p&gt;" type="boolean" variable="$overwrite">
            <type>boolean</type>
          </tag>
          <tag name="return" line="439" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overwrite</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="488" package="CodeIgniter\Database">
        <name>join</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::join()</full_name>
        <docblock line="488">
          <description>JOIN</description>
          <long-description>Generates the JOIN portion of the query</long-description>
          <tag name="param" line="488" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the join condition&lt;/p&gt;" type="string" variable="$cond">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the type of join&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;whether not to try to escape identifiers&lt;/p&gt;" type="string" variable="$escape">
            <type>string</type>
          </tag>
          <tag name="return" line="488" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$cond</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="578" package="CodeIgniter\Database">
        <name>where</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::where()</full_name>
        <docblock line="578">
          <description>WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="578" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="578" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="597" package="CodeIgniter\Database">
        <name>orWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhere()</full_name>
        <docblock line="597">
          <description>OR WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="597" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="597" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="620" package="CodeIgniter\Database">
        <name>whereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereHaving()</full_name>
        <docblock line="620">
          <description>WHERE, HAVING</description>
          <long-description></long-description>
          <tag name="used-by" line="620" description="where()"/>
          <tag name="used-by" line="620" description="orWhere()"/>
          <tag name="used-by" line="620" description="having()"/>
          <tag name="used-by" line="620" description="orHaving()"/>
          <tag name="param" line="620" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="620" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="684" package="CodeIgniter\Database">
        <name>whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereIn()</full_name>
        <docblock line="684">
          <description>WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="684" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="684" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="684" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="684" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="703" package="CodeIgniter\Database">
        <name>orWhereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereIn()</full_name>
        <docblock line="703">
          <description>OR WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="703" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="703" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="703" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="703" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="722" package="CodeIgniter\Database">
        <name>whereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereNotIn()</full_name>
        <docblock line="722">
          <description>WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="722" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="722" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="722" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="741" package="CodeIgniter\Database">
        <name>orWhereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereNotIn()</full_name>
        <docblock line="741">
          <description>OR WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="741" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="741" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="741" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="741" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="764" package="CodeIgniter\Database">
        <name>_whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_whereIn()</full_name>
        <docblock line="764">
          <description>Internal WHERE IN</description>
          <long-description></long-description>
          <tag name="used-by" line="764" description="WhereIn()"/>
          <tag name="used-by" line="764" description="orWhereIn()"/>
          <tag name="used-by" line="764" description="whereNotIn()"/>
          <tag name="used-by" line="764" description="orWhereNotIn()"/>
          <tag name="param" line="764" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;If the statement would be IN or NOT IN&lt;/p&gt;" type="boolean" variable="$not">
            <type>boolean</type>
          </tag>
          <tag name="param" line="764" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="764" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="819" package="CodeIgniter\Database">
        <name>like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::like()</full_name>
        <docblock line="819">
          <description>LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="819" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="819" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="839" package="CodeIgniter\Database">
        <name>notLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notLike()</full_name>
        <docblock line="839">
          <description>NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="839" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="839" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="859" package="CodeIgniter\Database">
        <name>orLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orLike()</full_name>
        <docblock line="859">
          <description>OR LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="859" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="859" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="879" package="CodeIgniter\Database">
        <name>orNotLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotLike()</full_name>
        <docblock line="879">
          <description>OR NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="879" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="903" package="CodeIgniter\Database">
        <name>_like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_like()</full_name>
        <docblock line="903">
          <description>Internal LIKE</description>
          <long-description></long-description>
          <tag name="used-by" line="903" description="like()"/>
          <tag name="used-by" line="903" description="orLike()"/>
          <tag name="used-by" line="903" description="notLike()"/>
          <tag name="used-by" line="903" description="orNotLike()"/>
          <tag name="param" line="903" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="903" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="961" package="CodeIgniter\Database">
        <name>groupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupStart()</full_name>
        <docblock line="961">
          <description>Starts a query group.</description>
          <long-description></long-description>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="961" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="985" package="CodeIgniter\Database">
        <name>orGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orGroupStart()</full_name>
        <docblock line="985">
          <description>Starts a query group, but ORs the group</description>
          <long-description></long-description>
          <tag name="return" line="985" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="997" package="CodeIgniter\Database">
        <name>notGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notGroupStart()</full_name>
        <docblock line="997">
          <description>Starts a query group, but NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="997" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1009" package="CodeIgniter\Database">
        <name>orNotGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotGroupStart()</full_name>
        <docblock line="1009">
          <description>Starts a query group, but OR NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="1009" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1021" package="CodeIgniter\Database">
        <name>groupEnd</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupEnd()</full_name>
        <docblock line="1021">
          <description>Ends a query group</description>
          <long-description></long-description>
          <tag name="return" line="1021" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1048" package="CodeIgniter\Database">
        <name>groupGetType</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupGetType()</full_name>
        <docblock line="1048">
          <description>Group_get_type</description>
          <long-description></long-description>
          <tag name="used-by" line="1048" description="groupStart()"/>
          <tag name="used-by" line="1048" description="_like()"/>
          <tag name="used-by" line="1048" description="whereHaving()"/>
          <tag name="used-by" line="1048" description="_whereIn()"/>
          <tag name="param" line="1048" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="1048" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1069" package="CodeIgniter\Database">
        <name>groupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupBy()</full_name>
        <docblock line="1069">
          <description>GROUP BY</description>
          <long-description></long-description>
          <tag name="param" line="1069" description="" type="string" variable="$by">
            <type>string</type>
          </tag>
          <tag name="param" line="1069" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1069" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$by</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1108" package="CodeIgniter\Database">
        <name>having</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::having()</full_name>
        <docblock line="1108">
          <description>HAVING</description>
          <long-description>Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="1108" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1108" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1126" package="CodeIgniter\Database">
        <name>orHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orHaving()</full_name>
        <docblock line="1126">
          <description>OR HAVING</description>
          <long-description>Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="1126" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1126" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1142" package="CodeIgniter\Database">
        <name>orderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orderBy()</full_name>
        <docblock line="1142">
          <description>ORDER BY</description>
          <long-description></long-description>
          <tag name="param" line="1142" description="" type="string" variable="$orderby">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="&lt;p&gt;ASC, DESC or RANDOM&lt;/p&gt;" type="string" variable="$direction">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1142" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orderby</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$direction</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1201" package="CodeIgniter\Database">
        <name>limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::limit()</full_name>
        <docblock line="1201">
          <description>LIMIT</description>
          <long-description></long-description>
          <tag name="param" line="1201" description="&lt;p&gt;LIMIT value&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="param" line="1201" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1201" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1225" package="CodeIgniter\Database">
        <name>offset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::offset()</full_name>
        <docblock line="1225">
          <description>Sets the OFFSET value</description>
          <long-description></long-description>
          <tag name="param" line="1225" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1225" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1246" package="CodeIgniter\Database">
        <name>_limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_limit()</full_name>
        <docblock line="1246">
          <description>LIMIT string</description>
          <long-description>Generates a platform-specific LIMIT clause.</long-description>
          <tag name="param" line="1246" description="&lt;p&gt;SQL Query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="1246" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1264" package="CodeIgniter\Database">
        <name>set</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::set()</full_name>
        <docblock line="1264">
          <description>The "set" function.</description>
          <long-description>Allows key/value pairs to be set for inserting or updating</long-description>
          <tag name="param" line="1264" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1264" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1264" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1264" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1295" package="CodeIgniter\Database">
        <name>getCompiledSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledSelect()</full_name>
        <docblock line="1295">
          <description>Get SELECT query string</description>
          <long-description>Compiles a SELECT query string and returns the sql.</long-description>
          <tag name="param" line="1295" description="&lt;p&gt;TRUE: resets QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1295" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1321" package="CodeIgniter\Database">
        <name>get</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::get()</full_name>
        <docblock line="1321">
          <description>Get</description>
          <long-description>Compiles the select statement based on the other functions called
and runs the query</long-description>
          <tag name="param" line="1321" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="string" variable="$limit">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;the offset clause&lt;/p&gt;" type="string" variable="$offset">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;If true, returns the generate SQL, otherwise executes the query.&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1321" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1348" package="CodeIgniter\Database">
        <name>countAll</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAll()</full_name>
        <docblock line="1348">
          <description>"Count All" query</description>
          <long-description>Generates a platform-specific query string that counts all records in
the specified database</long-description>
          <tag name="param" line="1348" description="&lt;p&gt;Are we running automated tests?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1348" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1385" package="CodeIgniter\Database">
        <name>countAllResults</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAllResults()</full_name>
        <docblock line="1385">
          <description>"Count All Results" query</description>
          <long-description>Generates a platform-specific query string that counts all records
returned by an Query Builder query.</long-description>
          <tag name="param" line="1385" description="" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="1385" description="&lt;p&gt;the reset clause&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1385" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1441" package="CodeIgniter\Database">
        <name>getWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getWhere()</full_name>
        <docblock line="1441">
          <description>Get_Where</description>
          <long-description>Allows the where clause, limit and offset to be added directly</long-description>
          <tag name="param" line="1441" description="" type="string" variable="$where">
            <type>string</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1441" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1475" package="CodeIgniter\Database">
        <name>insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insertBatch()</full_name>
        <docblock line="1475">
          <description>Insert_Batch</description>
          <long-description>Compiles batch insert strings and runs the queries</long-description>
          <tag name="param" line="1475" description="&lt;p&gt;An associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1475" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1475" description="" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1475" description="" type="boolean" variable="$testing">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1475" description="Number of rows inserted or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="1475" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testing</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1545" package="CodeIgniter\Database">
        <name>_insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insertBatch()</full_name>
        <docblock line="1545">
          <description>Insert batch statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data.</long-description>
          <tag name="param" line="1545" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1545" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1561" package="CodeIgniter\Database">
        <name>setInsertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setInsertBatch()</full_name>
        <docblock line="1561">
          <description>The "setInsertBatch" function.  Allows key/value pairs to be set for batch inserts</description>
          <long-description></long-description>
          <tag name="param" line="1561" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1561" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1561" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1561" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1618" package="CodeIgniter\Database">
        <name>getCompiledInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledInsert()</full_name>
        <docblock line="1618">
          <description>Get INSERT query string</description>
          <long-description>Compiles an insert query and returns the sql</long-description>
          <tag name="param" line="1618" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1618" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1654" package="CodeIgniter\Database">
        <name>insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insert()</full_name>
        <docblock line="1654">
          <description>Insert</description>
          <long-description>Compiles an insert string and runs the query</long-description>
          <tag name="param" line="1654" description="&lt;p&gt;an associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Used when running tests&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1654" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1695" package="CodeIgniter\Database">
        <name>validateInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateInsert()</full_name>
        <docblock line="1695">
          <description>Validate Insert</description>
          <long-description>This method is used by both insert() and getCompiledInsert() to
validate that the there data is actually being set and that table
has been chosen to be inserted into.</long-description>
          <tag name="param" line="1695" description="&lt;p&gt;the table to insert data into&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="return" line="1695" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1723" package="CodeIgniter\Database">
        <name>_insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insert()</full_name>
        <docblock line="1723">
          <description>Insert statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data</long-description>
          <tag name="param" line="1723" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$unescapedKeys">
            <type>array</type>
          </tag>
          <tag name="return" line="1723" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$unescapedKeys</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1782" package="CodeIgniter\Database">
        <name>_replace</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_replace()</full_name>
        <docblock line="1782">
          <description>Replace statement</description>
          <long-description>Generates a platform-specific replace string from the supplied data</long-description>
          <tag name="param" line="1782" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1782" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1799" package="CodeIgniter\Database">
        <name>_fromTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_fromTables()</full_name>
        <docblock line="1799">
          <description>FROM tables</description>
          <long-description>Groups tables in FROM clauses if needed, so there is no confusion
about operator precedence.

Note: This is only used (and overridden) by MySQL and CUBRID.</long-description>
          <tag name="return" line="1799" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1815" package="CodeIgniter\Database">
        <name>getCompiledUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledUpdate()</full_name>
        <docblock line="1815">
          <description>Get UPDATE query string</description>
          <long-description>Compiles an update query and returns the sql</long-description>
          <tag name="param" line="1815" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1815" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1846" package="CodeIgniter\Database">
        <name>update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::update()</full_name>
        <docblock line="1846">
          <description>UPDATE</description>
          <long-description>Compiles an update string and runs the query.</long-description>
          <tag name="param" line="1846" description="&lt;p&gt;An associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1846" description="" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1846" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1846" description="&lt;p&gt;Are we testing the code?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1846" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1893" package="CodeIgniter\Database">
        <name>_update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_update()</full_name>
        <docblock line="1893">
          <description>Update statement</description>
          <long-description>Generates a platform-specific update string from the supplied data</long-description>
          <tag name="param" line="1893" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1893" description="&lt;p&gt;the update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1893" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1918" package="CodeIgniter\Database">
        <name>validateUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateUpdate()</full_name>
        <docblock line="1918">
          <description>Validate Update</description>
          <long-description>This method is used by both update() and getCompiledUpdate() to
validate that data is actually being set and that a table has been
chosen to be update.</long-description>
          <tag name="return" line="1918" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1947" package="CodeIgniter\Database">
        <name>updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::updateBatch()</full_name>
        <docblock line="1947">
          <description>Update_Batch</description>
          <long-description>Compiles an update string and runs the query</long-description>
          <tag name="param" line="1947" description="&lt;p&gt;an associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;the where key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;The size of the batch to run&lt;/p&gt;" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;true means SQL is returned, false will execute the query&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1947" description="number of rows affected or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2027" package="CodeIgniter\Database">
        <name>_updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_updateBatch()</full_name>
        <docblock line="2027">
          <description>Update_Batch statement</description>
          <long-description>Generates a platform-specific batch update string from the supplied data</long-description>
          <tag name="param" line="2027" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;Update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;WHERE key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="2027" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2067" package="CodeIgniter\Database">
        <name>setUpdateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setUpdateBatch()</full_name>
        <docblock line="2067">
          <description>The "setUpdateBatch" function.  Allows key/value pairs to be set for batch updating</description>
          <long-description></long-description>
          <tag name="param" line="2067" description="" type="array" variable="$key">
            <type>array</type>
          </tag>
          <tag name="param" line="2067" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="2067" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2067" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2115" package="CodeIgniter\Database">
        <name>emptyTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::emptyTable()</full_name>
        <docblock line="2115">
          <description>Empty Table</description>
          <long-description>Compiles a delete string and runs "DELETE FROM table"</long-description>
          <tag name="param" line="2115" description="" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2115" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2144" package="CodeIgniter\Database">
        <name>truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::truncate()</full_name>
        <docblock line="2144">
          <description>Truncate</description>
          <long-description>Compiles a truncate string and runs the query
If the database does not support the truncate() command
This function maps to "DELETE FROM table"</long-description>
          <tag name="param" line="2144" description="&lt;p&gt;Whether we're in test mode or not.&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2144" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2174" package="CodeIgniter\Database">
        <name>_truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_truncate()</full_name>
        <docblock line="2174">
          <description>Truncate statement</description>
          <long-description>Generates a platform-specific truncate string from the supplied data

If the database does not support the truncate() command,
then this method maps to 'DELETE FROM table'</long-description>
          <tag name="param" line="2174" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2174" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2191" package="CodeIgniter\Database">
        <name>getCompiledDelete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledDelete()</full_name>
        <docblock line="2191">
          <description>Get DELETE query string</description>
          <long-description>Compiles a delete query string and returns the sql</long-description>
          <tag name="param" line="2191" description="&lt;p&gt;the table to delete from&lt;/p&gt;" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="2191" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2191" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2216" package="CodeIgniter\Database">
        <name>delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::delete()</full_name>
        <docblock line="2216">
          <description>Delete</description>
          <long-description>Compiles a delete string and runs the query</long-description>
          <tag name="param" line="2216" description="&lt;p&gt;the where clause&lt;/p&gt;" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="mixed" variable="$limit">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$reset_data">
            <type>boolean</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2216" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>''</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reset_data</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2265" package="CodeIgniter\Database">
        <name>increment</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::increment()</full_name>
        <docblock line="2265">
          <description>Increments a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2265" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2265" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2265" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2284" package="CodeIgniter\Database">
        <name>decrement</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::decrement()</full_name>
        <docblock line="2284">
          <description>Decrements a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2284" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2284" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2284" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2304" package="CodeIgniter\Database">
        <name>_delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_delete()</full_name>
        <docblock line="2304">
          <description>Delete statement</description>
          <long-description>Generates a platform-specific delete string from the supplied data</long-description>
          <tag name="param" line="2304" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2304" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2321" package="CodeIgniter\Database">
        <name>trackAliases</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::trackAliases()</full_name>
        <docblock line="2321">
          <description>Track Aliases</description>
          <long-description>Used to track SQL statements written with aliased tables.</long-description>
          <tag name="param" line="2321" description="&lt;p&gt;The table to inspect&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2321" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2369" package="CodeIgniter\Database">
        <name>compileSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileSelect()</full_name>
        <docblock line="2369">
          <description>Compile the SELECT statement</description>
          <long-description>Generates a query string based on which functions were used.
Should not be called directly.</long-description>
          <tag name="param" line="2369" description="" type="boolean" variable="$select_override">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2369" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select_override</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2440" package="CodeIgniter\Database">
        <name>compileWhereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileWhereHaving()</full_name>
        <docblock line="2440">
          <description>Compile WHERE, HAVING statements</description>
          <long-description>Escapes identifiers in WHERE and HAVING statements at execution time.

Required so that aliases are tracked properly, regardless of whether
where(), orWhere(), having(), orHaving are called prior to from(),
join() and prefixTable is added only if needed.</long-description>
          <tag name="param" line="2440" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="return" line="2440" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2518" package="CodeIgniter\Database">
        <name>compileGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileGroupBy()</full_name>
        <docblock line="2518">
          <description>Compile GROUP BY</description>
          <long-description>Escapes identifiers in GROUP BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
groupBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2518" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2555" package="CodeIgniter\Database">
        <name>compileOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileOrderBy()</full_name>
        <docblock line="2555">
          <description>Compile ORDER BY</description>
          <long-description>Escapes identifiers in ORDER BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
orderBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2555" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2590" package="CodeIgniter\Database">
        <name>objectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::objectToArray()</full_name>
        <docblock line="2590">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2590" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2590" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2621" package="CodeIgniter\Database">
        <name>batchObjectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::batchObjectToArray()</full_name>
        <docblock line="2621">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2621" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2621" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2659" package="CodeIgniter\Database">
        <name>isLiteral</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::isLiteral()</full_name>
        <docblock line="2659">
          <description>Is literal</description>
          <long-description>Determines if a string represents a literal value or a field name</long-description>
          <tag name="param" line="2659" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2659" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="2690" package="CodeIgniter\Database">
        <name>resetQuery</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetQuery()</full_name>
        <docblock line="2690">
          <description>Reset Query Builder values.</description>
          <long-description>Publicly-visible method to reset the QB values.</long-description>
          <tag name="return" line="2690" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2707" package="CodeIgniter\Database">
        <name>resetRun</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetRun()</full_name>
        <docblock line="2707">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="param" line="2707" description="&lt;p&gt;An array of fields to reset&lt;/p&gt;" type="array" variable="$qb_reset_items">
            <type>array</type>
          </tag>
          <tag name="return" line="2707" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_reset_items</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2722" package="CodeIgniter\Database">
        <name>resetSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetSelect()</full_name>
        <docblock line="2722">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="return" line="2722" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2748" package="CodeIgniter\Database">
        <name>resetWrite</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetWrite()</full_name>
        <docblock line="2748">
          <description>Resets the query builder "write" values.</description>
          <long-description>Called by the insert() update() insertBatch() updateBatch() and delete() functions</long-description>
          <tag name="return" line="2748" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2769" package="CodeIgniter\Database">
        <name>hasOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::hasOperator()</full_name>
        <docblock line="2769">
          <description>Tests whether the string has an SQL operator</description>
          <long-description></long-description>
          <tag name="param" line="2769" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2769" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2784" package="CodeIgniter\Database">
        <name>getOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getOperator()</full_name>
        <docblock line="2784">
          <description>Returns the SQL string operator</description>
          <long-description></long-description>
          <tag name="param" line="2784" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2784" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="2823" package="CodeIgniter\Database">
        <name>setBind</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setBind()</full_name>
        <docblock line="2823">
          <description>Stores a bind value after ensuring that it's unique.</description>
          <long-description></long-description>
          <tag name="param" line="2823" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2823" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="2823" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVd9v4zYMfk7+CqIYcG3hJd1t2MPdhtVJlEaYY2e2067APUyxlVirYxmS3K4Y9r+PlJ3+OOxxQZGUFPmRHylSP/3SVi004ihtKwoJc11KfmiUk+bLQjixE1Z+WT9nv0Xq83g8vbwcw+VbIxRJEzagW9mA1Z1BFNG2tSqEU7qBUj7KWrdH2TjYGwz0pM0D7LWBzWozuOeVslDoxpER/mtkLTFwCV1TSgOukrDmOUSqkI2VcI7CxeA61+2zUYfKwXlxAR+vvvsBvqWfHwOYGeWUrdCk7o47JYA31inXOQl6D7ksqkbX+vA8IG2kOSprKWdMoZJG7p7hYARmVQaYuvRuRSXMQQbgNIjmGVppLDronROqUc0BBPJoCZKMHfGyeu+ehMGqNCUIa3WhBEJCqYuOqtKXaa9qaeGcqJ5lg8fZhY9TSlEToGp8JU6n8KRcpTuH1bLOqIJgAjQq6q6kTE7HtTqqIQi5+2JZwkPoziIVSjiAoy7Vnn6l59d2uxqLF0CpCH2HVQvAktL3ICA2U2yilbVPDkEUEvCkX3P0ZhSopeK6oVyWNE+VPr7no3xW+840GFh6t1Jj+XzcP2XhSEMee13X+ok44p0pFVGzn16uEhZ6px+lp9XfjEY7VfT19x1pXzs9HNlK1DXs5FA+DK4aQiPtiZmhNKzD+6BEDa02Pu7XjCenPFYMsmSZ34UpA57BJk1u+YIt4CzMUD4L4I7nq2SbA1qkYZzfQ7KEML6HX3m8CID9vklZlkGSEhpfbyLOUM3jebRd8PgGZugaJzgUHKcBcfPExxzQOMsIb83S+QrFcMYjnt8HhLXkeUzIyySFEDZhmvP5NgpT2GzTTZIxTGKByDGPlykGYmsW5xMMjDpgtyhAtgqjiKL50d8ijZQShXmyuU/5zSqHVRItGCpnDPMLZxHroyG7eRTydQCLcB3eMO+VIJAnSZZ9mnC3YqSlqCH+zXOexMRnnsR5imKAdNP8xfuOZyyAMOUZVWaZJmvPlKqLTonHQdeY9UBU+fcNQhOStxl7wYQFCyOEw27FXzf01ORr3JkP4iBH7zciXIsOZ8+8VcNCPuLOEUd//nI3R//D/oLzyrn203S6K5SbFGJ64WMMkzoaDmk/9+t5os1hOpzaKd6e0ZvlOrg2Dye/AjmonsOk0H36FsdEjm5xmGmGvp9cTa683i8xHwPF6XiM6+W/X5QZfs06VeN2f31WBoV/G/onx6MUNS7Nl0P5Fz4SJcqvCOO/xyOCGNGglLhR1V6RpS1EK/3CFgU1Bs+9zfWjMIAf2mvNgVTT8ag12uGKwcn/pnecox/8DB/++PB5/M/4X9ajPzg=</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Views.php" generated-path="Debug.Toolbar.Collectors.Views.html" hash="90f1171c8a26185b69527de78cac8b93" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <namespace-alias name="RenderableInterface">\CodeIgniter\View\RenderableInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="45" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Views</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views</full_name>
      <docblock line="45">
        <description>Views collector</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="53" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::hasTimeline</full_name>
        <default>true</default>
        <docblock line="53">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="61" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::hasTabContent</full_name>
        <default>false</default>
        <docblock line="61">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="69" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::hasVarData</full_name>
        <default>true</default>
        <docblock line="69">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasVarData"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="77" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::title</full_name>
        <default>'Views'</default>
        <docblock line="77">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="77" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="83" package="Default">
        <name>$viewer</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::viewer</full_name>
        <default></default>
        <docblock line="83">
          <description>Instance of the Renderer service</description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="\CodeIgniter\View\RenderableInterface" variable="">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="90" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::__construct()</full_name>
        <docblock line="90">
          <description>Constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="104" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::formatTimelineData()</full_name>
        <docblock line="104">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="104" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_formatTimelineData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="143" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Views::getVarData()</full_name>
        <docblock line="143">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="143" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_getVarData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/LoggerAwareTrait.php" generated-path="Log.LoggerAwareTrait.html" hash="a9f630e283038fe9ddd774e262750e61" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="LoggerInterface">\Psr\Log\LoggerInterface</namespace-alias>
    <trait namespace="CodeIgniter\Log" line="41" package="Default">
      <name>LoggerAwareTrait</name>
      <full_name>\CodeIgniter\Log\LoggerAwareTrait</full_name>
      <docblock line="41">
        <description>Trait LoggerAwareTrait</description>
        <long-description></long-description>
        <tag name="package" line="41" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVFFv2zYQfpZ+xSHoQxIo8dbHdu2i2HRMVJYESW4WYC+yRFtcZFEgqRpG0f++O1p2mmB7GWbEcHi877v7juT32+9900NX7oTpy0rAVNWCbztphf4zUtuPvj+5vvbh+ucNXFIk7ED1ogOjBo3Isu9bWZVWqg5q8U20qt+JzsJGI/le6WfYKA3pIh3hRSMNVKqzlIT/atGK0ogahq4WGmwjYMkLiGQlOiPgEhdXI3Sq+oOW28bCZXUF73/59T3xwvxciSOrxuZ0uZattAd40GroR3Qq9E4aQ31i2UZosT7AVpeIqQNsVwhQG6iaUm9FAFZB2R0AuQwC1NqWspPdFkrsvT8QHyZb0mLUxu5LjZPoaiiNUZUskRJqVQ00ieNoNrIVBi5J3kU+Ii6uXJ1alC0Rys6pP+3CXtpGDRYnZKyWFdEEmFS1Q02dnLZbuZNjEYK7ARniQ+rBoBRqOICdquWGfoXT1w/rVpomgFoS+3qwGDQUdHMPSM0ED86I1jWHJBIFONEvPbo0KtTTcO04LkORfaN2r/VI19Vm0B0WFg5WKxyfq/uXqCxFCLFRbav2pBHvSS1Jmvlwvj446LX6Jpys423olJXVcf7uRPqXkx63TFO2LazFOD4sLjtio+hJmaY2jMX7IMsWeqVd3beKb099LBjkybx4DDMGPIc0S77yGZvBRZjj+iKAR14sklUBmJGFcfEEyRzC+Am+8HgWAPsjzVieQ5IRG1+mEWcY5vE0Ws14/AD3CI0TfAgcXwDyFomrObJxlhPfkmXTBS7Dex7x4ikgrjkvYmKeJxmEkIZZwaerKMwgXWVpkjNsYobMMY/nGRZiSxYXt1gYY8C+4gLyRRhFVM099xXKyKhRmCbpU8YfFgUskmjGMHjPsL/wPmLHaqhuGoV8GcAsXIYPzKESJHIiKfPYJjwuGEWpaoh/04InMemZJnGR4TJAuVlxRj/ynAUQZjynycyzZOmU0nQRlDgehMbsSESTf31AmELrVc7OnDBjYYR0eFrx2wM9HfIdeuNzuRXeaxeEu/Pd8/67J8Hd+Na8xtr+w2RCrno01Vult5Nx10zw/L2fLHGEds8n3Piz3+9v0dRvNnLr8Jg38X10AEiNM3X6boV2DW3Q9F9MvtAlPt7jdki33AUcgf3HLfju+x6BPUTnwhr0xdbl4MOiN4RvbvQj5Z42JbpkHCmOBt60Au+O6Jc0LSwaBXQD2o9HjXjOsSr0j85ZITqTPbJc/gvZle999z3vHXnCzeexvU+n3Y++94NETG7+h4/v//D/BoniRII=</source>
  </file>
  <file path="HTTP/Header.php" generated-path="HTTP.Header.html" hash="5dc1e1e670d8c5c6372b57664edb62d7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter\HTTP">
      <extends/>
      <name>Header</name>
      <full_name>\CodeIgniter\HTTP\Header</full_name>
      <docblock line="46">
        <description>Class Header</description>
        <long-description>Represents a single HTTP header.</long-description>
        <tag name="package" line="46" description="CodeIgniter\HTTP"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="53" package="CodeIgniter\HTTP">
        <name>$name</name>
        <full_name>\CodeIgniter\HTTP\Header::name</full_name>
        <default></default>
        <docblock line="53">
          <description>The name of the header.</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter\HTTP">
        <name>$value</name>
        <full_name>\CodeIgniter\HTTP\Header::value</full_name>
        <default></default>
        <docblock line="61">
          <description>The value of the header. May have more than one
value. If so, will be an array of strings.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="string|array" variable="">
            <type>string</type>
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="71" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Header::__construct()</full_name>
        <docblock line="71">
          <description>Header constructor. If a name or value is provided they will be set.</description>
          <long-description></long-description>
          <tag name="param" line="71" description="" type="string|null" variable="$name">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="71" description="" type="string|array|null" variable="$value">
            <type>string</type>
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string|array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="84" package="CodeIgniter\HTTP">
        <name>getName</name>
        <full_name>\CodeIgniter\HTTP\Header::getName()</full_name>
        <docblock line="84">
          <description>Returns the name of the header, in the same case it was set.</description>
          <long-description></long-description>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="97" package="CodeIgniter\HTTP">
        <name>getValue</name>
        <full_name>\CodeIgniter\HTTP\Header::getValue()</full_name>
        <docblock line="97">
          <description>Gets the raw value of the header. This may return either a string
of an array, depending on whether the header has mutliple values or not.</description>
          <long-description></long-description>
          <tag name="return" line="97" description="" type="array|null|string">
            <type>array</type>
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="111" package="CodeIgniter\HTTP">
        <name>setName</name>
        <full_name>\CodeIgniter\HTTP\Header::setName()</full_name>
        <docblock line="111">
          <description>Sets the name of the header, overwriting any previous value.</description>
          <long-description></long-description>
          <tag name="param" line="111" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="" type="\CodeIgniter\HTTP\Header">
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="127" package="CodeIgniter\HTTP">
        <name>setValue</name>
        <full_name>\CodeIgniter\HTTP\Header::setValue()</full_name>
        <docblock line="127">
          <description>Sets the value of the header, overwriting any previous value(s).</description>
          <long-description></long-description>
          <tag name="param" line="127" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="127" description="" type="\CodeIgniter\HTTP\Header">
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="144" package="CodeIgniter\HTTP">
        <name>appendValue</name>
        <full_name>\CodeIgniter\HTTP\Header::appendValue()</full_name>
        <docblock line="144">
          <description>Appends a value to the list of values for this header. If the
header is a single value string, it will be converted to an array.</description>
          <long-description></long-description>
          <tag name="param" line="144" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="144" description="" type="\CodeIgniter\HTTP\Header">
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="166" package="CodeIgniter\HTTP">
        <name>prependValue</name>
        <full_name>\CodeIgniter\HTTP\Header::prependValue()</full_name>
        <docblock line="166">
          <description>Prepends a value to the list of values for this header. If the
header is a single value string, it will be converted to an array.</description>
          <long-description></long-description>
          <tag name="param" line="166" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="166" description="" type="\CodeIgniter\HTTP\Header">
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="190" package="CodeIgniter\HTTP">
        <name>getValueLine</name>
        <full_name>\CodeIgniter\HTTP\Header::getValueLine()</full_name>
        <docblock line="190">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="see" line="190" description="" link="https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="231" package="CodeIgniter\HTTP">
        <name>__toString</name>
        <full_name>\CodeIgniter\HTTP\Header::__toString()</full_name>
        <docblock line="231">
          <description>Returns a representation of the entire header string, including
the header name and all values converted to the proper format.</description>
          <long-description></long-description>
          <tag name="return" line="231" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session/Handlers/FileHandler.php" generated-path="Session.Handlers.FileHandler.html" hash="82fac1faebf0af2bdd1f21a06df8fe6f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Session\Handlers" line="44" package="Default">
      <extends>\CodeIgniter\Session\Handlers\BaseHandler</extends>
      <implements>\SessionHandlerInterface</implements>
      <name>FileHandler</name>
      <full_name>\CodeIgniter\Session\Handlers\FileHandler</full_name>
      <docblock line="44">
        <description>Session handler using file system for storage</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler" refers="\CodeIgniter\Session\Handlers\BaseHandler" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="51" package="Default">
        <name>$savePath</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::savePath</full_name>
        <default></default>
        <docblock line="51">
          <description>Where to save the session files to.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="58" package="Default">
        <name>$fileHandle</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::fileHandle</full_name>
        <default></default>
        <docblock line="58">
          <description>The file handle</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="resource" variable="">
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="65" package="Default">
        <name>$filePath</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::filePath</full_name>
        <default></default>
        <docblock line="65">
          <description>File Name</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="resource" variable="">
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="72" package="Default">
        <name>$fileNew</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::fileNew</full_name>
        <default></default>
        <docblock line="72">
          <description>Whether this is a new file.</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="54" package="Default">
        <name>$fingerprint</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::fingerprint</full_name>
        <default></default>
        <docblock line="54">
          <description>The Data fingerprint.</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="61" package="Default">
        <name>$lock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lock</full_name>
        <default>false</default>
        <docblock line="61">
          <description>Lock placeholder.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="68" package="Default">
        <name>$cookiePrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePrefix</full_name>
        <default>''</default>
        <docblock line="68">
          <description>Cookie prefix</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="75" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieDomain</full_name>
        <default>''</default>
        <docblock line="75">
          <description>Cookie domain</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="81" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="81">
          <description>Cookie path</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="88" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieSecure</full_name>
        <default>false</default>
        <docblock line="88">
          <description>Cookie secure?</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="94" package="Default">
        <name>$cookieName</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieName</full_name>
        <default></default>
        <docblock line="94">
          <description>Cookie name to use</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="101" package="Default">
        <name>$matchIP</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::matchIP</full_name>
        <default>false</default>
        <docblock line="101">
          <description>Match IP addresses for cookies?</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="107" package="Default">
        <name>$sessionID</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::sessionID</full_name>
        <default></default>
        <docblock line="107">
          <description>Current session ID</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="80" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::__construct()</full_name>
        <docblock line="80">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="80" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" refers="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="105" package="Default">
        <name>open</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::open()</full_name>
        <docblock line="105">
          <description>Open</description>
          <long-description>Sanitizes the save_path directory.</long-description>
          <tag name="param" line="105" description="&lt;p&gt;Path to session files' directory&lt;/p&gt;" type="string" variable="$savePath">
            <type>string</type>
          </tag>
          <tag name="param" line="105" description="&lt;p&gt;Session cookie name&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="105" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$savePath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="140" package="Default">
        <name>read</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::read()</full_name>
        <docblock line="140">
          <description>Read</description>
          <long-description>Reads session data and acquires a lock</long-description>
          <tag name="param" line="140" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="Serialized session data" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="207" package="Default">
        <name>write</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::write()</full_name>
        <docblock line="207">
          <description>Write</description>
          <long-description>Writes (create / update) session data</long-description>
          <tag name="param" line="207" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="param" line="207" description="&lt;p&gt;Serialized session data&lt;/p&gt;" type="string" variable="$session_data">
            <type>string</type>
          </tag>
          <tag name="return" line="207" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$session_data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="266" package="Default">
        <name>close</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::close()</full_name>
        <docblock line="266">
          <description>Close</description>
          <long-description>Releases locks and closes file descriptor.</long-description>
          <tag name="return" line="266" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="292" package="Default">
        <name>destroy</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::destroy()</full_name>
        <docblock line="292">
          <description>Destroy</description>
          <long-description>Destroys the current session.</long-description>
          <tag name="param" line="292" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="292" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="323" package="Default">
        <name>gc</name>
        <full_name>\CodeIgniter\Session\Handlers\FileHandler::gc()</full_name>
        <docblock line="323">
          <description>Garbage Collector</description>
          <long-description>Deletes expired sessions</long-description>
          <tag name="param" line="323" description="&lt;p&gt;Maximum lifetime of sessions&lt;/p&gt;" type="integer" variable="$maxlifetime">
            <type>integer</type>
          </tag>
          <tag name="return" line="323" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$maxlifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="115" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="115">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="133" package="Default">
        <name>destroyCookie</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::destroyCookie()</full_name>
        <docblock line="133">
          <description>Internal method to force removal of a cookie by the client
when session_destroy() is called.</description>
          <long-description></long-description>
          <tag name="return" line="133" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="157" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lockSession()</full_name>
        <docblock line="157">
          <description>A dummy method allowing drivers with no locking functionality
(databases other than PostgreSQL and MySQL) to act as if they
do acquire a lock.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="170" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()</full_name>
        <docblock line="170">
          <description>Releases the lock, if any.</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\LoggerAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Postgre/Utils.php" generated-path="Database.Postgre.Utils.html" hash="d891600561111e19bba662f77df7c576" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\Postgre" line="42" package="Default">
      <extends>\CodeIgniter\Database\BaseUtils</extends>
      <name>Utils</name>
      <full_name>\CodeIgniter\Database\Postgre\Utils</full_name>
      <docblock line="42">
        <description>Utils for Postgre</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseUtils" refers="\CodeIgniter\Database\BaseUtils" link="/classes/CodeIgniter.Database.BaseUtils.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="49" package="Default">
        <name>$listDatabases</name>
        <full_name>\CodeIgniter\Database\Postgre\Utils::listDatabases</full_name>
        <default>'SELECT datname FROM pg_database'</default>
        <docblock line="49">
          <description>List databases statement</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseUtils::listDatabases" refers="\CodeIgniter\Database\BaseUtils::listDatabases" link="/classes/CodeIgniter.Database.BaseUtils.html#property_listDatabases"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="56" package="Default">
        <name>$optimizeTable</name>
        <full_name>\CodeIgniter\Database\Postgre\Utils::optimizeTable</full_name>
        <default>'REINDEX TABLE %s'</default>
        <docblock line="56">
          <description>OPTIMIZE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseUtils::optimizeTable" refers="\CodeIgniter\Database\BaseUtils::optimizeTable" link="/classes/CodeIgniter.Database.BaseUtils.html#property_optimizeTable"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="51" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\BaseUtils::db</full_name>
        <default></default>
        <docblock line="51">
          <description>Database object</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="60" package="Default">
        <name>$listDatabases</name>
        <full_name>\CodeIgniter\Database\BaseUtils::listDatabases</full_name>
        <default>FALSE</default>
        <docblock line="60">
          <description>List databases statement</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="67" package="Default">
        <name>$optimizeTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeTable</full_name>
        <default>FALSE</default>
        <docblock line="67">
          <description>OPTIMIZE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="74" package="Default">
        <name>$repairTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::repairTable</full_name>
        <default>FALSE</default>
        <docblock line="74">
          <description>REPAIR TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="67" package="Default">
        <name>_backup</name>
        <full_name>\CodeIgniter\Database\Postgre\Utils::_backup()</full_name>
        <docblock line="67">
          <description>Platform dependent version of the backup function.</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="array|null" variable="$prefs">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="67" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseUtils::_backup()" refers="\CodeIgniter\Database\BaseUtils::_backup()" link="/classes/CodeIgniter.Database.BaseUtils.html#method__backup"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefs</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="83" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseUtils::__construct()</full_name>
        <docblock line="83">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="\CodeIgniter\Database\ConnectionInterface|object" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface|object</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="95" package="Default">
        <name>listDatabases</name>
        <full_name>\CodeIgniter\Database\BaseUtils::listDatabases()</full_name>
        <docblock line="95">
          <description>List databases</description>
          <long-description></long-description>
          <tag name="return" line="95" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="135" package="Default">
        <name>databaseExists</name>
        <full_name>\CodeIgniter\Database\BaseUtils::databaseExists()</full_name>
        <docblock line="135">
          <description>Determine if a particular database exists</description>
          <long-description></long-description>
          <tag name="param" line="135" description="" type="string" variable="$database_name">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$database_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="148" package="Default">
        <name>optimizeTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeTable()</full_name>
        <docblock line="148">
          <description>Optimize Table</description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="148" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="176" package="Default">
        <name>optimizeDatabase</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeDatabase()</full_name>
        <docblock line="176">
          <description>Optimize Database</description>
          <long-description></long-description>
          <tag name="return" line="176" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="217" package="Default">
        <name>repairTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::repairTable()</full_name>
        <docblock line="217">
          <description>Repair Table</description>
          <long-description></long-description>
          <tag name="param" line="217" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="217" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="249" package="Default">
        <name>getCSVFromResult</name>
        <full_name>\CodeIgniter\Database\BaseUtils::getCSVFromResult()</full_name>
        <docblock line="249">
          <description>Generate CSV from a query result object</description>
          <long-description></long-description>
          <tag name="param" line="249" description="&lt;p&gt;Query result object&lt;/p&gt;" type="object" variable="$query">
            <type>object</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Delimiter (default: ,)&lt;/p&gt;" type="string" variable="$delim">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Newline character (default: \n)&lt;/p&gt;" type="string" variable="$newline">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Enclosure (default: &quot;)&lt;/p&gt;" type="string" variable="$enclosure">
            <type>string</type>
          </tag>
          <tag name="return" line="249" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$delim</name>
          <default>','</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newline</name>
          <default>"\n"</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$enclosure</name>
          <default>'"'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="283" package="Default">
        <name>getXMLFromResult</name>
        <full_name>\CodeIgniter\Database\BaseUtils::getXMLFromResult()</full_name>
        <docblock line="283">
          <description>Generate XML data from a query result object</description>
          <long-description></long-description>
          <tag name="param" line="283" description="&lt;p&gt;Query result object&lt;/p&gt;" type="object" variable="$query">
            <type>object</type>
          </tag>
          <tag name="param" line="283" description="&lt;p&gt;Any preferences&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="283" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="323" package="Default">
        <name>backup</name>
        <full_name>\CodeIgniter\Database\BaseUtils::backup()</full_name>
        <docblock line="323">
          <description>Database Backup</description>
          <long-description></long-description>
          <tag name="param" line="323" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="323" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="434" package="Default">
        <name>_backup</name>
        <full_name>\CodeIgniter\Database\BaseUtils::_backup()</full_name>
        <docblock line="434">
          <description>Platform dependent version of the backup function.</description>
          <long-description></long-description>
          <tag name="param" line="434" description="" type="array|null" variable="$prefs">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="434" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefs</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseUtils</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVW1v2zYQ/mz/ikPQIUmh2t0L9qHdsCo2EwuzJUGSm2YoUNASbXGVSYGk4mZb//vuKNlJi30ZUCOwQ/LuuXvujg9/+a2tW1B8L2zLSwEzXYlop6QT5v2cO77hVrxPtXU7I16Px9Pnz8fw/KkVLmknVKBbocDqziAMb9tGltxJraAS96LR7V4oB1uDkQ7afIStNpAu0sG9qKWFUitHRvivEY3AyBV0qhIGXC1gFRWwlKVQVsAFLi4H15luH4zc1Q4uykv44eX3P8EL+vk5gCsjnbQ1mjTdfiM5RMo66TonQG+hEGWtdKN3DwNSKsxeWks5Ywq1MGLzADvDMasqwNSFdytrbnYiAKeBqwdohbHooDeOSyXVDjjyaAmSjB3xsnrrDtxgVVQF3FpdSo6QUOmyo6r0ZdrKRli4IKpn+eBxdunjVII3BCiVr8TxFA7S1bpzWC3rjCwJJkCjsukqyuR43Mi9HIKQuy+WJTyE7ixSoYQD2OtKbulXeH5tt2mweAFUktA3WLUALG36HgTEZopNtKLxySGIRAKe9GOO3owCtVRcN5TL0s6h1vsv+Uif1bYzCgML71ZpLJ+P+6coHe2Qx1Y3jT4QR5yZShI1++o0Sljojb4XnlY/GUo7Wfb19x1pHzs9HNmaNw1sxFA+DC4VodHukZmhNKzDeZC8gVYbH/drxpNjHgsGeXJd3IYZgyiHNEveRnM2h7Mwx/VZALdRsUjWBaBFFsbFHSTXEMZ38HsUzwNg79KM5TkkGaFFq3QZMdyO4tlyPY/iG7hC1zjBSxHhbUDcIvExB7SI5YS3YtlsgcvwKlpGxV1AWNdRERPydZJBCGmYFdFsvQwzSNdZmuQMk5gjchzF1xkGYisWFxMMjHvA3uIC8kW4XFI0f/XXSCOjRGGWpHdZdLMoYJEs5ww3rxjmF14tWR8N2c2WYbQKYB6uwhvmvRIE8iTJsk8TbheMdilqiH+zIkpi4jNL4iLDZYB0s+LkfRvlLIAwi3KqzHWWrDxTqi46JR4HXWPWA1Hlv2wQmtB6nbMTJsxZuEQ47Fb8dUOPTX6DovmR78ToS0WEN7zDu2eebsNc3KPm8L0/P83m6BvoF1zUzrWvptNNKd2k5NNLH2O4qaPhkPS5l+eJNrvpcGqnOD2jJ+I6uKqPR78SOciew6TUffoWr4kYvcXLTHfox8nLyUu/70XMx8Dl9PRerJ1sbC/5/VPiT8sGxXA4E59Q+isL7//zAbrCL283/ns8IswRTQvqElSDCaosSpwgOaVDb/DmnpsRaZfa0Xo6HrVGO5QRvN3PUNvc/OT8K5znbInTQYD0GvoZgnb34RjgHF+/U+gkLfDS/cGg8KP9P0Pr1qEi/yUKvmkEhc4Y3nj2bkD7zvaxpi++wedJ0mnDHbZgj88JTkJFL+390MBBwjY4zF2LAqz8WzJ5pNNyfLiBG8Mf/lEdauKz1oitfTQwwqFsw15+EtWRsX8rTmjwoYe/8CgDALInuMvxCBs7crXRB1DiAMfOsE+laMn74nytbNeS6GIJt4JjOHHM+9gjaI8UH3QH9KJ0OKi7yfnl6/Ho87er6efxv5980LI=</source>
  </file>
  <file path="HTTP/ResponseInterface.php" generated-path="HTTP.ResponseInterface.html" hash="bf2fb55a61bdb25e3216345e4a1fef64" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\HTTP" line="52" package="CodeIgniter\HTTP">
      <name>ResponseInterface</name>
      <full_name>\CodeIgniter\HTTP\ResponseInterface</full_name>
      <docblock line="52">
        <description>Representation of an outgoing, getServer-side response.</description>
        <long-description>Per the HTTP specification, this interface includes properties for
each of the following:

- Protocol version
- Status code and reason phrase
- Headers
- Message body</long-description>
        <tag name="package" line="52" description="CodeIgniter\HTTP"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="62" package="CodeIgniter\HTTP">
        <name>getStatusCode</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::getStatusCode()</full_name>
        <docblock line="62">
          <description>Gets the response status code.</description>
          <long-description>The status code is a 3-digit integer result code of the getServer's attempt
to understand and satisfy the request.</long-description>
          <tag name="return" line="62" description="Status code." type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="83" package="CodeIgniter\HTTP">
        <name>setStatusCode</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::setStatusCode()</full_name>
        <docblock line="83">
          <description>Return an instance with the specified status code and, optionally, reason phrase.</description>
          <long-description>If no reason phrase is specified, will default recommended reason phrase for
the response's status code.</long-description>
          <tag name="see" line="83" description="" link="http://tools.ietf.org/html/rfc7231#section-6"/>
          <tag name="see" line="83" description="" link="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml"/>
          <tag name="param" line="83" description="&lt;p&gt;The 3-digit integer result code to set.&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="83" description="&lt;p&gt;The reason phrase to use with the&#10;                            provided status code; if none is provided, will&#10;                            default to the IANA name.&lt;/p&gt;" type="string" variable="$reason">
            <type>string</type>
          </tag>
          <tag name="return" line="83" description="" type="\CodeIgniter\HTTP\ResponseInterface">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
          <tag name="throws" line="83" description="For invalid status code arguments." type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reason</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="95" package="CodeIgniter\HTTP">
        <name>getReason</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::getReason()</full_name>
        <docblock line="95">
          <description>Gets the response response phrase associated with the status code.</description>
          <long-description></long-description>
          <tag name="see" line="95" description="" link="http://tools.ietf.org/html/rfc7231#section-6"/>
          <tag name="see" line="95" description="" link="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml"/>
          <tag name="return" line="95" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="110" package="CodeIgniter\HTTP">
        <name>setDate</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::setDate()</full_name>
        <docblock line="110">
          <description>Sets the date header</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="\DateTime" variable="$date">
            <type>\DateTime</type>
          </tag>
          <tag name="return" line="110" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="123" package="CodeIgniter\HTTP">
        <name>setContentType</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::setContentType()</full_name>
        <docblock line="123">
          <description>Sets the Content Type header for this response with the mime type
and, optionally, the charset.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="" type="string" variable="$mime">
            <type>string</type>
          </tag>
          <tag name="param" line="123" description="" type="string" variable="$charset">
            <type>string</type>
          </tag>
          <tag name="return" line="123" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mime</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$charset</name>
          <default>'UTF-8'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="138" package="CodeIgniter\HTTP">
        <name>noCache</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::noCache()</full_name>
        <docblock line="138">
          <description>Sets the appropriate headers to ensure this response
is not cached by the browsers.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="170" package="CodeIgniter\HTTP">
        <name>setCache</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::setCache()</full_name>
        <docblock line="170">
          <description>A shortcut method that allows the developer to set all of the
cache-control headers in one method call.</description>
          <long-description>The options array is used to provide the cache-control directives
for the header. It might look something like:

     $options = [
         'max-age'  =&gt; 300,
         's-maxage' =&gt; 900
         'etag'     =&gt; 'abcde',
     ];

Typical options are:
 - etag
 - last-modified
 - max-age
 - s-maxage
 - private
 - public
 - must-revalidate
 - proxy-revalidate
 - no-transform</long-description>
          <tag name="param" line="170" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="170" description="" type="\CodeIgniter\HTTP\ResponseInterface">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="182" package="CodeIgniter\HTTP">
        <name>setLastModified</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::setLastModified()</full_name>
        <docblock line="182">
          <description>Sets the Last-Modified date header.</description>
          <long-description>$date can be either a string representation of the date or,
preferably, an instance of DateTime.</long-description>
          <tag name="param" line="182" description="" type="" variable="$date"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="196" package="CodeIgniter\HTTP">
        <name>send</name>
        <full_name>\CodeIgniter\HTTP\ResponseInterface::send()</full_name>
        <docblock line="196">
          <description>Sends the output to the browser.</description>
          <long-description></long-description>
          <tag name="return" line="196" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/Handlers/HandlerInterface.php" generated-path="Log.Handlers.HandlerInterface.html" hash="23d14d63ea78e641e2105b3cbd6c251f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Log\Handlers" line="39" package="CodeIgniter">
      <name>HandlerInterface</name>
      <full_name>\CodeIgniter\Log\Handlers\HandlerInterface</full_name>
      <docblock line="39">
        <description>CodeIgniter</description>
        <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
        <tag name="package" line="39" description="CodeIgniter"/>
        <tag name="author" line="39" description="CodeIgniter Dev Team"/>
        <tag name="copyright" line="39" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
        <tag name="license" line="39" description="MIT License" link="http://opensource.org/licenses/MIT"/>
        <tag name="link" line="39" description="http://codeigniter.com" link="http://codeigniter.com"/>
        <tag name="since" line="39" description="Version 3.0.0"/>
        <tag name="filesource" line="39" description=""/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="52" package="CodeIgniter">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\HandlerInterface::handle()</full_name>
        <docblock line="52">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="52" description="" type="" variable="$level"/>
          <tag name="param" line="52" description="" type="" variable="$message"/>
          <tag name="return" line="52" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="64" package="CodeIgniter">
        <name>canHandle</name>
        <full_name>\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()</full_name>
        <docblock line="64">
          <description>Checks whether the Handler will handle logging items of this
log Level.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="" type="integer" variable="$level">
            <type>integer</type>
          </tag>
          <tag name="return" line="64" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="75" package="CodeIgniter">
        <name>setDateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()</full_name>
        <docblock line="75">
          <description>Sets the preferred date format to use when logging.</description>
          <long-description></long-description>
          <tag name="param" line="75" description="" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="75" description="" type="\CodeIgniter\Log\Handlers\HandlerInterface">
            <type>\CodeIgniter\Log\Handlers\HandlerInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vk1v4zYQPdu/YhD04ARae/uBHtICXcWW18TKkiEpmwbYCy3RFhuZFEgqblD0v3eGkp1k00MPW8OAw+HMm3mP5Ex+/a2tW1D8IGzLSwFzXQm2V9IJ8yXW+y8rrqpGGPvLeDy7uhrD1UsPXJIlVKBbocDqziAEb9tGltxJraASj6LR7UEoBzuDWY7aPMBOG9isNkN4UUsLpVaOnPBPIxrBraigU5Uw4GoBa1ZALEuhrIAJLi6H0Llun4zc1w4m5SX88P77n+Ad/fwcwI2RTtoaXZrusJUcmLJOus4J0DsoRFkr3ej904C0EeYgraWasYRaGLF9gr3hWFUVYOnCh5U1N3sRgNPA1RO0KAwG6K3jUkm1B448WoIkZ0e8rN65IzeoiqqAW6tLyRESKl12pEov0042wsKEqF7kQ8TFpc9TCd4QoFReidMuHKWrdedQLeuMLAkmQKey6Sqq5LTdyIMcklC4F8sSHkJ3FqlQwQEcdCV39Cs8v7bbNiheAJUk9C2qFoAloz+DgNjM8BCtaHxxCCKRgCf9XKN3o0QtiesGuSxZjrU+vOYjfVW7zihMLHxYpVE+n/cPUTqyUMRON40+Eke8M5Ukavb6fJVQ6K1+FJ5WfzOUdrLs9fcn0j6f9LBla940sBWDfJhcKkIj64mZoTKsw/sgeQOtNj7v14ynpzpWEeTpsrgLswhYDpss/cwW0QIuwhzXFwHcsWKV3haAHlmYFPeQLiFM7uETSxYBRL9vsijPIc0Ija03MYvQzJJ5fLtgyUe4wdAkxUfB8DUgbpH6nAMai3LCW0fZfIXL8IbFrLgPCGvJioSQl2kGIWzCrGDz2zjMYHObbdI8wiIWiJywZJlhomgdJcUUE6MNos+4gHwVxjFl80//FmlkVCjM0819xj6uClil8SJC402E9YU3cdRnQ3bzOGTrABbhOvwY+agUgTxJ8uzLhLtVRFbKGuJ3XrA0IT7zNCkyXAZINyvO0XcsjwIIM5aTMsssXXumpC4GpR4HQ5OoByLlXx8QutD6No/OmLCIwhjh8LSSrw/0dMgfsGE+8L0Yve6I8IF3+PbMSzMsxCP2HH7w++e7OfoG/QsmtXPt9Wy2LaWblnx26XMML3U0bFJ/7tvzVJv9bNi1M7w9oxfNdQhVD6e4EjnInsO01H35Fp+JGH3Gx0xv6Mfp++l7b/dNzOfA5Ww8ltg7zY6GyjBE2Mkw/ms8omkywrB+zwJy2dOjpueEw8iisFPvwPonVvcY2O8c9ggLO95QI8ItBeJPUXa+x6E0g6P1wUeJb9g63U5xSj2d9zCMO1xho8AeAKbD3vkkXND7o8kHY0fAHV+FX+OB4wiD7xoaaq8sQ8HPnn2VsNXaO87GI99SS2xwyvfqoZRJDxacIS6vfRCO29Fs9u4bfMbPUs9rUT5Y7L0CVesH63AyPe++pPNJ4KEf7GmQeQDcgZjqfaMJnvULXf6rBiVXfQETmjKYsof4PzXIhbOeeWvEThhDoxgHMv1LcuBumIokkTrp8IbrqdY+5A3fN5f937lb4RaYeOlBJq8xL78l9b/H/wCRdPzv</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Routes.php" generated-path="Debug.Toolbar.Collectors.Routes.html" hash="5d84c01941af16334b9f8f815ed75ebf" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="44" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Routes</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Routes</full_name>
      <docblock line="44">
        <description>Routes collector</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="52" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Routes::hasTimeline</full_name>
        <default>false</default>
        <docblock line="52">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="60" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Routes::hasTabContent</full_name>
        <default>true</default>
        <docblock line="60">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="68" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Routes::title</full_name>
        <default>'Routes'</default>
        <docblock line="68">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="68" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="78" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Routes::display()</full_name>
        <docblock line="78">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_display"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="View/Exception/InvalidArgumentException.php" generated-path="View.Exception.InvalidArgumentException.html" hash="dd348e4ccedeb3b344b41d9942d9e91c" package="Default">
    <docblock line="0">
      <description>Zend Framework (http://framework.zend.com/)</description>
      <long-description></long-description>
      <tag name="link" line="0" description="for the canonical source repository" link="http://github.com/zendframework/zf2"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Zend\Escaper\Exception" line="15" package="Default">
      <extends>\InvalidArgumentException</extends>
      <implements>\Zend\Escaper\Exception\ExceptionInterface</implements>
      <name>InvalidArgumentException</name>
      <full_name>\Zend\Escaper\Exception\InvalidArgumentException</full_name>
      <docblock line="15">
        <description>Invalid argument exception</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
    </class>
    <source>eJx1kbFOwzAURXd/xRvbSI1DpC6ABAWKFAmxFBbUxXVfEqvJs2U7hBbx7zhpEpbiyXo+9+rYvr0zpWE8ihhE8IG0h2cramy1PcCs9N5cc56Pk/gUgFjqms8D3iXuK0UH6NcAF8qXza6HOnrK8lOeQq4t+BJBCtKkpKjA6cZKBItGO+W1PfatUpujVUXp4XHazeQc0iRZLtLkanlWfUNZkq50odDB+2YFGcl40m7bdhKeD7ISyeGf7IWbDQwnbBc7t4dXbOFh8wQv53no4YxRiDkjgnjnsV07KQza7fpLovFK0w0bnzSjT1GpPQhbNDWSBxyZvklWwrkRWg3MVBNgH/odbP8lVG0q7EaOdZ8wHWTk0ebBkH2zH/YL4cekgg==</source>
  </file>
  <file path="HTTP/URI.php" generated-path="HTTP.URI.html" hash="332bfd43ca56dbebf69fa9563bb1fb48" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="39" package="CodeIgniter">
      <extends/>
      <name>URI</name>
      <full_name>\CodeIgniter\HTTP\URI</full_name>
      <docblock line="39">
        <description>CodeIgniter</description>
        <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
        <tag name="package" line="39" description="CodeIgniter"/>
        <tag name="author" line="39" description="CodeIgniter Dev Team"/>
        <tag name="copyright" line="39" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
        <tag name="license" line="39" description="MIT License" link="http://opensource.org/licenses/MIT"/>
        <tag name="link" line="39" description="http://codeigniter.com" link="http://codeigniter.com"/>
        <tag name="since" line="39" description="Version 3.0.0"/>
        <tag name="filesource" line="39" description=""/>
      </docblock>
      <constant namespace="CodeIgniter\HTTP" line="47" package="CodeIgniter">
        <name>CHAR_SUB_DELIMS</name>
        <full_name>\CodeIgniter\HTTP\URI::CHAR_SUB_DELIMS</full_name>
        <value>'!\$&amp;\'\(\)\*\+,;='</value>
        <docblock line="47">
          <description>Sub-delimiters used in query strings and fragments.</description>
          <long-description></long-description>
          <tag name="const" line="47" description="string"/>
        </docblock>
      </constant>
      <constant namespace="CodeIgniter\HTTP" line="53" package="CodeIgniter">
        <name>CHAR_UNRESERVED</name>
        <full_name>\CodeIgniter\HTTP\URI::CHAR_UNRESERVED</full_name>
        <value>'a-zA-Z0-9_\-\.~'</value>
        <docblock line="53">
          <description>Unreserved characters used in paths, query strings, and fragments.</description>
          <long-description></long-description>
          <tag name="const" line="53" description="string"/>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="60" package="CodeIgniter">
        <name>$uriString</name>
        <full_name>\CodeIgniter\HTTP\URI::uriString</full_name>
        <default></default>
        <docblock line="60">
          <description>Current URI string</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="69" package="CodeIgniter">
        <name>$segments</name>
        <full_name>\CodeIgniter\HTTP\URI::segments</full_name>
        <default>array()</default>
        <docblock line="69">
          <description>List of URI segments.</description>
          <long-description>Starts at 1 instead of 0</long-description>
          <tag name="var" line="69" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="76" package="CodeIgniter">
        <name>$scheme</name>
        <full_name>\CodeIgniter\HTTP\URI::scheme</full_name>
        <default>'http'</default>
        <docblock line="76">
          <description>The URI Scheme.</description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="83" package="CodeIgniter">
        <name>$user</name>
        <full_name>\CodeIgniter\HTTP\URI::user</full_name>
        <default></default>
        <docblock line="83">
          <description>URI User Info</description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="90" package="CodeIgniter">
        <name>$password</name>
        <full_name>\CodeIgniter\HTTP\URI::password</full_name>
        <default></default>
        <docblock line="90">
          <description>URI User Password</description>
          <long-description></long-description>
          <tag name="var" line="90" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="97" package="CodeIgniter">
        <name>$host</name>
        <full_name>\CodeIgniter\HTTP\URI::host</full_name>
        <default></default>
        <docblock line="97">
          <description>URI Host</description>
          <long-description></long-description>
          <tag name="var" line="97" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="104" package="CodeIgniter">
        <name>$port</name>
        <full_name>\CodeIgniter\HTTP\URI::port</full_name>
        <default></default>
        <docblock line="104">
          <description>URI Port</description>
          <long-description></long-description>
          <tag name="var" line="104" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="111" package="CodeIgniter">
        <name>$path</name>
        <full_name>\CodeIgniter\HTTP\URI::path</full_name>
        <default></default>
        <docblock line="111">
          <description>URI path.</description>
          <long-description></long-description>
          <tag name="var" line="111" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="118" package="CodeIgniter">
        <name>$fragment</name>
        <full_name>\CodeIgniter\HTTP\URI::fragment</full_name>
        <default>''</default>
        <docblock line="118">
          <description>The name of any fragment.</description>
          <long-description></long-description>
          <tag name="var" line="118" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="125" package="CodeIgniter">
        <name>$query</name>
        <full_name>\CodeIgniter\HTTP\URI::query</full_name>
        <default>''</default>
        <docblock line="125">
          <description>The query string.</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="132" package="CodeIgniter">
        <name>$defaultPorts</name>
        <full_name>\CodeIgniter\HTTP\URI::defaultPorts</full_name>
        <default>array('http' =&gt; 80, 'https' =&gt; 443)</default>
        <docblock line="132">
          <description>Default schemes/ports.</description>
          <long-description></long-description>
          <tag name="var" line="132" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="143" package="CodeIgniter">
        <name>$showPassword</name>
        <full_name>\CodeIgniter\HTTP\URI::showPassword</full_name>
        <default>false</default>
        <docblock line="143">
          <description>Whether passwords should be shown in userInfo/authority calls.</description>
          <long-description>Default to false because URIs often show up in logs</long-description>
          <tag name="var" line="143" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="153" package="CodeIgniter">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\URI::__construct()</full_name>
        <docblock line="153">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="string" variable="$uri">
            <type>string</type>
          </tag>
          <tag name="throws" line="153" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="175" package="CodeIgniter">
        <name>setURI</name>
        <full_name>\CodeIgniter\HTTP\URI::setURI()</full_name>
        <docblock line="175">
          <description>Sets and overwrites any current URI information.</description>
          <long-description></long-description>
          <tag name="param" line="175" description="" type="string|null" variable="$uri">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="209" package="CodeIgniter">
        <name>getScheme</name>
        <full_name>\CodeIgniter\HTTP\URI::getScheme()</full_name>
        <docblock line="209">
          <description>Retrieve the scheme component of the URI.</description>
          <long-description>If no scheme is present, this method MUST return an empty string.

The value returned MUST be normalized to lowercase, per RFC 3986
Section 3.1.

The trailing ":" character is not part of the scheme and MUST NOT be
added.</long-description>
          <tag name="see" line="209" description="" link="https://tools.ietf.org/html/rfc3986#section-3.1"/>
          <tag name="return" line="209" description="The URI scheme." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="235" package="CodeIgniter">
        <name>getAuthority</name>
        <full_name>\CodeIgniter\HTTP\URI::getAuthority()</full_name>
        <docblock line="235">
          <description>Retrieve the authority component of the URI.</description>
          <long-description>If no authority information is present, this method MUST return an empty
string.

The authority syntax of the URI is:

&lt;pre&gt;
[user-info@]host[:port]
&lt;/pre&gt;

If the port component is not set or is the standard port for the current
scheme, it SHOULD NOT be included.</long-description>
          <tag name="see" line="235" description="" link="https://tools.ietf.org/html/rfc3986#section-3.2"/>
          <tag name="param" line="235" description="" type="boolean" variable="$ignorePort">
            <type>boolean</type>
          </tag>
          <tag name="return" line="235" description="The URI authority, in &quot;[user-info@]host[:port]&quot; format." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ignorePort</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="286" package="CodeIgniter">
        <name>getUserInfo</name>
        <full_name>\CodeIgniter\HTTP\URI::getUserInfo()</full_name>
        <docblock line="286">
          <description>Retrieve the user information component of the URI.</description>
          <long-description>If no user information is present, this method MUST return an empty
string.

If a user is present in the URI, this will return that value;
additionally, if the password is also present, it will be appended to the
user value, with a colon (":") separating the values.

NOTE that be default, the password, if available, will NOT be shown
as a security measure as discussed in RFC 3986, Section 7.5. If you know
the password is not a security issue, you can force it to be shown
with $this-&gt;showPassword();

The trailing "@" character is not part of the user information and MUST
NOT be added.</long-description>
          <tag name="return" line="286" description="The URI user information, in &quot;username[:password]&quot; format." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="304" package="CodeIgniter">
        <name>showPassword</name>
        <full_name>\CodeIgniter\HTTP\URI::showPassword()</full_name>
        <docblock line="304">
          <description>Temporarily sets the URI to show a password in userInfo. Will
reset itself after the first call to authority().</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="322" package="CodeIgniter">
        <name>getHost</name>
        <full_name>\CodeIgniter\HTTP\URI::getHost()</full_name>
        <docblock line="322">
          <description>Retrieve the host component of the URI.</description>
          <long-description>If no host is present, this method MUST return an empty string.

The value returned MUST be normalized to lowercase, per RFC 3986
Section 3.2.2.</long-description>
          <tag name="see" line="322" description="" link="http://tools.ietf.org/html/rfc3986#section-3.2.2"/>
          <tag name="return" line="322" description="The URI host." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getPort</name>
        <full_name>\CodeIgniter\HTTP\URI::getPort()</full_name>
        <docblock line="344">
          <description>Retrieve the port component of the URI.</description>
          <long-description>If a port is present, and it is non-standard for the current scheme,
this method MUST return it as an integer. If the port is the standard port
used with the current scheme, this method SHOULD return null.

If no port is present, and no scheme is present, this method MUST return
a null value.

If no port is present, but a scheme is present, this method MAY return
the standard port for that scheme, but SHOULD return null.</long-description>
          <tag name="return" line="344" description="The URI port." type="null|integer">
            <type>null</type>
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="376" package="CodeIgniter">
        <name>getPath</name>
        <full_name>\CodeIgniter\HTTP\URI::getPath()</full_name>
        <docblock line="376">
          <description>Retrieve the path component of the URI.</description>
          <long-description>The path can either be empty or absolute (starting with a slash) or
rootless (not starting with a slash). Implementations MUST support all
three syntaxes.

Normally, the empty path "" and absolute path "/" are considered equal as
defined in RFC 7230 Section 2.7.3. But this method MUST NOT automatically
do this normalization because in contexts with a trimmed base path, e.g.
the front controller, this difference becomes significant. It's the task
of the user to handle both "" and "/".

The value returned MUST be percent-encoded, but MUST NOT double-encode
any characters. To determine what characters to encode, please refer to
RFC 3986, Sections 2 and 3.3.

As an example, if the value should include a slash ("/") not intended as
delimiter between path segments, that value MUST be passed in encoded
form (e.g., "%2F") to the instance.</long-description>
          <tag name="see" line="376" description="" link="https://tools.ietf.org/html/rfc3986#section-2"/>
          <tag name="see" line="376" description="" link="https://tools.ietf.org/html/rfc3986#section-3.3"/>
          <tag name="return" line="376" description="The URI path." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="387" package="CodeIgniter">
        <name>getQuery</name>
        <full_name>\CodeIgniter\HTTP\URI::getQuery()</full_name>
        <docblock line="387">
          <description>Retrieve the query string</description>
          <long-description></long-description>
          <tag name="return" line="387" description="" type="\CodeIgniter\HTTP\type">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="399" package="CodeIgniter">
        <name>getFragment</name>
        <full_name>\CodeIgniter\HTTP\URI::getFragment()</full_name>
        <docblock line="399">
          <description>Retrieve a URI fragment</description>
          <long-description></long-description>
          <tag name="return" line="399" description="" type="\CodeIgniter\HTTP\type">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="411" package="CodeIgniter">
        <name>getSegments</name>
        <full_name>\CodeIgniter\HTTP\URI::getSegments()</full_name>
        <docblock line="411">
          <description>Returns the segments of the path as an array.</description>
          <long-description></long-description>
          <tag name="return" line="411" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="426" package="CodeIgniter">
        <name>getSegment</name>
        <full_name>\CodeIgniter\HTTP\URI::getSegment()</full_name>
        <docblock line="426">
          <description>Returns the value of a specific segment of the URI path.</description>
          <long-description></long-description>
          <tag name="param" line="426" description="" type="integer" variable="$number">
            <type>integer</type>
          </tag>
          <tag name="return" line="426" description="The value of the segment. If no segment is found,&#10;                   throws InvalidArgumentError" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$number</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="447" package="CodeIgniter">
        <name>getTotalSegments</name>
        <full_name>\CodeIgniter\HTTP\URI::getTotalSegments()</full_name>
        <docblock line="447">
          <description>Returns the total number of segments.</description>
          <long-description></long-description>
          <tag name="return" line="447" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="458" package="CodeIgniter">
        <name>__toString</name>
        <full_name>\CodeIgniter\HTTP\URI::__toString()</full_name>
        <docblock line="458">
          <description>Allow the URI to be output as a string by simply casting it to a string
or echoing out.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\HTTP" line="483" package="CodeIgniter">
        <name>createURIString</name>
        <full_name>\CodeIgniter\HTTP\URI::createURIString()</full_name>
        <docblock line="483">
          <description>Builds a representation of the string from the component parts.</description>
          <long-description></long-description>
          <tag name="param" line="483" description="" type="" variable="$scheme"/>
          <tag name="param" line="483" description="" type="" variable="$authority"/>
          <tag name="param" line="483" description="" type="" variable="$path"/>
          <tag name="param" line="483" description="" type="" variable="$query"/>
          <tag name="param" line="483" description="" type="" variable="$fragment"/>
          <tag name="param" line="483" description="" type="" variable="$ignorePort"/>
          <tag name="return" line="483" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$scheme</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$authority</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fragment</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="525" package="CodeIgniter">
        <name>setAuthority</name>
        <full_name>\CodeIgniter\HTTP\URI::setAuthority()</full_name>
        <docblock line="525">
          <description>Parses the given string an saves the appropriate authority pieces.</description>
          <long-description></long-description>
          <tag name="param" line="525" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="555" package="CodeIgniter">
        <name>setScheme</name>
        <full_name>\CodeIgniter\HTTP\URI::setScheme()</full_name>
        <docblock line="555">
          <description>Sets the scheme for this URI.</description>
          <long-description>Because of the large number of valid schemes we cannot limit this
to only http or https.</long-description>
          <tag name="see" line="555" description="" link="https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml"/>
          <tag name="param" line="555" description="" type="" variable="$str"/>
          <tag name="return" line="555" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="575" package="CodeIgniter">
        <name>setUserInfo</name>
        <full_name>\CodeIgniter\HTTP\URI::setUserInfo()</full_name>
        <docblock line="575">
          <description>Sets the userInfo/Authority portion of the URI.</description>
          <long-description></long-description>
          <tag name="param" line="575" description="&lt;p&gt;The user's username&lt;/p&gt;" type="string" variable="$user">
            <type>string</type>
          </tag>
          <tag name="param" line="575" description="&lt;p&gt;The user's password&lt;/p&gt;" type="string" variable="$pass">
            <type>string</type>
          </tag>
          <tag name="return" line="575" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$user</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pass</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="592" package="CodeIgniter">
        <name>setHost</name>
        <full_name>\CodeIgniter\HTTP\URI::setHost()</full_name>
        <docblock line="592">
          <description>Sets the host name to use.</description>
          <long-description></long-description>
          <tag name="param" line="592" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="592" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="608" package="CodeIgniter">
        <name>setPort</name>
        <full_name>\CodeIgniter\HTTP\URI::setPort()</full_name>
        <docblock line="608">
          <description>Sets the port portion of the URI.</description>
          <long-description></long-description>
          <tag name="param" line="608" description="" type="integer" variable="$port">
            <type>integer</type>
          </tag>
          <tag name="return" line="608" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$port</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="631" package="CodeIgniter">
        <name>setPath</name>
        <full_name>\CodeIgniter\HTTP\URI::setPath()</full_name>
        <docblock line="631">
          <description>Sets the path portion of the URI.</description>
          <long-description></long-description>
          <tag name="param" line="631" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="631" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="650" package="CodeIgniter">
        <name>setQuery</name>
        <full_name>\CodeIgniter\HTTP\URI::setQuery()</full_name>
        <docblock line="650">
          <description>Sets the query portion of the URI, while attempting
to clean the various parts of the query keys and values.</description>
          <long-description></long-description>
          <tag name="param" line="650" description="" type="string" variable="$query">
            <type>string</type>
          </tag>
          <tag name="return" line="650" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="694" package="CodeIgniter">
        <name>splitQueryPart</name>
        <full_name>\CodeIgniter\HTTP\URI::splitQueryPart()</full_name>
        <docblock line="694">
          <description>Split a query value into it's key/value elements, if both
are present.</description>
          <long-description></long-description>
          <tag name="param" line="694" description="" type="" variable="$part"/>
          <tag name="return" line="694" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$part</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="720" package="CodeIgniter">
        <name>filterQuery</name>
        <full_name>\CodeIgniter\HTTP\URI::filterQuery()</full_name>
        <docblock line="720">
          <description>Ensures the query string has only acceptable characters
per RFC 3986</description>
          <long-description></long-description>
          <tag name="see" line="720" description="" link="http://tools.ietf.org/html/rfc3986"/>
          <tag name="param" line="720" description="" type="" variable="$str"/>
          <tag name="return" line="720" description="The filtered query value." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="740" package="CodeIgniter">
        <name>setQueryArray</name>
        <full_name>\CodeIgniter\HTTP\URI::setQueryArray()</full_name>
        <docblock line="740">
          <description>A convenience method to pass an array of items in as the Query
portion of the URI.</description>
          <long-description></long-description>
          <tag name="param" line="740" description="" type="array" variable="$query">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="756" package="CodeIgniter">
        <name>setFragment</name>
        <full_name>\CodeIgniter\HTTP\URI::setFragment()</full_name>
        <docblock line="756">
          <description>Sets the fragment portion of the URI.</description>
          <long-description></long-description>
          <tag name="param" line="756" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="756" description="" type="\CodeIgniter\HTTP\URI">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="772" package="CodeIgniter">
        <name>filterPath</name>
        <full_name>\CodeIgniter\HTTP\URI::filterPath()</full_name>
        <docblock line="772">
          <description>Encodes any dangerous characters, and removes dot segments.</description>
          <long-description>While dot segments have valid uses according to the spec,
this URI class does not allow them.</long-description>
          <tag name="param" line="772" description="" type="" variable="$path"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="809" package="CodeIgniter">
        <name>applyParts</name>
        <full_name>\CodeIgniter\HTTP\URI::applyParts()</full_name>
        <docblock line="809">
          <description>Saves our parts from a parse_url call.</description>
          <long-description></long-description>
          <tag name="param" line="809" description="" type="" variable="$parts"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$parts</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="861" package="CodeIgniter">
        <name>resolveRelativeURI</name>
        <full_name>\CodeIgniter\HTTP\URI::resolveRelativeURI()</full_name>
        <docblock line="861">
          <description>Combines one URI string with this one based on the rules set out in
RFC 3986 Section 2</description>
          <long-description></long-description>
          <tag name="see" line="861" description="" link="http://tools.ietf.org/html/rfc3986#section-5.2"/>
          <tag name="param" line="861" description="" type="string" variable="$uri">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="944" package="CodeIgniter">
        <name>mergePaths</name>
        <full_name>\CodeIgniter\HTTP\URI::mergePaths()</full_name>
        <docblock line="944">
          <description>Given 2 paths, will merge them according to rules set out in RFC 2986,
Section 5.2</description>
          <long-description></long-description>
          <tag name="see" line="944" description="" link="http://tools.ietf.org/html/rfc3986#section-5.2.3"/>
          <tag name="param" line="944" description="" type="\CodeIgniter\HTTP\URI" variable="$base">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="param" line="944" description="" type="\CodeIgniter\HTTP\URI" variable="$reference">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$base</name>
          <default></default>
          <type>\CodeIgniter\HTTP\URI</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reference</name>
          <default></default>
          <type>\CodeIgniter\HTTP\URI</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="973" package="CodeIgniter">
        <name>removeDotSegments</name>
        <full_name>\CodeIgniter\HTTP\URI::removeDotSegments()</full_name>
        <docblock line="973">
          <description>Used when resolving and merging paths to correctly interpret and
remove single and double dot segments from the path per
RFC 3986 Section 5.2.4</description>
          <long-description></long-description>
          <tag name="see" line="973" description="" link="http://tools.ietf.org/html/rfc3986#section-5.2.4"/>
          <tag name="param" line="973" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="973" description="" type="\CodeIgniter\HTTP\URI" variable="$uri">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <notice line="483" code="PPC:ERR-50013">Parameter $ignorePort could not be found in createURIString()</notice>
      <notice line="973" code="PPC:ERR-50013">Parameter $uri could not be found in removeDotSegments()</notice>
    </parse_markers>
    <source></source>
  </file>
  <file path="HTTP/Negotiate.php" generated-path="HTTP.Negotiate.html" hash="b6d31d8ee9391cbd16a351b83aca674e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="49" package="CodeIgniter\HTTP">
      <extends/>
      <name>Negotiate</name>
      <full_name>\CodeIgniter\HTTP\Negotiate</full_name>
      <docblock line="49">
        <description>Class Negotiate</description>
        <long-description>Provides methods to negotiate with the HTTP headers to determine the best
type match between what the application supports and what the requesting
getServer wants.</long-description>
        <tag name="see" line="49" description="" link="http://tools.ietf.org/html/rfc7231#section-5.3"/>
        <tag name="package" line="49" description="CodeIgniter\HTTP"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="56" package="CodeIgniter\HTTP">
        <name>$request</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::request</full_name>
        <default></default>
        <docblock line="56">
          <description>Request</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="65" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::__construct()</full_name>
        <docblock line="65">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="82" package="CodeIgniter\HTTP">
        <name>setRequest</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::setRequest()</full_name>
        <docblock line="82">
          <description>Stores the request instance to grab the headers from.</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
          <tag name="return" line="82" description="" type="\CodeIgniter\HTTP\Negotiate">
            <type>\CodeIgniter\HTTP\Negotiate</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="107" package="CodeIgniter\HTTP">
        <name>media</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::media()</full_name>
        <docblock line="107">
          <description>Determines the best content-type to use based on the $supported
types the application says it supports, and the types requested
by the client.</description>
          <long-description>If no match is found, the first, highest-ranking client requested
type is returned.</long-description>
          <tag name="param" line="107" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="param" line="107" description="&lt;p&gt;If TRUE, will return an empty string when no match found.&#10;                          If FALSE, will return the first supported element.&lt;/p&gt;" type="boolean" variable="$strictMatch">
            <type>boolean</type>
          </tag>
          <tag name="return" line="107" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strictMatch</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="126" package="CodeIgniter\HTTP">
        <name>charset</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::charset()</full_name>
        <docblock line="126">
          <description>Determines the best charset to use based on the $supported
types the application says it supports, and the types requested
by the client.</description>
          <long-description>If no match is found, the first, highest-ranking client requested
type is returned.</long-description>
          <tag name="param" line="126" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="return" line="126" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="154" package="CodeIgniter\HTTP">
        <name>encoding</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::encoding()</full_name>
        <docblock line="154">
          <description>Determines the best encoding type to use based on the $supported
types the application says it supports, and the types requested
by the client.</description>
          <long-description>If no match is found, the first, highest-ranking client requested
type is returned.</long-description>
          <tag name="param" line="154" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="return" line="154" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="175" package="CodeIgniter\HTTP">
        <name>language</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::language()</full_name>
        <docblock line="175">
          <description>Determines the best language to use based on the $supported
types the application says it supports, and the types requested
by the client.</description>
          <long-description>If no match is found, the first, highest-ranking client requested
type is returned.</long-description>
          <tag name="param" line="175" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="return" line="175" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="200" package="CodeIgniter\HTTP">
        <name>getBestMatch</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::getBestMatch()</full_name>
        <docblock line="200">
          <description>Does the grunt work of comparing any of the app-supported values
against a given Accept* header string.</description>
          <long-description>Portions of this code base on Aura.Accept library.</long-description>
          <tag name="param" line="200" description="&lt;p&gt;App-supported values&lt;/p&gt;" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;header string&lt;/p&gt;" type="string" variable="$header">
            <type>string</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;If TRUE, will compare media types and sub-types.&lt;/p&gt;" type="boolean" variable="$enforceTypes">
            <type>boolean</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;If TRUE, will return empty string on no match.&#10;                            If FALSE, will return the first supported element.&lt;/p&gt;" type="boolean" variable="$strictMatch">
            <type>boolean</type>
          </tag>
          <tag name="return" line="200" description="Best match" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$enforceTypes</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strictMatch</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="260" package="CodeIgniter\HTTP">
        <name>parseHeader</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::parseHeader()</full_name>
        <docblock line="260">
          <description>Parses an Accept* header into it's multiple values.</description>
          <long-description>This is based on code from Aura.Accept library.</long-description>
          <tag name="param" line="260" description="" type="string" variable="$header">
            <type>string</type>
          </tag>
          <tag name="return" line="260" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$header</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="351" package="CodeIgniter\HTTP">
        <name>match</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::match()</full_name>
        <docblock line="351">
          <description>Match-maker</description>
          <long-description></long-description>
          <tag name="param" line="351" description="" type="array" variable="$acceptable">
            <type>array</type>
          </tag>
          <tag name="param" line="351" description="" type="string" variable="$supported">
            <type>string</type>
          </tag>
          <tag name="param" line="351" description="" type="boolean" variable="$enforceTypes">
            <type>boolean</type>
          </tag>
          <tag name="return" line="351" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acceptable</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$enforceTypes</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="386" package="CodeIgniter\HTTP">
        <name>matchParameters</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::matchParameters()</full_name>
        <docblock line="386">
          <description>Checks two Accept values with matching 'values' to see if their
'params' are the same.</description>
          <long-description></long-description>
          <tag name="param" line="386" description="" type="array" variable="$acceptable">
            <type>array</type>
          </tag>
          <tag name="param" line="386" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="return" line="386" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acceptable</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="416" package="CodeIgniter\HTTP">
        <name>matchTypes</name>
        <full_name>\CodeIgniter\HTTP\Negotiate::matchTypes()</full_name>
        <docblock line="416">
          <description>Compares the types/subtypes of an acceptable Media type and
the supported string.</description>
          <long-description></long-description>
          <tag name="param" line="416" description="" type="array" variable="$acceptable">
            <type>array</type>
          </tag>
          <tag name="param" line="416" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="return" line="416" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$acceptable</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/Handlers/FileHandler.php" generated-path="Log.Handlers.FileHandler.html" hash="95aa1dc8fc2c9984525488d462cb81f5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseHandler">\CodeIgniter\Log\Handlers\BaseHandler</namespace-alias>
    <namespace-alias name="HandlerInterface">\CodeIgniter\Log\Handlers\HandlerInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Log\Handlers" line="45" package="Default">
      <extends>\CodeIgniter\Log\Handlers\BaseHandler</extends>
      <implements>\CodeIgniter\Log\Handlers\HandlerInterface</implements>
      <name>FileHandler</name>
      <full_name>\CodeIgniter\Log\Handlers\FileHandler</full_name>
      <docblock line="45">
        <description>Log error messages to file system</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler" refers="\CodeIgniter\Log\Handlers\BaseHandler" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="52" package="Default">
        <name>$path</name>
        <full_name>\CodeIgniter\Log\Handlers\FileHandler::path</full_name>
        <default></default>
        <docblock line="52">
          <description>Folder to hold logs</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="\CodeIgniter\Log\Handlers\type" variable="">
            <type>\CodeIgniter\Log\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="58" package="Default">
        <name>$fileExtension</name>
        <full_name>\CodeIgniter\Log\Handlers\FileHandler::fileExtension</full_name>
        <default></default>
        <docblock line="58">
          <description>Extension to use for log files</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\Log\Handlers\type" variable="">
            <type>\CodeIgniter\Log\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="64" package="Default">
        <name>$filePermissions</name>
        <full_name>\CodeIgniter\Log\Handlers\FileHandler::filePermissions</full_name>
        <default></default>
        <docblock line="64">
          <description>Permissions for new log files</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="\CodeIgniter\Log\Handlers\type" variable="">
            <type>\CodeIgniter\Log\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="50" package="Default">
        <name>$handles</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handles</full_name>
        <default></default>
        <docblock line="50">
          <description>Handles</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="57" package="Default">
        <name>$dateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::dateFormat</full_name>
        <default>'Y-m-d H:i:s'</default>
        <docblock line="57">
          <description>Date format for logging</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="72" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Handlers\FileHandler::__construct()</full_name>
        <docblock line="72">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="72" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler::__construct()" refers="\CodeIgniter\Log\Handlers\BaseHandler::__construct()" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="97" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\FileHandler::handle()</full_name>
        <docblock line="97">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="97" description="" type="" variable="$level"/>
          <tag name="param" line="97" description="" type="" variable="$message"/>
          <tag name="return" line="97" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler::handle()" refers="\CodeIgniter\Log\Handlers\BaseHandler::handle()" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="66" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="66">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="66" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="81" package="Default">
        <name>canHandle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::canHandle()</full_name>
        <docblock line="81">
          <description>Checks whether the Handler will handle logging items of this
log Level.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="" variable="$level"/>
          <tag name="return" line="81" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_canHandle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="99" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handle()</full_name>
        <docblock line="99">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="99" description="" type="" variable="$level"/>
          <tag name="param" line="99" description="" type="" variable="$message"/>
          <tag name="return" line="99" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="110" package="Default">
        <name>setDateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::setDateFormat()</full_name>
        <docblock line="110">
          <description>Stores the date format to use while logging messages.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="110" description="" type="\CodeIgniter\Log\Handlers\HandlerInterface">
            <type>\CodeIgniter\Log\Handlers\HandlerInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_setDateFormat"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/CLIRequest.php" generated-path="HTTP.CLIRequest.html" hash="8a04284521af277c5d1f6b574c7214de" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="App">\Config\App</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="56" package="CodeIgniter\HTTP">
      <extends>\CodeIgniter\HTTP\Request</extends>
      <name>CLIRequest</name>
      <full_name>\CodeIgniter\HTTP\CLIRequest</full_name>
      <docblock line="56">
        <description>Class CLIRequest</description>
        <long-description>Represents a request from the command-line. Provides additional
tools to interact with that request since CLI requests are not
static like HTTP requests might be.

Portions of this code were initially from the FuelPHP Framework,
version 1.7.x, and used here under the MIT license they were
originally made available under.

http://fuelphp.com</long-description>
        <tag name="package" line="56" description="CodeIgniter\HTTP"/>
        <tag name="inherited_from" description="\CodeIgniter\HTTP\Request" refers="\CodeIgniter\HTTP\Request" link="/classes/CodeIgniter.HTTP.Request.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="64" package="CodeIgniter\HTTP">
        <name>$segments</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::segments</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Stores the segments of our cli "URI" command.</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="70" package="CodeIgniter\HTTP">
        <name>$options</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::options</full_name>
        <default>array()</default>
        <docblock line="70">
          <description>Command line options and their values.</description>
          <long-description></long-description>
          <tag name="var" line="70" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="51" package="Default">
        <name>$ipAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::ipAddress</full_name>
        <default>''</default>
        <docblock line="51">
          <description>IP address of the current user.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="58" package="Default">
        <name>$proxyIPs</name>
        <full_name>\CodeIgniter\HTTP\Request::proxyIPs</full_name>
        <default></default>
        <docblock line="58">
          <description>Proxy IPs</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="79" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::__construct()</full_name>
        <docblock line="79">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Request::__construct()" refers="\CodeIgniter\HTTP\Request::__construct()" link="/classes/CodeIgniter.HTTP.Request.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="106" package="CodeIgniter\HTTP">
        <name>getPath</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::getPath()</full_name>
        <docblock line="106">
          <description>Returns the "path" of the request script so that it can be used
in routing to the appropriate controller/method.</description>
          <long-description>The path is determined by treating the command line arguments
as if it were a URL - up until we hit our first option.

Example:
     php index.php users 21 profile -foo bar

     // Routes to /users/21/profile (index is removed for routing sake)
     // with the option foo = bar.</long-description>
          <tag name="return" line="106" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="121" package="CodeIgniter\HTTP">
        <name>getOptions</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::getOptions()</full_name>
        <docblock line="121">
          <description>Returns an associative array of all CLI options found, with
their values.</description>
          <long-description></long-description>
          <tag name="return" line="121" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="135" package="CodeIgniter\HTTP">
        <name>getOption</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::getOption()</full_name>
        <docblock line="135">
          <description>Returns the value for a single CLI option that was passed in.</description>
          <long-description></long-description>
          <tag name="param" line="135" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="161" package="CodeIgniter\HTTP">
        <name>getOptionString</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::getOptionString()</full_name>
        <docblock line="161">
          <description>Returns the options as a string, suitable for passing along on
the CLI to other commands.</description>
          <long-description>Example:
     $options = [
         'foo' =&gt; 'bar',
         'baz' =&gt; 'queue some stuff'
     ];

     getOptionString() = '-foo bar -baz "queue some stuff"'</long-description>
          <tag name="return" line="161" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="194" package="CodeIgniter\HTTP">
        <name>parseCommand</name>
        <full_name>\CodeIgniter\HTTP\CLIRequest::parseCommand()</full_name>
        <docblock line="194">
          <description>Parses the command line it was called from and collects all options
and valid segments.</description>
          <long-description>NOTE: I tried to use getopt but had it fail occasionally to find
any options, where argv has always had our back.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="68" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Request::__construct()</full_name>
        <docblock line="68">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$config">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$uri">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="80" package="Default">
        <name>getIPAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::getIPAddress()</full_name>
        <docblock line="80">
          <description>Gets the user's IP address.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="IP address" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" refers="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getIPAddress"/>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="218" package="Default">
        <name>isValidIP</name>
        <full_name>\CodeIgniter\HTTP\Request::isValidIP()</full_name>
        <docblock line="218">
          <description>Validate an IP address</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;IP Address&lt;/p&gt;" type="" variable="$ip"/>
          <tag name="param" line="218" description="&lt;p&gt;IP protocol: 'ipv4' or 'ipv6'&lt;/p&gt;" type="string" variable="$which">
            <type>string</type>
          </tag>
          <tag name="return" line="218" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::isValidIP()" refers="\CodeIgniter\HTTP\RequestInterface::isValidIP()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_isValidIP"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$which</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="246" package="Default">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\Request::getMethod()</full_name>
        <docblock line="246">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="246" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getMethod()" refers="\CodeIgniter\HTTP\RequestInterface::getMethod()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="262" package="Default">
        <name>getServer</name>
        <full_name>\CodeIgniter\HTTP\Request::getServer()</full_name>
        <docblock line="262">
          <description>Fetch an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag name="param" line="262" description="&lt;p&gt;Index for item to be fetched from $_SERVER&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="262" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="262" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getServer()" refers="\CodeIgniter\HTTP\RequestInterface::getServer()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getServer"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="276" package="Default">
        <name>getEnv</name>
        <full_name>\CodeIgniter\HTTP\Request::getEnv()</full_name>
        <docblock line="276">
          <description>Fetch an item from the $_ENV array.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="&lt;p&gt;Index for item to be fetched from $_ENV&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="299" package="Default">
        <name>fetchGlobal</name>
        <full_name>\CodeIgniter\HTTP\Request::fetchGlobal()</full_name>
        <docblock line="299">
          <description>Fetches one or more items from a global, like cookies, get, post, etc.</description>
          <long-description>Can optionally filter the input when you retrieve it by passing in
a filter.

If $type is an array, it must conform to the input allowed by the
filter_input_array method.

http://php.net/manual/en/filter.filters.sanitize.php</long-description>
          <tag name="param" line="299" description="" type="" variable="$type"/>
          <tag name="param" line="299" description="" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="299" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="299" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/CURLRequest.php" generated-path="HTTP.CURLRequest.html" hash="2b392c9a6ce9e3dc1d8833ac1981b9e4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="App">\Config\App</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="51" package="CodeIgniter\HTTPLite">
      <extends>\CodeIgniter\HTTP\Request</extends>
      <name>CURLRequest</name>
      <full_name>\CodeIgniter\HTTP\CURLRequest</full_name>
      <docblock line="51">
        <description>Class OutgoingRequest</description>
        <long-description>A lightweight HTTP client for sending synchronous HTTP requests
via cURL.</long-description>
        <tag name="todo" line="51" description="Add a few helpers for dealing with JSON, forms, files, etc."/>
        <tag name="package" line="51" description="CodeIgniter\HTTPLite"/>
        <tag name="inherited_from" description="\CodeIgniter\HTTP\Request" refers="\CodeIgniter\HTTP\Request" link="/classes/CodeIgniter.HTTP.Request.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="58" package="CodeIgniter\HTTPLite">
        <name>$response</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::response</full_name>
        <default></default>
        <docblock line="58">
          <description>The response object associated with this request</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="65" package="CodeIgniter\HTTPLite">
        <name>$baseURI</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::baseURI</full_name>
        <default></default>
        <docblock line="65">
          <description>The URI associated with this request</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="\CodeIgniter\HTTP\URI" variable="">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="72" package="CodeIgniter\HTTPLite">
        <name>$config</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::config</full_name>
        <default>array('timeout' =&gt; 0.0, 'connect_timeout' =&gt; 150, 'debug' =&gt; false, 'verify' =&gt; true)</default>
        <docblock line="72">
          <description>The setting values</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="85" package="CodeIgniter\HTTPLite">
        <name>$redirectDefaults</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::redirectDefaults</full_name>
        <default>array('max' =&gt; 5, 'strict' =&gt; true, 'protocols' =&gt; array('http', 'https'))</default>
        <docblock line="85">
          <description>Default values for when 'allow_redirects'
option is true.</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="96" package="CodeIgniter\HTTPLite">
        <name>$delay</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::delay</full_name>
        <default>0.0</default>
        <docblock line="96">
          <description>The number of milliseconds to delay before
sending the request.</description>
          <long-description></long-description>
          <tag name="var" line="96" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="51" package="Default">
        <name>$ipAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::ipAddress</full_name>
        <default>''</default>
        <docblock line="51">
          <description>IP address of the current user.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="58" package="Default">
        <name>$proxyIPs</name>
        <full_name>\CodeIgniter\HTTP\Request::proxyIPs</full_name>
        <default></default>
        <docblock line="58">
          <description>Proxy IPs</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="112" package="CodeIgniter\HTTPLite">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::__construct()</full_name>
        <docblock line="112">
          <description>Takes an array of options to set the following possible class properties:</description>
          <long-description>- baseURI
 - timeout
 - any other request options to use as defaults.</long-description>
          <tag name="param" line="112" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
          <tag name="param" line="112" description="" type="\CodeIgniter\HTTP\URI" variable="$uri">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
          <tag name="param" line="112" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
          <tag name="param" line="112" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Request::__construct()" refers="\CodeIgniter\HTTP\Request::__construct()" link="/classes/CodeIgniter.HTTP.Request.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>\CodeIgniter\HTTP\URI</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="139" package="CodeIgniter\HTTPLite">
        <name>request</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::request()</full_name>
        <docblock line="139">
          <description>Sends an HTTP request to the specified $url. If this is a relative
URL, it will be merged with $this-&gt;baseURI to form a complete URL.</description>
          <long-description></long-description>
          <tag name="param" line="139" description="" type="" variable="$method"/>
          <tag name="param" line="139" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="139" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="139" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="162" package="CodeIgniter\HTTPLite">
        <name>get</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::get()</full_name>
        <docblock line="162">
          <description>Convenience method for sending a GET request.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="162" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="162" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="177" package="CodeIgniter\HTTPLite">
        <name>delete</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::delete()</full_name>
        <docblock line="177">
          <description>Convenience method for sending a DELETE request.</description>
          <long-description></long-description>
          <tag name="param" line="177" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="177" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="177" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="192" package="CodeIgniter\HTTPLite">
        <name>head</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::head()</full_name>
        <docblock line="192">
          <description>Convenience method for sending a HEAD request.</description>
          <long-description></long-description>
          <tag name="param" line="192" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="192" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="192" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="207" package="CodeIgniter\HTTPLite">
        <name>options</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::options()</full_name>
        <docblock line="207">
          <description>Convenience method for sending an OPTIONS request.</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="207" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="207" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="222" package="CodeIgniter\HTTPLite">
        <name>patch</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::patch()</full_name>
        <docblock line="222">
          <description>Convenience method for sending a PATCH request.</description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="222" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="222" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="237" package="CodeIgniter\HTTPLite">
        <name>post</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::post()</full_name>
        <docblock line="237">
          <description>Convenience method for sending a POST request.</description>
          <long-description></long-description>
          <tag name="param" line="237" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="237" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="237" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="252" package="CodeIgniter\HTTPLite">
        <name>put</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::put()</full_name>
        <docblock line="252">
          <description>Convenience method for sending a PUT request.</description>
          <long-description></long-description>
          <tag name="param" line="252" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="param" line="252" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="252" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="265" package="CodeIgniter\HTTPLite">
        <name>parseOptions</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::parseOptions()</full_name>
        <docblock line="265">
          <description>Sets the correct settings based on the options array
passed in.</description>
          <long-description></long-description>
          <tag name="param" line="265" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="307" package="CodeIgniter\HTTPLite">
        <name>prepareURL</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::prepareURL()</full_name>
        <docblock line="307">
          <description>If the $url is a relative URL, will attempt to create
a full URL by prepending $this-&gt;baseURI to it.</description>
          <long-description></long-description>
          <tag name="param" line="307" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
          <tag name="return" line="307" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="330" package="CodeIgniter\HTTPLite">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::getMethod()</full_name>
        <docblock line="330">
          <description>Get the request method. Overrides the Request class' method
since users expect a different answer here.</description>
          <long-description></long-description>
          <tag name="param" line="330" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="330" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Request::getMethod()" refers="\CodeIgniter\HTTP\Request::getMethod()" link="/classes/CodeIgniter.HTTP.Request.html#method_getMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="345" package="CodeIgniter\HTTPLite">
        <name>send</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::send()</full_name>
        <docblock line="345">
          <description>Fires the actual cURL request.</description>
          <long-description></long-description>
          <tag name="param" line="345" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="345" description="" type="string" variable="$url">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$url</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="408" package="CodeIgniter\HTTPLite">
        <name>applyRequestHeaders</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::applyRequestHeaders()</full_name>
        <docblock line="408">
          <description>Takes all headers current part of this request and adds them
to the cURL request.</description>
          <long-description></long-description>
          <tag name="param" line="408" description="" type="array" variable="$curl_options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$curl_options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="438" package="CodeIgniter\HTTPLite">
        <name>applyMethod</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::applyMethod()</full_name>
        <docblock line="438">
          <description>Apply method</description>
          <long-description></long-description>
          <tag name="param" line="438" description="" type="\CodeIgniter\HTTP\type" variable="$method">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="438" description="" type="array" variable="$curl_options">
            <type>array</type>
          </tag>
          <tag name="return" line="438" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$curl_options</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="479" package="CodeIgniter\HTTPLite">
        <name>applyBody</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::applyBody()</full_name>
        <docblock line="479">
          <description>Apply body</description>
          <long-description></long-description>
          <tag name="param" line="479" description="" type="array" variable="$curl_options">
            <type>array</type>
          </tag>
          <tag name="return" line="479" description="" type="\CodeIgniter\HTTP\type">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$curl_options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="497" package="CodeIgniter\HTTPLite">
        <name>setResponseHeaders</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::setResponseHeaders()</full_name>
        <docblock line="497">
          <description>Parses the header retrieved from the cURL response into
our Response object.</description>
          <long-description></long-description>
          <tag name="param" line="497" description="" type="array" variable="$headers">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="535" package="CodeIgniter\HTTPLite">
        <name>setCURLOptions</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::setCURLOptions()</full_name>
        <docblock line="535">
          <description>Set CURL options</description>
          <long-description></long-description>
          <tag name="param" line="535" description="" type="array" variable="$curl_options">
            <type>array</type>
          </tag>
          <tag name="param" line="535" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
          <tag name="return" line="535" description="" type="\CodeIgniter\HTTP\type">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="throws" line="535" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$curl_options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="712" package="CodeIgniter\HTTPLite">
        <name>sendRequest</name>
        <full_name>\CodeIgniter\HTTP\CURLRequest::sendRequest()</full_name>
        <docblock line="712">
          <description>Does the actual work of initializing cURL, setting the options,
and grabbing the output.</description>
          <long-description></long-description>
          <tag name="param" line="712" description="" type="array" variable="$curl_options">
            <type>array</type>
          </tag>
          <tag name="return" line="712" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$curl_options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="68" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Request::__construct()</full_name>
        <docblock line="68">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$config">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$uri">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="80" package="Default">
        <name>getIPAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::getIPAddress()</full_name>
        <docblock line="80">
          <description>Gets the user's IP address.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="IP address" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" refers="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getIPAddress"/>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="218" package="Default">
        <name>isValidIP</name>
        <full_name>\CodeIgniter\HTTP\Request::isValidIP()</full_name>
        <docblock line="218">
          <description>Validate an IP address</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;IP Address&lt;/p&gt;" type="" variable="$ip"/>
          <tag name="param" line="218" description="&lt;p&gt;IP protocol: 'ipv4' or 'ipv6'&lt;/p&gt;" type="string" variable="$which">
            <type>string</type>
          </tag>
          <tag name="return" line="218" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::isValidIP()" refers="\CodeIgniter\HTTP\RequestInterface::isValidIP()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_isValidIP"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$which</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="246" package="Default">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\Request::getMethod()</full_name>
        <docblock line="246">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="246" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getMethod()" refers="\CodeIgniter\HTTP\RequestInterface::getMethod()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="262" package="Default">
        <name>getServer</name>
        <full_name>\CodeIgniter\HTTP\Request::getServer()</full_name>
        <docblock line="262">
          <description>Fetch an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag name="param" line="262" description="&lt;p&gt;Index for item to be fetched from $_SERVER&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="262" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="262" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getServer()" refers="\CodeIgniter\HTTP\RequestInterface::getServer()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getServer"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="276" package="Default">
        <name>getEnv</name>
        <full_name>\CodeIgniter\HTTP\Request::getEnv()</full_name>
        <docblock line="276">
          <description>Fetch an item from the $_ENV array.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="&lt;p&gt;Index for item to be fetched from $_ENV&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="299" package="Default">
        <name>fetchGlobal</name>
        <full_name>\CodeIgniter\HTTP\Request::fetchGlobal()</full_name>
        <docblock line="299">
          <description>Fetches one or more items from a global, like cookies, get, post, etc.</description>
          <long-description>Can optionally filter the input when you retrieve it by passing in
a filter.

If $type is an array, it must conform to the input allowed by the
filter_input_array method.

http://php.net/manual/en/filter.filters.sanitize.php</long-description>
          <tag name="param" line="299" description="" type="" variable="$type"/>
          <tag name="param" line="299" description="" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="299" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="299" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
    </class>
    <markers>
      <todo line="51">Add a few helpers for dealing with JSON, forms, files, etc.</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/Handlers/BaseHandler.php" generated-path="Log.Handlers.BaseHandler.html" hash="d180a8ef6977b46fce66528a984ab713" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="CodeIgniter\Log\Handlers" line="42" package="Default">
      <extends/>
      <implements>\CodeIgniter\Log\Handlers\HandlerInterface</implements>
      <name>BaseHandler</name>
      <full_name>\CodeIgniter\Log\Handlers\BaseHandler</full_name>
      <docblock line="42">
        <description>Base class for logging</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="50" package="Default">
        <name>$handles</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handles</full_name>
        <default></default>
        <docblock line="50">
          <description>Handles</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="57" package="Default">
        <name>$dateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::dateFormat</full_name>
        <default>'Y-m-d H:i:s'</default>
        <docblock line="57">
          <description>Date format for logging</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="66" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="66">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="66" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="81" package="Default">
        <name>canHandle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::canHandle()</full_name>
        <docblock line="81">
          <description>Checks whether the Handler will handle logging items of this
log Level.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="" variable="$level"/>
          <tag name="return" line="81" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_canHandle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="99" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handle()</full_name>
        <docblock line="99">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="99" description="" type="" variable="$level"/>
          <tag name="param" line="99" description="" type="" variable="$message"/>
          <tag name="return" line="99" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="110" package="Default">
        <name>setDateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::setDateFormat()</full_name>
        <docblock line="110">
          <description>Stores the date format to use while logging messages.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="110" description="" type="\CodeIgniter\Log\Handlers\HandlerInterface">
            <type>\CodeIgniter\Log\Handlers\HandlerInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_setDateFormat"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vm1v2zYQ/mz/ikMQIHah2N0L9iHd1iq2XAuzJUNWmgXtUNASbXGRRYGkkhlF//vuKNqxm62f2iJowuPdc3fPvVC/vq6LGiq25bpmGYeRzHm4qYTh6sNMbj5MWZWXXOlX3e7wxYsuvDjWwCNJ/ApkzSvQslEIweq6FBkzQlaQ8wdeynrLKwNrhV4epbqHtVSwmC6ceVoIDZmsDCnhn4qXnGmeQ1PlXIEpOMzDFGYi45Xm0MND35mOZL1TYlMY6GV9+PHlDz/DJf36xYNrJYzQBaqUzXYlGISVNsI0hoNcQ8qzopKl3Owc0oKrrdCaYsYQCq74agcbxTCq3MPQuTXLCqY23AMjgVU7qJEYNJArw0Qlqg0wzKMmSFI2lJeWa/PIFLJS5cC0lplgCAm5zBpipaVpLUquoUepni2dxVnf+sk5KwlQVJaJ/S08ClPIxiBb2iiREYyHSlnZ5BTJ/roUW+GckLklSxMeQjcaU6GAPdjKXKzpN7f51c2qRPI8yAWhr5A1DzQJbQ08ymaIRdS8tMEhiMAEbNJPMVo1clQTucbRpUnyWMjtaT7CRrVuVIWOuTXLJdJn/f7NM0MSsljLspSPlCP2TC4oNX11aCUkeiUfuE2r7YxKGpG1/NuK1E+Vdle6YGUJK+7oQ+eiIjSS7jNTFIY22A+ClVBLZf1+mfFgH8c0gGU8SW/9JIBwCYskfheOgzGc+Us8n3lwG6bT+CYF1Ej8KL2DeAJ+dAd/hNHYg+DPRRIslxAnhBbOF7MwQHEYjWY34zB6C9doGsU4FCFOA+KmsfXp0MJgSXjzIBlN8ehfh7MwvfMIaxKmESFP4gR8WPhJGo5uZn4Ci5tkES8DDGKMyFEYTRJ0FMyDKB2gY5RB8A4PsJz6sxl5s6N/g2kkFCiM4sVdEr6dpjCNZ+MAhdcBxudfz4LWG2Y3mvnh3IOxP/ffBtYqRiCbJGm2YcLtNCApefXxZ5SGcUT5jOIoTfDoYbpJerC+DZeBB34SLomZSRLPbabELhrFFgdNo6AFIuZPC4QqdL5ZBgdMGAf+DOGwWtGXBd0X+Q0uzHu24Z3TjQhvWIOzp47FMOYPuHPY1t4ferPzDfYX9Apj6qvhcJUJM8jYsG99uEntuEvaz+16Hki1GbpbPcTu6RwtV2da3e/tMsxBtDkMMtmGr3FMeOcdDjPN0E+Dl4OXVm6XmPWBx+HhvbjGXQ5ZibvP7n2MeYPDa1UYTpRiONrtNWm69wbEti45LUgNThTiKlZrfKO6n7rdDoF3EL291PZv+9+bB6aAKcV2dBx2O7WSBtcHTvV50Sq/OrIf4zamuLbMnIR3ikdLsBWeAuZoPWmNf4OLu8vtZQ7TK3GlL6yP4eU3+HcU7AhXjlFNZqQ6CrBm+LC2KcM57sS1OERqNzYu1cq+D/DxY7ZH6J3o97udT91O55wW5OXvjiZMyV2/v3Cii7/g9Wt4/9erbufzd0mw4Nm9xteB41Ztn/59QzwK3MZtGPsiAbblVu+fWguANzCjb44BHY/5OS9J/CRV3OBbAyspy/9hK2NV67zXlt9B9K+cETHmUET10fLZa1U8OGWy/734ct1/IIQIwy85jVvJEgBh+z4VjsQ2XBxEVtIrjlcV8H941tiEkUin2JJpKddG1gP8xNsd7tAM+71g+MriAwqqwQ+PHTdeq48ia4zPKd58pQwHiQv4a6U5LIova9TG9ES7w3I1+i5DuMTp49rSmh8tj/Z7CltXHDWoC0c/o2HfUa3xs9Sfrbz/7lDNzfiwgXqnmEjBc5SjIT9ZXc6G+Nq3tFX7xn37ufsvUyGslQ==</source>
  </file>
  <file path="Debug/Exceptions.php" generated-path="Debug.Exceptions.html" hash="524e6affefb91b9767e2b140094dd6ab" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug" line="43" package="Default">
      <extends/>
      <name>Exceptions</name>
      <full_name>\CodeIgniter\Debug\Exceptions</full_name>
      <docblock line="43">
        <description>Exceptions manager</description>
        <long-description></long-description>
        <tag name="package" line="43" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Debug" line="51" package="Default">
        <name>$ob_level</name>
        <full_name>\CodeIgniter\Debug\Exceptions::ob_level</full_name>
        <default></default>
        <docblock line="51">
          <description>Nesting level of the output buffering mechanism</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="59" package="Default">
        <name>$viewPath</name>
        <full_name>\CodeIgniter\Debug\Exceptions::viewPath</full_name>
        <default></default>
        <docblock line="59">
          <description>The path to the directory containing the
cli and html error view directories.</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="68" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Debug\Exceptions::__construct()</full_name>
        <docblock line="68">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="81" package="Default">
        <name>initialize</name>
        <full_name>\CodeIgniter\Debug\Exceptions::initialize()</full_name>
        <docblock line="81">
          <description>Responsible for registering the error, exception and shutdown
handling of our application.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="103" package="Default">
        <name>exceptionHandler</name>
        <full_name>\CodeIgniter\Debug\Exceptions::exceptionHandler()</full_name>
        <docblock line="103">
          <description>Catches any uncaught errors and exceptions, including most Fatal errors
(Yay PHP7!). Will log the error, display it if display_errors is on,
and fire an event that allows custom actions to be taken at this point.</description>
          <long-description></long-description>
          <tag name="param" line="103" description="" type="\Throwable" variable="$exception">
            <type>\Throwable</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Throwable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="175" package="Default">
        <name>errorHandler</name>
        <full_name>\CodeIgniter\Debug\Exceptions::errorHandler()</full_name>
        <docblock line="175">
          <description>Even in PHP7, some errors make it through to the errorHandler, so
convert these to Exceptions and let the exception handler log it and
display it.</description>
          <long-description>This seems to be primarily when a user triggers it with trigger_error().</long-description>
          <tag name="param" line="175" description="" type="integer" variable="$severity">
            <type>integer</type>
          </tag>
          <tag name="param" line="175" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="175" description="" type="string|null" variable="$file">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="175" description="" type="integer|null" variable="$line">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="param" line="175" description="" type="null" variable="$context">
            <type>null</type>
          </tag>
          <tag name="throws" line="175" description="" type="\ErrorException">
            <type>\ErrorException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$severity</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$line</name>
          <default>null</default>
          <type>integer|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="187" package="Default">
        <name>shutdownHandler</name>
        <full_name>\CodeIgniter\Debug\Exceptions::shutdownHandler()</full_name>
        <docblock line="187">
          <description>Checks to see if any errors have happened during shutdown that
need to be caught and handle them.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="215" package="Default">
        <name>determineView</name>
        <full_name>\CodeIgniter\Debug\Exceptions::determineView()</full_name>
        <docblock line="215">
          <description>Determines the view to display based on the exception thrown,
whether an HTTP or CLI request, etc.</description>
          <long-description></long-description>
          <tag name="param" line="215" description="" type="\Throwable" variable="$exception">
            <type>\Throwable</type>
          </tag>
          <tag name="param" line="215" description="" type="string" variable="$template_path">
            <type>string</type>
          </tag>
          <tag name="return" line="215" description="The path and filename of the view file to use" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Throwable</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$template_path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="250" package="Default">
        <name>determineCodes</name>
        <full_name>\CodeIgniter\Debug\Exceptions::determineCodes()</full_name>
        <docblock line="250">
          <description>Determines the HTTP status code and the exit status code for this request.</description>
          <long-description></long-description>
          <tag name="param" line="250" description="" type="\Throwable" variable="$exception">
            <type>\Throwable</type>
          </tag>
          <tag name="return" line="250" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$exception</name>
          <default></default>
          <type>\Throwable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Debug" line="289" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Exceptions::cleanPath()</full_name>
        <docblock line="289">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="289" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="289" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Debug" line="317" package="Default">
        <name>describeMemory</name>
        <full_name>\CodeIgniter\Debug\Exceptions::describeMemory()</full_name>
        <docblock line="317">
          <description>Describes memory usage in real-world units. Intended for use
with memory_get_usage, etc.</description>
          <long-description></long-description>
          <tag name="param" line="317" description="" type="" variable="$bytes"/>
          <tag name="return" line="317" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$bytes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Debug" line="343" package="Default">
        <name>highlightFile</name>
        <full_name>\CodeIgniter\Debug\Exceptions::highlightFile()</full_name>
        <docblock line="343">
          <description>Creates a syntax-highlighted version of a PHP file.</description>
          <long-description></long-description>
          <tag name="param" line="343" description="" type="" variable="$file"/>
          <tag name="param" line="343" description="" type="" variable="$lineNumber"/>
          <tag name="param" line="343" description="" type="integer" variable="$lines">
            <type>integer</type>
          </tag>
          <tag name="return" line="343" description="" type="boolean|string">
            <type>boolean</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lineNumber</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$lines</name>
          <default>15</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Timer.php" generated-path="Debug.Timer.html" hash="799698f47e39e7a5a63c443a6e2064b3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug" line="50" package="CodeIgniter\Benchmark">
      <extends/>
      <name>Timer</name>
      <full_name>\CodeIgniter\Debug\Timer</full_name>
      <docblock line="50">
        <description>Class Timer</description>
        <long-description>Provides a simple way to measure the amount of time
that elapses between two points.

NOTE: All methods are static since the class is intended
to measure throughout an entire application's life cycle.</long-description>
        <tag name="package" line="50" description="CodeIgniter\Benchmark"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="58" package="CodeIgniter\Benchmark">
        <name>$timers</name>
        <full_name>\CodeIgniter\Debug\Timer::timers</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>List of all timers.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="71" package="CodeIgniter\Benchmark">
        <name>start</name>
        <full_name>\CodeIgniter\Debug\Timer::start()</full_name>
        <docblock line="71">
          <description>Starts a timer running.</description>
          <long-description>Multiple calls can be made to this method so that several
execution points can be measured.</long-description>
          <tag name="param" line="71" description="&lt;p&gt;The name of this timer.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="&lt;p&gt;Allows user to provide time.&lt;/p&gt;" type="float" variable="$time">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$time</name>
          <default>null</default>
          <type>float</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="91" package="CodeIgniter\Benchmark">
        <name>stop</name>
        <full_name>\CodeIgniter\Debug\Timer::stop()</full_name>
        <docblock line="91">
          <description>Stops a running timer.</description>
          <long-description>If the timer is not stopped before the timers() method is called,
it will be automatically stopped at that point.</long-description>
          <tag name="param" line="91" description="&lt;p&gt;The name of this timer.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="117" package="CodeIgniter\Benchmark">
        <name>getElapsedTime</name>
        <full_name>\CodeIgniter\Debug\Timer::getElapsedTime()</full_name>
        <docblock line="117">
          <description>Returns the duration of a recorded timer.</description>
          <long-description></long-description>
          <tag name="param" line="117" description="&lt;p&gt;The name of the timer.&lt;/p&gt;" type="" variable="$name"/>
          <tag name="param" line="117" description="&lt;p&gt;Number of decimal places.&lt;/p&gt;" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="117" description="Returns null if timer exists by that name.&#10;                         Returns a float representing the number of&#10;                         seconds elapsed while that timer was running." type="null|float">
            <type>null</type>
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>4</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="145" package="CodeIgniter\Benchmark">
        <name>getTimers</name>
        <full_name>\CodeIgniter\Debug\Timer::getTimers()</full_name>
        <docblock line="145">
          <description>Returns the array of timers, with the duration pre-calculated for you.</description>
          <long-description></long-description>
          <tag name="param" line="145" description="&lt;p&gt;Number of decimal places&lt;/p&gt;" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="145" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>4</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="171" package="CodeIgniter\Benchmark">
        <name>has</name>
        <full_name>\CodeIgniter\Debug\Timer::has()</full_name>
        <docblock line="171">
          <description>Checks whether or not a timer with the specified name exists.</description>
          <long-description></long-description>
          <tag name="param" line="171" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="171" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Config/BaseConfig.php" generated-path="Config.BaseConfig.html" hash="795887c45f1afeb6315262c0de54e0be" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Config" line="48" package="Default">
      <extends/>
      <name>BaseConfig</name>
      <full_name>\CodeIgniter\Config\BaseConfig</full_name>
      <docblock line="48">
        <description>Class BaseConfig</description>
        <long-description>Not intended to be used on its own, this class will attempt to
automatically populate the child class' properties with values
from the environment.

These can be set within the .env file.</long-description>
        <tag name="package" line="48" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Config" line="54" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Config\BaseConfig::__construct()</full_name>
        <docblock line="54">
          <description>Will attempt to get environment variables with names
that match the properties of the child class.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Config" line="101" package="Default">
        <name>getEnvValue</name>
        <full_name>\CodeIgniter\Config\BaseConfig::getEnvValue()</full_name>
        <docblock line="101">
          <description>Retrieve an environment-specific configuration setting</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="" type="string" variable="$shortPrefix">
            <type>string</type>
          </tag>
          <tag name="return" line="101" description="" type="\CodeIgniter\Config\type">
            <type>\CodeIgniter\Config\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$shortPrefix</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/MySQLi/Result.php" generated-path="Database.MySQLi.Result.html" hash="f03939c6424262a879df8e243f41fa15" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseResult">\CodeIgniter\Database\BaseResult</namespace-alias>
    <namespace-alias name="ResultInterface">\CodeIgniter\Database\ResultInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\MySQLi" line="45" package="Default">
      <extends>\CodeIgniter\Database\BaseResult</extends>
      <implements>\CodeIgniter\Database\ResultInterface</implements>
      <name>Result</name>
      <full_name>\CodeIgniter\Database\MySQLi\Result</full_name>
      <docblock line="45">
        <description>Result for MySQLi</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult" refers="\CodeIgniter\Database\BaseResult" link="/classes/CodeIgniter.Database.BaseResult.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="50" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseResult::connID</full_name>
        <default></default>
        <docblock line="50">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="57" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultID</full_name>
        <default></default>
        <docblock line="57">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="64" package="Default">
        <name>$resultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultArray</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Result Array</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array&lt;mixed,array&gt;" variable="">
            <type>array&lt;mixed,array&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="71" package="Default">
        <name>$resultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultObject</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Result Object</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="78" package="Default">
        <name>$customResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::customResultObject</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>Custom Result Object</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="85" package="Default">
        <name>$currentRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::currentRow</full_name>
        <default>0</default>
        <docblock line="85">
          <description>Current Row index</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="92" package="Default">
        <name>$numRows</name>
        <full_name>\CodeIgniter\Database\BaseResult::numRows</full_name>
        <default></default>
        <docblock line="92">
          <description>Number of rows</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="99" package="Default">
        <name>$rowData</name>
        <full_name>\CodeIgniter\Database\BaseResult::rowData</full_name>
        <default></default>
        <docblock line="99">
          <description>Row data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="52" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::getFieldCount()</full_name>
        <docblock line="52">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldCount()" refers="\CodeIgniter\Database\BaseResult::getFieldCount()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldCount"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="64" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::getFieldNames()</full_name>
        <docblock line="64">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldNames()" refers="\CodeIgniter\Database\BaseResult::getFieldNames()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldNames"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="83" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::getFieldData()</full_name>
        <docblock line="83">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="83" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldData()" refers="\CodeIgniter\Database\BaseResult::getFieldData()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="108" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::freeResult()</full_name>
        <docblock line="108">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="108" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::freeResult()" refers="\CodeIgniter\Database\BaseResult::freeResult()" link="/classes/CodeIgniter.Database.BaseResult.html#method_freeResult"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="128" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::dataSeek()</full_name>
        <docblock line="128">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="128" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::dataSeek()" refers="\CodeIgniter\Database\BaseResult::dataSeek()" link="/classes/CodeIgniter.Database.BaseResult.html#method_dataSeek"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="142" package="Default">
        <name>fetchAssoc</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::fetchAssoc()</full_name>
        <docblock line="142">
          <description>Returns the result set as an array.</description>
          <long-description>Overridden by driver classes.</long-description>
          <tag name="return" line="142" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::fetchAssoc()" refers="\CodeIgniter\Database\BaseResult::fetchAssoc()" link="/classes/CodeIgniter.Database.BaseResult.html#method_fetchAssoc"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="158" package="Default">
        <name>fetchObject</name>
        <full_name>\CodeIgniter\Database\MySQLi\Result::fetchObject()</full_name>
        <docblock line="158">
          <description>Returns the result set as an object.</description>
          <long-description>Overridden by child classes.</long-description>
          <tag name="param" line="158" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="158" description="" type="object">
            <type>object</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::fetchObject()" refers="\CodeIgniter\Database\BaseResult::fetchObject()" link="/classes/CodeIgniter.Database.BaseResult.html#method_fetchObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>'stdClass'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="109" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseResult::__construct()</full_name>
        <docblock line="109">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$connID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$resultID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$connID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$resultID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="126" package="Default">
        <name>getResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResult()</full_name>
        <docblock line="126">
          <description>Retrieve the results of the query. Typically an array of
individual data rows, which can be either an 'array', an
'object', or a custom class name.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="&lt;p&gt;The row type. Either 'array', 'object', or a class name to use&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResult()" refers="\CodeIgniter\Database\ResultInterface::getResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResult"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="149" package="Default">
        <name>getCustomResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomResultObject()</full_name>
        <docblock line="149">
          <description>Returns the results as an array of custom objects.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The name of the class to use.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="149" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomResultObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="206" package="Default">
        <name>getResultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultArray()</full_name>
        <docblock line="206">
          <description>Returns the results as an array of arrays.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultArray()" refers="\CodeIgniter\Database\ResultInterface::getResultArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultArray"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="249" package="Default">
        <name>getResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultObject()</full_name>
        <docblock line="249">
          <description>Returns the results as an array of objects.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="249" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultObject()" refers="\CodeIgniter\Database\ResultInterface::getResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultObject"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="296" package="Default">
        <name>getRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRow()</full_name>
        <docblock line="296">
          <description>Wrapper object to return a row as either an array, an object, or
a custom class.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="296" description="&lt;p&gt;The index of the results to return&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="296" description="&lt;p&gt;The type of result object. 'array', 'object' or class name.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="296" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRow()" refers="\CodeIgniter\Database\ResultInterface::getRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="338" package="Default">
        <name>getCustomRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomRowObject()</full_name>
        <docblock line="338">
          <description>Returns a row as a custom class instance.</description>
          <long-description>If row doesn't exists, returns null.</long-description>
          <tag name="param" line="338" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="338" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="366" package="Default">
        <name>getRowArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowArray()</full_name>
        <docblock line="366">
          <description>Returns a single row from the results as an array.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="366" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="366" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowArray()" refers="\CodeIgniter\Database\ResultInterface::getRowArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowArray"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="393" package="Default">
        <name>getRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowObject()</full_name>
        <docblock line="393">
          <description>Returns a single row from the results as an object.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="393" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="393" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowObject()" refers="\CodeIgniter\Database\ResultInterface::getRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="419" package="Default">
        <name>setRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::setRow()</full_name>
        <docblock line="419">
          <description>Assigns an item into a particular column slot.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="" variable="$key"/>
          <tag name="param" line="419" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::setRow()" refers="\CodeIgniter\Database\ResultInterface::setRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_setRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="452" package="Default">
        <name>getFirstRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFirstRow()</full_name>
        <docblock line="452">
          <description>Returns the "first" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="452" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="452" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFirstRow()" refers="\CodeIgniter\Database\ResultInterface::getFirstRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFirstRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="468" package="Default">
        <name>getLastRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getLastRow()</full_name>
        <docblock line="468">
          <description>Returns the "last" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="468" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="468" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getLastRow()" refers="\CodeIgniter\Database\ResultInterface::getLastRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getLastRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="484" package="Default">
        <name>getNextRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getNextRow()</full_name>
        <docblock line="484">
          <description>Returns the "next" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="484" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="484" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getNextRow()" refers="\CodeIgniter\Database\ResultInterface::getNextRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getNextRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="506" package="Default">
        <name>getPreviousRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getPreviousRow()</full_name>
        <docblock line="506">
          <description>Returns the "previous" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="506" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getPreviousRow()" refers="\CodeIgniter\Database\ResultInterface::getPreviousRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getPreviousRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="531" package="Default">
        <name>getUnbufferedRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getUnbufferedRow()</full_name>
        <docblock line="531">
          <description>Returns an unbuffered row and move the pointer to the next row.</description>
          <long-description></long-description>
          <tag name="param" line="531" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="531" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" refers="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getUnbufferedRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="552" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldCount()</full_name>
        <docblock line="552">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="552" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldCount()" refers="\CodeIgniter\Database\ResultInterface::getFieldCount()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldCount"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="561" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldNames()</full_name>
        <docblock line="561">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="561" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldNames()" refers="\CodeIgniter\Database\ResultInterface::getFieldNames()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldNames"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="570" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldData()</full_name>
        <docblock line="570">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="570" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldData()" refers="\CodeIgniter\Database\ResultInterface::getFieldData()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldData"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="579" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::freeResult()</full_name>
        <docblock line="579">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="579" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::freeResult()" refers="\CodeIgniter\Database\ResultInterface::freeResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_freeResult"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="592" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\BaseResult::dataSeek()</full_name>
        <docblock line="592">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="592" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="592" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::dataSeek()" refers="\CodeIgniter\Database\ResultInterface::dataSeek()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_dataSeek"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="603" package="Default">
        <name>fetchAssoc</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchAssoc()</full_name>
        <docblock line="603">
          <description>Returns the result set as an array.</description>
          <long-description>Overridden by driver classes.</long-description>
          <tag name="return" line="603" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="616" package="Default">
        <name>fetchObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchObject()</full_name>
        <docblock line="616">
          <description>Returns the result set as an object.</description>
          <long-description>Overridden by child classes.</long-description>
          <tag name="param" line="616" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="616" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>'stdClass'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/Files/UploadedFile.php" generated-path="HTTP.Files.UploadedFile.html" hash="26afef2e5bfd7ff90d8c81f7332ee7a7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP\Files" line="48" package="CodeIgniter\HTTP">
      <extends/>
      <implements>\CodeIgniter\HTTP\Files\UploadedFileInterface</implements>
      <name>UploadedFile</name>
      <full_name>\CodeIgniter\HTTP\Files\UploadedFile</full_name>
      <docblock line="48">
        <description>Value object representing a single file uploaded through an
HTTP request. Used by the IncomingRequest class to
provide files.</description>
        <long-description>Typically, implementors will extend the SplFileInfo class.</long-description>
        <tag name="package" line="48" description="CodeIgniter\HTTP"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="55" package="CodeIgniter\HTTP">
        <name>$path</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::path</full_name>
        <default></default>
        <docblock line="55">
          <description>The path to the temporary file.</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="62" package="CodeIgniter\HTTP">
        <name>$originalName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::originalName</full_name>
        <default></default>
        <docblock line="62">
          <description>The original filename as provided by the client.</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="69" package="CodeIgniter\HTTP">
        <name>$name</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::name</full_name>
        <default></default>
        <docblock line="69">
          <description>The filename given to a file during a move.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="76" package="CodeIgniter\HTTP">
        <name>$originalMimeType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::originalMimeType</full_name>
        <default></default>
        <docblock line="76">
          <description>The type of file as provided by PHP</description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="84" package="CodeIgniter\HTTP">
        <name>$mimeType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::mimeType</full_name>
        <default></default>
        <docblock line="84">
          <description>The type of file based on
our inspections.</description>
          <long-description></long-description>
          <tag name="var" line="84" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="91" package="CodeIgniter\HTTP">
        <name>$size</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::size</full_name>
        <default></default>
        <docblock line="91">
          <description>The files size in bytes</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="99" package="CodeIgniter\HTTP">
        <name>$error</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::error</full_name>
        <default></default>
        <docblock line="99">
          <description>The error constant of the upload
(one of PHP's UPLOADERRXXX constants)</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="106" package="CodeIgniter\HTTP">
        <name>$hasMoved</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::hasMoved</full_name>
        <default>false</default>
        <docblock line="106">
          <description>Whether the file has been moved already or not.</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="119" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::__construct()</full_name>
        <docblock line="119">
          <description>Accepts the file information as would be filled in from the $_FILES array.</description>
          <long-description></long-description>
          <tag name="param" line="119" description="&lt;p&gt;The temporary location of the uploaded file.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="119" description="&lt;p&gt;The client-provided filename.&lt;/p&gt;" type="string" variable="$originalName">
            <type>string</type>
          </tag>
          <tag name="param" line="119" description="&lt;p&gt;The type of file as provided by PHP&lt;/p&gt;" type="string" variable="$mimeType">
            <type>string</type>
          </tag>
          <tag name="param" line="119" description="&lt;p&gt;The size of the file, in bytes&lt;/p&gt;" type="integer" variable="$size">
            <type>integer</type>
          </tag>
          <tag name="param" line="119" description="&lt;p&gt;The error constant of the upload (one of PHP's UPLOADERRXXX constants)&lt;/p&gt;" type="integer" variable="$error">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::__construct()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::__construct()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$originalName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mimeType</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="161" package="CodeIgniter\HTTP">
        <name>move</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::move()</full_name>
        <docblock line="161">
          <description>Move the uploaded file to a new location.</description>
          <long-description>$targetPath may be an absolute path, or a relative path. If it is a
relative path, resolution should be the same as used by PHP's rename()
function.

The original file MUST be removed on completion.

If this method is called more than once, any subsequent calls MUST raise
an exception.

When used in an SAPI environment where $_FILES is populated, when writing
files via moveTo(), is_uploaded_file() and move_uploaded_file() SHOULD be
used to ensure permissions and upload status are verified correctly.

If you wish to move to a stream, use getStream(), as SAPI operations
cannot guarantee writing to stream destinations.</long-description>
          <tag name="see" line="161" description="" link="http://php.net/is_uploaded_file"/>
          <tag name="see" line="161" description="" link="http://php.net/move_uploaded_file"/>
          <tag name="param" line="161" description="&lt;p&gt;Path to which to move the uploaded file.&lt;/p&gt;" type="string" variable="$targetPath">
            <type>string</type>
          </tag>
          <tag name="param" line="161" description="&lt;p&gt;the name to rename the file to.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="161" description="if the $path specified is invalid." type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="161" description="on any error during the move operation." type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
          <tag name="throws" line="161" description="on the second or subsequent call to the method." type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::move()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::move()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_move"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targetPath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="198" package="CodeIgniter\HTTP">
        <name>hasMoved</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::hasMoved()</full_name>
        <docblock line="198">
          <description>Returns whether the file has been moved or not. If it has,
the move() method will not work and certain properties, like
the tempName, will no longer be available.</description>
          <long-description></long-description>
          <tag name="return" line="198" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::hasMoved()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::hasMoved()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_hasMoved"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="220" package="CodeIgniter\HTTP">
        <name>getSize</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getSize()</full_name>
        <docblock line="220">
          <description>Retrieve the file size.</description>
          <long-description>Implementations SHOULD return the value stored in the "size" key of
the file in the $_FILES array if available, as PHP calculates this based
on the actual size transmitted.</long-description>
          <tag name="param" line="220" description="&lt;p&gt;The unit to return:&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;b   Bytes&lt;/li&gt;&#10;&lt;li&gt;kb  Kilobytes&lt;/li&gt;&#10;&lt;li&gt;mb  Megabytes&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$unit">
            <type>string</type>
          </tag>
          <tag name="return" line="220" description="The file size in bytes or null if unknown." type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getSize()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getSize()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getSize"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$unit</name>
          <default>'b'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="256" package="CodeIgniter\HTTP">
        <name>getError</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getError()</full_name>
        <docblock line="256">
          <description>Retrieve the error associated with the uploaded file.</description>
          <long-description>The return value MUST be one of PHP's UPLOAD_ERR_XXX constants.

If the file was uploaded successfully, this method MUST return
UPLOAD_ERR_OK.

Implementations SHOULD return the value stored in the "error" key of
the file in the $_FILES array.</long-description>
          <tag name="see" line="256" description="" link="http://php.net/manual/en/features.file-upload.errors.php"/>
          <tag name="return" line="256" description="One of PHP's UPLOAD_ERR_XXX constants." type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getError()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getError()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getError"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="274" package="CodeIgniter\HTTP">
        <name>getErrorString</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getErrorString()</full_name>
        <docblock line="274">
          <description>Get error string</description>
          <long-description></long-description>
          <tag name="staticvar" line="274" description="array $errors"/>
          <tag name="return" line="274" description="" type="\CodeIgniter\HTTP\Files\type">
            <type>\CodeIgniter\HTTP\Files\type</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="304" package="CodeIgniter\HTTP">
        <name>getName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getName()</full_name>
        <docblock line="304">
          <description>Retrieve the filename. This will typically be the filename sent
by the client, and should not be trusted. If the file has been
moved, this will return the final name of the moved file.</description>
          <long-description>Do not trust the value returned by this method. A client could send
a malicious filename with the intention to corrupt or hack your
application.

Implementations SHOULD return the value stored in the "name" key of
the file in the $_FILES array.</long-description>
          <tag name="return" line="304" description="The filename sent by the client or null if none&#10;    was provided." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getName()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getName()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="316" package="CodeIgniter\HTTP">
        <name>getTempName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getTempName()</full_name>
        <docblock line="316">
          <description>Gets the temporary filename where the file was uploaded to.</description>
          <long-description></long-description>
          <tag name="return" line="316" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getTempName()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getTempName()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getTempName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="329" package="CodeIgniter\HTTP">
        <name>getRandomName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getRandomName()</full_name>
        <docblock line="329">
          <description>Generates a random names based on a simple hash and the time, with
the correct file extension attached.</description>
          <long-description></long-description>
          <tag name="return" line="329" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getRandomName()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getRandomName()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getRandomName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="342" package="CodeIgniter\HTTP">
        <name>getExtension</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getExtension()</full_name>
        <docblock line="342">
          <description>Attempts to determine the file extension based on the trusted
getType() method. If the mime type is unknown, will return null.</description>
          <long-description></long-description>
          <tag name="return" line="342" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getExtension()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getExtension()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getExtension"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="356" package="CodeIgniter\HTTP">
        <name>getClientExtension</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getClientExtension()</full_name>
        <docblock line="356">
          <description>Returns the original file extension, based on the file name that
was uploaded. This is NOT a trusted source.</description>
          <long-description>For a trusted version, use guessExtension() instead.</long-description>
          <tag name="return" line="356" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientExtension()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientExtension()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getClientExtension"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="370" package="CodeIgniter\HTTP">
        <name>getType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getType()</full_name>
        <docblock line="370">
          <description>Retrieve the media type of the file. SHOULD not use information from
the $_FILES array, but should use other methods to more accurately
determine the type of file, like finfo, or mime_content_type().</description>
          <long-description></long-description>
          <tag name="return" line="370" description="The media type we determined it to be." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getType()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getType()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="401" package="CodeIgniter\HTTP">
        <name>getClientType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::getClientType()</full_name>
        <docblock line="401">
          <description>Returns the mime type as provided by the client.</description>
          <long-description>This is NOT a trusted value.
For a trusted version, use getMimeType() instead.</long-description>
          <tag name="return" line="401" description="The media type sent by the client or null if none&#10;                    was provided." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientType()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientType()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_getClientType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="414" package="CodeIgniter\HTTP">
        <name>isValid</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFile::isValid()</full_name>
        <docblock line="414">
          <description>Returns whether the file was uploaded successfully, based on whether
it was uploaded via HTTP and has no errors.</description>
          <long-description></long-description>
          <tag name="return" line="414" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Files\UploadedFileInterface::isValid()" refers="\CodeIgniter\HTTP\Files\UploadedFileInterface::isValid()" link="/classes/CodeIgniter.HTTP.Files.UploadedFileInterface.html#method_isValid"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Router/Router.php" generated-path="Router.Router.html" hash="71cce0b3a4d3a407208b2220f44cdda8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="PageNotFoundException">\CodeIgniter\PageNotFoundException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Router" line="44" package="Default">
      <extends>\Exception</extends>
      <name>RedirectException</name>
      <full_name>\CodeIgniter\Router\RedirectException</full_name>
      <docblock line="44">
        <description>Routing exception</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter\Router" line="49" package="Default">
      <extends/>
      <implements>\CodeIgniter\Router\RouterInterface</implements>
      <name>Router</name>
      <full_name>\CodeIgniter\Router\Router</full_name>
      <docblock line="49">
        <description>Request router.</description>
        <long-description></long-description>
        <tag name="package" line="49" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="56" package="Default">
        <name>$collection</name>
        <full_name>\CodeIgniter\Router\Router::collection</full_name>
        <default></default>
        <docblock line="56">
          <description>A RouteCollection instance.</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="\CodeIgniter\Router\RouteCollectionInterface" variable="">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="64" package="Default">
        <name>$directory</name>
        <full_name>\CodeIgniter\Router\Router::directory</full_name>
        <default></default>
        <docblock line="64">
          <description>Sub-directory that contains the requested controller class.</description>
          <long-description>Primarily used by 'autoRoute'.</long-description>
          <tag name="var" line="64" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="71" package="Default">
        <name>$controller</name>
        <full_name>\CodeIgniter\Router\Router::controller</full_name>
        <default></default>
        <docblock line="71">
          <description>The name of the controller class.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="78" package="Default">
        <name>$method</name>
        <full_name>\CodeIgniter\Router\Router::method</full_name>
        <default></default>
        <docblock line="78">
          <description>The name of the method to use.</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="86" package="Default">
        <name>$params</name>
        <full_name>\CodeIgniter\Router\Router::params</full_name>
        <default>array()</default>
        <docblock line="86">
          <description>An array of binds that were collected
so they can be sent to closure routes.</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="93" package="Default">
        <name>$indexPage</name>
        <full_name>\CodeIgniter\Router\Router::indexPage</full_name>
        <default>'index.php'</default>
        <docblock line="93">
          <description>The name of the front controller.</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="101" package="Default">
        <name>$translateURIDashes</name>
        <full_name>\CodeIgniter\Router\Router::translateURIDashes</full_name>
        <default>false</default>
        <docblock line="101">
          <description>Whether dashes in URI's should be converted
to underscores when determining method names.</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="107" package="Default">
        <name>$matchedRoute</name>
        <full_name>\CodeIgniter\Router\Router::matchedRoute</full_name>
        <default>null</default>
        <docblock line="107">
          <description>The route that was matched for this request.</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="array|null" variable="">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="116" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Router\Router::__construct()</full_name>
        <docblock line="116">
          <description>Stores a reference to the RouteCollection object.</description>
          <long-description></long-description>
          <tag name="param" line="116" description="" type="\CodeIgniter\Router\RouteCollectionInterface" variable="$routes">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::__construct()" refers="\CodeIgniter\Router\RouterInterface::__construct()" link="/classes/CodeIgniter.Router.RouterInterface.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$routes</name>
          <default></default>
          <type>\CodeIgniter\Router\RouteCollectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="136" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Router\Router::handle()</full_name>
        <docblock line="136">
          <description>Scans the URI and attempts to match the current URI to the
one of the defined routes in the RouteCollection.</description>
          <long-description>This is the main entry point when using the Router.</long-description>
          <tag name="param" line="136" description="" type="null" variable="$uri">
            <type>null</type>
          </tag>
          <tag name="return" line="136" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::handle()" refers="\CodeIgniter\Router\RouterInterface::handle()" link="/classes/CodeIgniter.Router.RouterInterface.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="170" package="Default">
        <name>controllerName</name>
        <full_name>\CodeIgniter\Router\Router::controllerName()</full_name>
        <docblock line="170">
          <description>Returns the name of the matched controller.</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::controllerName()" refers="\CodeIgniter\Router\RouterInterface::controllerName()" link="/classes/CodeIgniter.Router.RouterInterface.html#method_controllerName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="183" package="Default">
        <name>methodName</name>
        <full_name>\CodeIgniter\Router\Router::methodName()</full_name>
        <docblock line="183">
          <description>Returns the name of the method to run in the
chosen container.</description>
          <long-description></long-description>
          <tag name="return" line="183" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::methodName()" refers="\CodeIgniter\Router\RouterInterface::methodName()" link="/classes/CodeIgniter.Router.RouterInterface.html#method_methodName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="194" package="Default">
        <name>get404Override</name>
        <full_name>\CodeIgniter\Router\Router::get404Override()</full_name>
        <docblock line="194">
          <description>Returns the 404 Override settings from the Collection.</description>
          <long-description>If the override is a string, will split to controller/index array.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="226" package="Default">
        <name>params</name>
        <full_name>\CodeIgniter\Router\Router::params()</full_name>
        <docblock line="226">
          <description>Returns the binds that have been matched and collected
during the parsing process as an array, ready to send to
call_user_func_array().</description>
          <long-description></long-description>
          <tag name="return" line="226" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::params()" refers="\CodeIgniter\Router\RouterInterface::params()" link="/classes/CodeIgniter.Router.RouterInterface.html#method_params"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="241" package="Default">
        <name>directory</name>
        <full_name>\CodeIgniter\Router\Router::directory()</full_name>
        <docblock line="241">
          <description>Returns the name of the sub-directory the controller is in,
if any. Relative to APPPATH.'Controllers'.</description>
          <long-description>Only used when auto-routing is turned on.</long-description>
          <tag name="return" line="241" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="254" package="Default">
        <name>getMatchedRoute</name>
        <full_name>\CodeIgniter\Router\Router::getMatchedRoute()</full_name>
        <docblock line="254">
          <description>Returns the routing information that was matched for this
request, if a route was defined.</description>
          <long-description></long-description>
          <tag name="return" line="254" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="273" package="Default">
        <name>setIndexPage</name>
        <full_name>\CodeIgniter\Router\Router::setIndexPage()</full_name>
        <docblock line="273">
          <description>Sets the value that should be used to match the index.php file. Defaults
to index.php but this allows you to modify it in case your are using
something like mod_rewrite to remove the page. This allows you to set
it a blank.</description>
          <long-description></long-description>
          <tag name="param" line="273" description="" type="" variable="$page"/>
          <tag name="return" line="273" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouterInterface::setIndexPage()" refers="\CodeIgniter\Router\RouterInterface::setIndexPage()" link="/classes/CodeIgniter.Router.RouterInterface.html#method_setIndexPage"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="290" package="Default">
        <name>setTranslateURIDashes</name>
        <full_name>\CodeIgniter\Router\Router::setTranslateURIDashes()</full_name>
        <docblock line="290">
          <description>Tells the system whether we should translate URI dashes or not
in the URI from a dash to an underscore.</description>
          <long-description></long-description>
          <tag name="param" line="290" description="" type="boolean|false" variable="$val">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="290" description="" type="\CodeIgniter\Router\Router">
            <type>\CodeIgniter\Router\Router</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="308" package="Default">
        <name>checkRoutes</name>
        <full_name>\CodeIgniter\Router\Router::checkRoutes()</full_name>
        <docblock line="308">
          <description>Compares the uri string against the routes that the
RouteCollection class defined for us, attempting to find a match.</description>
          <long-description>This method will modify $this-&gt;controller, etal as needed.</long-description>
          <tag name="param" line="308" description="&lt;p&gt;The URI path to compare against the routes&lt;/p&gt;" type="string" variable="$uri">
            <type>string</type>
          </tag>
          <tag name="return" line="308" description="Whether the route was matched or not." type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="371" package="Default">
        <name>autoRoute</name>
        <full_name>\CodeIgniter\Router\Router::autoRoute()</full_name>
        <docblock line="371">
          <description>Attempts to match a URI path against Controllers and directories
found in APPPATH/Controllers, to find a matching route.</description>
          <long-description></long-description>
          <tag name="param" line="371" description="" type="string" variable="$uri">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="412" package="Default">
        <name>validateRequest</name>
        <full_name>\CodeIgniter\Router\Router::validateRequest()</full_name>
        <docblock line="412">
          <description>Attempts to validate the URI request and determine the controller path.</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;URI segments&lt;/p&gt;" type="array" variable="$segments">
            <type>array</type>
          </tag>
          <tag name="return" line="412" description="URI segments" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$segments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="450" package="Default">
        <name>setDirectory</name>
        <full_name>\CodeIgniter\Router\Router::setDirectory()</full_name>
        <docblock line="450">
          <description>Sets the sub-directory that the controller is in.</description>
          <long-description></long-description>
          <tag name="param" line="450" description="" type="string|null" variable="$dir">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="450" description="" type="boolean|false" variable="$append">
            <type>boolean</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$dir</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$append</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="472" package="Default">
        <name>setRequest</name>
        <full_name>\CodeIgniter\Router\Router::setRequest()</full_name>
        <docblock line="472">
          <description>Set request route</description>
          <long-description>Takes an array of URI segments as input and sets the class/method
to be called.</long-description>
          <tag name="param" line="472" description="&lt;p&gt;URI segments&lt;/p&gt;" type="array" variable="$segments">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$segments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="512" package="Default">
        <name>setDefaultController</name>
        <full_name>\CodeIgniter\Router\Router::setDefaultController()</full_name>
        <docblock line="512">
          <description>Sets the default controller based on the info set in the RouteCollection.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Router/RouteCollection.php" generated-path="Router.RouteCollection.html" hash="cdc730bb1c354bbfe51c0f84caba56b9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Router" line="46" package="CodeIgniter\Router">
      <extends/>
      <implements>\CodeIgniter\Router\RouteCollectionInterface</implements>
      <name>RouteCollection</name>
      <full_name>\CodeIgniter\Router\RouteCollection</full_name>
      <docblock line="46">
        <description>Class RouteCollection</description>
        <long-description></long-description>
        <tag name="todo" line="46" description="Implement nested resource routing (See CakePHP)"/>
        <tag name="package" line="46" description="CodeIgniter\Router"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="54" package="CodeIgniter\Router">
        <name>$defaultNamespace</name>
        <full_name>\CodeIgniter\Router\RouteCollection::defaultNamespace</full_name>
        <default>'\\'</default>
        <docblock line="54">
          <description>The namespace to be added to any Controllers.</description>
          <long-description>Defaults to the global namespaces (\)</long-description>
          <tag name="var" line="54" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="64" package="CodeIgniter\Router">
        <name>$defaultController</name>
        <full_name>\CodeIgniter\Router\RouteCollection::defaultController</full_name>
        <default>'Home'</default>
        <docblock line="64">
          <description>The name of the default controller to use
when no other controller is specified.</description>
          <long-description>Not used here. Pass-thru value for Router class.</long-description>
          <tag name="var" line="64" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="74" package="CodeIgniter\Router">
        <name>$defaultMethod</name>
        <full_name>\CodeIgniter\Router\RouteCollection::defaultMethod</full_name>
        <default>'index'</default>
        <docblock line="74">
          <description>The name of the default method to use
when no other method has been specified.</description>
          <long-description>Not used here. Pass-thru value for Router class.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="82" package="CodeIgniter\Router">
        <name>$defaultPlaceholder</name>
        <full_name>\CodeIgniter\Router\RouteCollection::defaultPlaceholder</full_name>
        <default>'any'</default>
        <docblock line="82">
          <description>The placeholder used when routing 'resources'
when no other placeholder has been specified.</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="91" package="CodeIgniter\Router">
        <name>$translateURIDashes</name>
        <full_name>\CodeIgniter\Router\RouteCollection::translateURIDashes</full_name>
        <default>false</default>
        <docblock line="91">
          <description>Whether to convert dashes to underscores in URI.</description>
          <long-description>Not used here. Pass-thru value for Router class.</long-description>
          <tag name="var" line="91" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="101" package="CodeIgniter\Router">
        <name>$autoRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollection::autoRoute</full_name>
        <default>true</default>
        <docblock line="101">
          <description>Whether to match URI against Controllers
when it doesn't match defined routes.</description>
          <long-description>Not used here. Pass-thru value for Router class.</long-description>
          <tag name="var" line="101" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="109" package="CodeIgniter\Router">
        <name>$override404</name>
        <full_name>\CodeIgniter\Router\RouteCollection::override404</full_name>
        <default></default>
        <docblock line="109">
          <description>A callable that will be shown
when the route cannot be matched.</description>
          <long-description></long-description>
          <tag name="var" line="109" description="" type="string|\CodeIgniter\Router\closure" variable="">
            <type>string</type>
            <type>\CodeIgniter\Router\closure</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="117" package="CodeIgniter\Router">
        <name>$placeholders</name>
        <full_name>\CodeIgniter\Router\RouteCollection::placeholders</full_name>
        <default>array('any' =&gt; '.*', 'segment' =&gt; '[^/]+', 'num' =&gt; '[0-9]+', 'alpha' =&gt; '[a-zA-Z]+', 'alphanum' =&gt; '[a-zA-Z0-9]+')</default>
        <docblock line="117">
          <description>Defined placeholders that can be used
within the</description>
          <long-description></long-description>
          <tag name="var" line="117" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="130" package="CodeIgniter\Router">
        <name>$routes</name>
        <full_name>\CodeIgniter\Router\RouteCollection::routes</full_name>
        <default>array()</default>
        <docblock line="130">
          <description>An array of all routes and their mappings.</description>
          <long-description></long-description>
          <tag name="var" line="130" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="137" package="CodeIgniter\Router">
        <name>$HTTPVerb</name>
        <full_name>\CodeIgniter\Router\RouteCollection::HTTPVerb</full_name>
        <default></default>
        <docblock line="137">
          <description>The current method that the script is being called by.</description>
          <long-description></long-description>
          <tag name="var" line="137" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="145" package="CodeIgniter\Router">
        <name>$defaultHTTPMethods</name>
        <full_name>\CodeIgniter\Router\RouteCollection::defaultHTTPMethods</full_name>
        <default>array('options', 'get', 'head', 'post', 'put', 'delete', 'trace', 'connect', 'cli')</default>
        <docblock line="145">
          <description>The default list of HTTP methods (and CLI for command line usage)
that is allowed if no other method is provided.</description>
          <long-description></long-description>
          <tag name="var" line="145" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="152" package="CodeIgniter\Router">
        <name>$group</name>
        <full_name>\CodeIgniter\Router\RouteCollection::group</full_name>
        <default>null</default>
        <docblock line="152">
          <description>The name of the current group, if any.</description>
          <long-description></long-description>
          <tag name="var" line="152" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="159" package="CodeIgniter\Router">
        <name>$currentSubdomain</name>
        <full_name>\CodeIgniter\Router\RouteCollection::currentSubdomain</full_name>
        <default>null</default>
        <docblock line="159">
          <description>The current subdomain.</description>
          <long-description></long-description>
          <tag name="var" line="159" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Router" line="166" package="CodeIgniter\Router">
        <name>$currentOptions</name>
        <full_name>\CodeIgniter\Router\RouteCollection::currentOptions</full_name>
        <default>null</default>
        <docblock line="166">
          <description>Stores copy of current options being
applied during creation.</description>
          <long-description></long-description>
          <tag name="var" line="166" description="" type="null" variable="">
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="173" package="CodeIgniter\Router">
        <name>__construct</name>
        <full_name>\CodeIgniter\Router\RouteCollection::__construct()</full_name>
        <docblock line="173">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="194" package="CodeIgniter\Router">
        <name>addPlaceholder</name>
        <full_name>\CodeIgniter\Router\RouteCollection::addPlaceholder()</full_name>
        <docblock line="194">
          <description>Registers a new constraint with the system. Constraints are used
by the routes as placeholders for regular expressions to make defining
the routes more human-friendly.</description>
          <long-description>You can pass an associative array as $placeholder, and have
multiple placeholders added at once.</long-description>
          <tag name="param" line="194" description="" type="string|array" variable="$placeholder">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="194" description="" type="string" variable="$pattern">
            <type>string</type>
          </tag>
          <tag name="return" line="194" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::addPlaceholder()" refers="\CodeIgniter\Router\RouteCollectionInterface::addPlaceholder()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_addPlaceholder"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$placeholder</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="216" package="CodeIgniter\Router">
        <name>setDefaultNamespace</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setDefaultNamespace()</full_name>
        <docblock line="216">
          <description>Sets the default namespace to use for Controllers when no other
namespace has been specified.</description>
          <long-description></long-description>
          <tag name="param" line="216" description="" type="" variable="$value"/>
          <tag name="return" line="216" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::setDefaultNamespace()" refers="\CodeIgniter\Router\RouteCollectionInterface::setDefaultNamespace()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_setDefaultNamespace"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="234" package="CodeIgniter\Router">
        <name>setDefaultController</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setDefaultController()</full_name>
        <docblock line="234">
          <description>Sets the default controller to use when no other controller has been
specified.</description>
          <long-description></long-description>
          <tag name="param" line="234" description="" type="" variable="$value"/>
          <tag name="return" line="234" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::setDefaultController()" refers="\CodeIgniter\Router\RouteCollectionInterface::setDefaultController()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_setDefaultController"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="251" package="CodeIgniter\Router">
        <name>setDefaultMethod</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setDefaultMethod()</full_name>
        <docblock line="251">
          <description>Sets the default method to call on the controller when no other
method has been set in the route.</description>
          <long-description></long-description>
          <tag name="param" line="251" description="" type="" variable="$value"/>
          <tag name="return" line="251" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::setDefaultMethod()" refers="\CodeIgniter\Router\RouteCollectionInterface::setDefaultMethod()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_setDefaultMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="271" package="CodeIgniter\Router">
        <name>setTranslateURIDashes</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setTranslateURIDashes()</full_name>
        <docblock line="271">
          <description>Tells the system whether to convert dashes in URI strings into
underscores. In some search engines, including Google, dashes
create more meaning and make it easier for the search engine to
find words and meaning in the URI for better SEO. But it
doesn't work well with PHP method names.</description>
          <long-description>...</long-description>
          <tag name="param" line="271" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="return" line="271" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::setTranslateURIDashes()" refers="\CodeIgniter\Router\RouteCollectionInterface::setTranslateURIDashes()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_setTranslateURIDashes"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="292" package="CodeIgniter\Router">
        <name>setAutoRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setAutoRoute()</full_name>
        <docblock line="292">
          <description>If TRUE, the system will attempt to match the URI against
Controllers by matching each segment against folders/files
in APPPATH/Controllers, when a match wasn't found against
defined routes.</description>
          <long-description>If FALSE, will stop searching and do NO automatic routing.</long-description>
          <tag name="param" line="292" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="return" line="292" description="" type="\CodeIgniter\Router\RouteCollection">
            <type>\CodeIgniter\Router\RouteCollection</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::setAutoRoute()" refers="\CodeIgniter\Router\RouteCollectionInterface::setAutoRoute()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_setAutoRoute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="312" package="CodeIgniter\Router">
        <name>set404Override</name>
        <full_name>\CodeIgniter\Router\RouteCollection::set404Override()</full_name>
        <docblock line="312">
          <description>Sets the class/method that should be called if routing doesn't
find a match. It can be either a closure or the controller/method
name exactly like a route is defined: Users::index</description>
          <long-description>This setting is passed to the Router class and handled there.</long-description>
          <tag name="param" line="312" description="" type="callable|null" variable="$callable">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="312" description="" type="\CodeIgniter\Router\RouteCollection">
            <type>\CodeIgniter\Router\RouteCollection</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::set404Override()" refers="\CodeIgniter\Router\RouteCollectionInterface::set404Override()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_set404Override"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callable</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="327" package="CodeIgniter\Router">
        <name>get404Override</name>
        <full_name>\CodeIgniter\Router\RouteCollection::get404Override()</full_name>
        <docblock line="327">
          <description>Returns the 404 Override setting, which can be null, a closure
or the controller/string.</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="string|\Closure|null">
            <type>string</type>
            <type>\Closure</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::get404Override()" refers="\CodeIgniter\Router\RouteCollectionInterface::get404Override()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_get404Override"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="340" package="CodeIgniter\Router">
        <name>setDefaultConstraint</name>
        <full_name>\CodeIgniter\Router\RouteCollection::setDefaultConstraint()</full_name>
        <docblock line="340">
          <description>Sets the default constraint to be used in the system. Typically
for use with the 'resources' method.</description>
          <long-description></long-description>
          <tag name="param" line="340" description="" type="" variable="$placeholder"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$placeholder</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="356" package="CodeIgniter\Router">
        <name>getDefaultController</name>
        <full_name>\CodeIgniter\Router\RouteCollection::getDefaultController()</full_name>
        <docblock line="356">
          <description>Returns the name of the default controller. With Namespace.</description>
          <long-description></long-description>
          <tag name="return" line="356" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::getDefaultController()" refers="\CodeIgniter\Router\RouteCollectionInterface::getDefaultController()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_getDefaultController"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="368" package="CodeIgniter\Router">
        <name>getDefaultMethod</name>
        <full_name>\CodeIgniter\Router\RouteCollection::getDefaultMethod()</full_name>
        <docblock line="368">
          <description>Returns the name of the default method to use within the controller.</description>
          <long-description></long-description>
          <tag name="return" line="368" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::getDefaultMethod()" refers="\CodeIgniter\Router\RouteCollectionInterface::getDefaultMethod()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_getDefaultMethod"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="382" package="CodeIgniter\Router">
        <name>shouldTranslateURIDashes</name>
        <full_name>\CodeIgniter\Router\RouteCollection::shouldTranslateURIDashes()</full_name>
        <docblock line="382">
          <description>Returns the current value of the translateURIDashses setting.</description>
          <long-description></long-description>
          <tag name="param" line="382" description="" type="boolean|false" variable="$val">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="382" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::shouldTranslateURIDashes()" refers="\CodeIgniter\Router\RouteCollectionInterface::shouldTranslateURIDashes()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_shouldTranslateURIDashes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="394" package="CodeIgniter\Router">
        <name>shouldAutoRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollection::shouldAutoRoute()</full_name>
        <docblock line="394">
          <description>Returns the flag that tells whether to autoRoute URI against Controllers.</description>
          <long-description></long-description>
          <tag name="return" line="394" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::shouldAutoRoute()" refers="\CodeIgniter\Router\RouteCollectionInterface::shouldAutoRoute()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_shouldAutoRoute"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="406" package="CodeIgniter\Router">
        <name>getRoutes</name>
        <full_name>\CodeIgniter\Router\RouteCollection::getRoutes()</full_name>
        <docblock line="406">
          <description>Returns the raw array of available routes.</description>
          <long-description></long-description>
          <tag name="return" line="406" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::getRoutes()" refers="\CodeIgniter\Router\RouteCollectionInterface::getRoutes()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_getRoutes"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="426" package="CodeIgniter\Router">
        <name>getHTTPVerb</name>
        <full_name>\CodeIgniter\Router\RouteCollection::getHTTPVerb()</full_name>
        <docblock line="426">
          <description>Returns the current HTTP Verb being used.</description>
          <long-description></long-description>
          <tag name="return" line="426" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::getHTTPVerb()" refers="\CodeIgniter\Router\RouteCollectionInterface::getHTTPVerb()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_getHTTPVerb"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="443" package="CodeIgniter\Router">
        <name>map</name>
        <full_name>\CodeIgniter\Router\RouteCollection::map()</full_name>
        <docblock line="443">
          <description>A shortcut method to add a number of routes at a single time.</description>
          <long-description>It does not allow any options to be set on the route, or to
define the method used.</long-description>
          <tag name="param" line="443" description="" type="array" variable="$routes">
            <type>array</type>
          </tag>
          <tag name="param" line="443" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="443" description="" type="\CodeIgniter\Router\RouteCollectionInterface">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$routes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="468" package="CodeIgniter\Router">
        <name>add</name>
        <full_name>\CodeIgniter\Router\RouteCollection::add()</full_name>
        <docblock line="468">
          <description>Adds a single route to the collection.</description>
          <long-description>Example:
     $routes-&gt;add('news', 'Posts::index');</long-description>
          <tag name="param" line="468" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="param" line="468" description="" type="array|string" variable="$to">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="param" line="468" description="" type="" variable="$options"/>
          <tag name="return" line="468" description="RouteCollectionInterface" type="\CodeIgniter\Router\RouteCollection">
            <type>\CodeIgniter\Router\RouteCollection</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::add()" refers="\CodeIgniter\Router\RouteCollectionInterface::add()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_add"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>array|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="486" package="CodeIgniter\Router">
        <name>addRedirect</name>
        <full_name>\CodeIgniter\Router\RouteCollection::addRedirect()</full_name>
        <docblock line="486">
          <description>Adds a temporary redirect from one route to another. Used for
redirecting traffic from old, non-existing routes to the new
moved routes.</description>
          <long-description></long-description>
          <tag name="param" line="486" description="&lt;p&gt;The pattern to match against&lt;/p&gt;" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="param" line="486" description="&lt;p&gt;Either a route name or a URI to redirect to&lt;/p&gt;" type="string" variable="$to">
            <type>string</type>
          </tag>
          <tag name="param" line="486" description="&lt;p&gt;The HTTP status code that should be returned with this redirect&lt;/p&gt;" type="integer" variable="$status">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$status</name>
          <default>302</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="508" package="CodeIgniter\Router">
        <name>isRedirect</name>
        <full_name>\CodeIgniter\Router\RouteCollection::isRedirect()</full_name>
        <docblock line="508">
          <description>Determines if the route is a redirecting route.</description>
          <long-description></long-description>
          <tag name="param" line="508" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="return" line="508" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::isRedirect()" refers="\CodeIgniter\Router\RouteCollectionInterface::isRedirect()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_isRedirect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="531" package="CodeIgniter\Router">
        <name>getRedirectCode</name>
        <full_name>\CodeIgniter\Router\RouteCollection::getRedirectCode()</full_name>
        <docblock line="531">
          <description>Grabs the HTTP status code from a redirecting Route.</description>
          <long-description></long-description>
          <tag name="param" line="531" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="return" line="531" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::getRedirectCode()" refers="\CodeIgniter\Router\RouteCollectionInterface::getRedirectCode()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_getRedirectCode"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="568" package="CodeIgniter\Router">
        <name>group</name>
        <full_name>\CodeIgniter\Router\RouteCollection::group()</full_name>
        <docblock line="568">
          <description>Group a series of routes under a single URL segment. This is handy
for grouping items into an admin area, like:</description>
          <long-description>Example:
    // Creates route: admin/users
    $route-&gt;group('admin', function() {
           $route-&gt;resources('users');
    });</long-description>
          <tag name="param" line="568" description="&lt;p&gt;The name to group/prefix the routes with.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="568" description="" type="" variable="$params"/>
          <tag name="return" line="568" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="636" package="CodeIgniter\Router">
        <name>resource</name>
        <full_name>\CodeIgniter\Router\RouteCollection::resource()</full_name>
        <docblock line="636">
          <description>Creates a collections of HTTP-verb based routes for a controller.</description>
          <long-description>Possible Options:
     'controller'    - Customize the name of the controller used in the 'to' route
     'placeholder'   - The regex used by the Router. Defaults to '(:any)'

Example:
     $route-&gt;resources('photos');

     // Generates the following routes:
     HTTP Verb | Path        | Action        | Used for...
     ----------+-------------+---------------+-----------------
     GET         /photos             listAll         display a list of photos
     GET         /photos/{id}        show            display a specific photo
     POST        /photos             create          create a new photo
     PUT         /photos/{id}        update          update an existing photo
     DELETE      /photos/{id}        delete          delete an existing photo

 If 'websafe' option is present, the following paths are also available:

     POST        /photos/{id}        update
     DELETE      /photos/{id}/delete delete</long-description>
          <tag name="param" line="636" description="&lt;p&gt;The name of the controller to route to.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="636" description="&lt;p&gt;An list of possible ways to customize the routing.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="636" description="" type="\CodeIgniter\Router\RouteCollectionInterface">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="694" package="CodeIgniter\Router">
        <name>match</name>
        <full_name>\CodeIgniter\Router\RouteCollection::match()</full_name>
        <docblock line="694">
          <description>Specifies a single route to match for multiple HTTP Verbs.</description>
          <long-description>Example:
 $route-&gt;match( ['get', 'post'], 'users/(:num)', 'users/$1);</long-description>
          <tag name="param" line="694" description="" type="array" variable="$verbs">
            <type>array</type>
          </tag>
          <tag name="param" line="694" description="" type="" variable="$from"/>
          <tag name="param" line="694" description="" type="" variable="$to"/>
          <tag name="param" line="694" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$verbs</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="715" package="CodeIgniter\Router">
        <name>get</name>
        <full_name>\CodeIgniter\Router\RouteCollection::get()</full_name>
        <docblock line="715">
          <description>Specifies a route that is only available to GET requests.</description>
          <long-description></long-description>
          <tag name="param" line="715" description="" type="" variable="$from"/>
          <tag name="param" line="715" description="" type="" variable="$to"/>
          <tag name="param" line="715" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="734" package="CodeIgniter\Router">
        <name>post</name>
        <full_name>\CodeIgniter\Router\RouteCollection::post()</full_name>
        <docblock line="734">
          <description>Specifies a route that is only available to POST requests.</description>
          <long-description></long-description>
          <tag name="param" line="734" description="" type="" variable="$from"/>
          <tag name="param" line="734" description="" type="" variable="$to"/>
          <tag name="param" line="734" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="753" package="CodeIgniter\Router">
        <name>put</name>
        <full_name>\CodeIgniter\Router\RouteCollection::put()</full_name>
        <docblock line="753">
          <description>Specifies a route that is only available to PUT requests.</description>
          <long-description></long-description>
          <tag name="param" line="753" description="" type="" variable="$from"/>
          <tag name="param" line="753" description="" type="" variable="$to"/>
          <tag name="param" line="753" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="772" package="CodeIgniter\Router">
        <name>delete</name>
        <full_name>\CodeIgniter\Router\RouteCollection::delete()</full_name>
        <docblock line="772">
          <description>Specifies a route that is only available to DELETE requests.</description>
          <long-description></long-description>
          <tag name="param" line="772" description="" type="" variable="$from"/>
          <tag name="param" line="772" description="" type="" variable="$to"/>
          <tag name="param" line="772" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="791" package="CodeIgniter\Router">
        <name>head</name>
        <full_name>\CodeIgniter\Router\RouteCollection::head()</full_name>
        <docblock line="791">
          <description>Specifies a route that is only available to HEAD requests.</description>
          <long-description></long-description>
          <tag name="param" line="791" description="" type="" variable="$from"/>
          <tag name="param" line="791" description="" type="" variable="$to"/>
          <tag name="param" line="791" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="810" package="CodeIgniter\Router">
        <name>patch</name>
        <full_name>\CodeIgniter\Router\RouteCollection::patch()</full_name>
        <docblock line="810">
          <description>Specifies a route that is only available to PATCH requests.</description>
          <long-description></long-description>
          <tag name="param" line="810" description="" type="" variable="$from"/>
          <tag name="param" line="810" description="" type="" variable="$to"/>
          <tag name="param" line="810" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="829" package="CodeIgniter\Router">
        <name>options</name>
        <full_name>\CodeIgniter\Router\RouteCollection::options()</full_name>
        <docblock line="829">
          <description>Specifies a route that is only available to OPTIONS requests.</description>
          <long-description></long-description>
          <tag name="param" line="829" description="" type="" variable="$from"/>
          <tag name="param" line="829" description="" type="" variable="$to"/>
          <tag name="param" line="829" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="848" package="CodeIgniter\Router">
        <name>cli</name>
        <full_name>\CodeIgniter\Router\RouteCollection::cli()</full_name>
        <docblock line="848">
          <description>Specifies a route that is only available to command-line requests.</description>
          <long-description></long-description>
          <tag name="param" line="848" description="" type="" variable="$from"/>
          <tag name="param" line="848" description="" type="" variable="$to"/>
          <tag name="param" line="848" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="868" package="CodeIgniter\Router">
        <name>environment</name>
        <full_name>\CodeIgniter\Router\RouteCollection::environment()</full_name>
        <docblock line="868">
          <description>Limits the routes to a specified ENVIRONMENT or they won't run.</description>
          <long-description></long-description>
          <tag name="param" line="868" description="" type="" variable="$env"/>
          <tag name="param" line="868" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="return" line="868" description="" type="\CodeIgniter\Router\RouteCollection">
            <type>\CodeIgniter\Router\RouteCollection</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$env</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="896" package="CodeIgniter\Router">
        <name>reverseRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollection::reverseRoute()</full_name>
        <docblock line="896">
          <description>Attempts to look up a route based on it's destination.</description>
          <long-description>If a route exists:

     'path/(:any)/(:any)' =&gt; 'Controller::method/$1/$2'

This method allows you to know the Controller and method
and get the route that leads to it.

     // Equals 'path/$param1/$param2'
     reverseRoute('Controller::method', $param1, $param2);</long-description>
          <tag name="param" line="896" description="" type="string" variable="$search">
            <type>string</type>
          </tag>
          <tag name="param" line="896" description="" type="\CodeIgniter\Router\...$params" variable="$params">
            <type>\CodeIgniter\Router\...$params</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Router\RouteCollectionInterface::reverseRoute()" refers="\CodeIgniter\Router\RouteCollectionInterface::reverseRoute()" link="/classes/CodeIgniter.Router.RouteCollectionInterface.html#method_reverseRoute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$search</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="947" package="CodeIgniter\Router">
        <name>fillRouteParams</name>
        <full_name>\CodeIgniter\Router\RouteCollection::fillRouteParams()</full_name>
        <docblock line="947">
          <description>Given a</description>
          <long-description></long-description>
          <tag name="param" line="947" description="" type="array" variable="$from">
            <type>array</type>
          </tag>
          <tag name="param" line="947" description="" type="array|null" variable="$params">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="947" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Router" line="987" package="CodeIgniter\Router">
        <name>create</name>
        <full_name>\CodeIgniter\Router\RouteCollection::create()</full_name>
        <docblock line="987">
          <description>Does the heavy lifting of creating an actual route. You must specify
the request method(s) that this route will work for. They can be separated
by a pipe character "|" if there is more than one.</description>
          <long-description></long-description>
          <tag name="param" line="987" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="param" line="987" description="" type="array" variable="$to">
            <type>array</type>
          </tag>
          <tag name="param" line="987" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="CodeIgniter\Router" line="1085" package="CodeIgniter\Router">
        <name>checkSubdomains</name>
        <full_name>\CodeIgniter\Router\RouteCollection::checkSubdomains()</full_name>
        <docblock line="1085">
          <description>Compares the subdomain(s) passed in against the current subdomain
on this page request.</description>
          <long-description></long-description>
          <tag name="param" line="1085" description="" type="" variable="$subdomains"/>
          <tag name="return" line="1085" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$subdomains</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="CodeIgniter\Router" line="1124" package="CodeIgniter\Router">
        <name>determineCurrentSubdomain</name>
        <full_name>\CodeIgniter\Router\RouteCollection::determineCurrentSubdomain()</full_name>
        <docblock line="1124">
          <description>Examines the HTTP_HOST to get a best match for the subdomain. It
won't be perfect, but should work for our needs.</description>
          <long-description>It's especially not perfect since it's possible to register a domain
with a period (.) as part of the domain name.</long-description>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="46">Implement nested resource routing (See CakePHP)</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Logs.php" generated-path="Debug.Toolbar.Collectors.Logs.html" hash="ec8cc749e900f40cca589fa38dec620a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="44" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Logs</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Logs</full_name>
      <docblock line="44">
        <description>Loags collector</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="52" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Logs::hasTimeline</full_name>
        <default>false</default>
        <docblock line="52">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="60" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Logs::hasTabContent</full_name>
        <default>true</default>
        <docblock line="60">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="68" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Logs::title</full_name>
        <default>'Logs'</default>
        <docblock line="68">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="68" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="78" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Logs::display()</full_name>
        <docblock line="78">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="78" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_display"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/CustomExceptions.php" generated-path="Debug.CustomExceptions.html" hash="7088081e48bbe3cc9104377041ea71ef" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter" line="58" package="Default">
      <extends>\Error</extends>
      <name>EmergencyError</name>
      <full_name>\CodeIgniter\EmergencyError</full_name>
      <docblock line="58">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="58" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="63" package="Default">
      <extends>\Error</extends>
      <name>AlertError</name>
      <full_name>\CodeIgniter\AlertError</full_name>
      <docblock line="63">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="63" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="68" package="Default">
      <extends>\Error</extends>
      <name>CriticalError</name>
      <full_name>\CodeIgniter\CriticalError</full_name>
      <docblock line="68">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="68" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="73" package="Default">
      <extends>\Error</extends>
      <name>Error</name>
      <full_name>\CodeIgniter\Error</full_name>
      <docblock line="73">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="73" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="78" package="Default">
      <extends>\OutOfBoundsException</extends>
      <name>PageNotFoundException</name>
      <full_name>\CodeIgniter\PageNotFoundException</full_name>
      <docblock line="78">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="78" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="84" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\PageNotFoundException::code</full_name>
        <default>404</default>
        <docblock line="84">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="84" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="93" package="Default">
      <extends>\CodeIgniter\CriticalError</extends>
      <name>ConfigException</name>
      <full_name>\CodeIgniter\ConfigException</full_name>
      <docblock line="93">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="93" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\CriticalError" refers="\CodeIgniter\CriticalError" link="/classes/CodeIgniter.CriticalError.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="99" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\ConfigException::code</full_name>
        <default>3</default>
        <docblock line="99">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="108" package="Default">
      <extends>\CodeIgniter\CriticalError</extends>
      <name>UnknownFileException</name>
      <full_name>\CodeIgniter\UnknownFileException</full_name>
      <docblock line="108">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="108" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\CriticalError" refers="\CodeIgniter\CriticalError" link="/classes/CodeIgniter.CriticalError.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="114" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\UnknownFileException::code</full_name>
        <default>4</default>
        <docblock line="114">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="114" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="123" package="Default">
      <extends>\CodeIgniter\CriticalError</extends>
      <name>UnknownClassException</name>
      <full_name>\CodeIgniter\UnknownClassException</full_name>
      <docblock line="123">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="123" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\CriticalError" refers="\CodeIgniter\CriticalError" link="/classes/CodeIgniter.CriticalError.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="129" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\UnknownClassException::code</full_name>
        <default>5</default>
        <docblock line="129">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="129" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="138" package="Default">
      <extends>\CodeIgniter\CriticalError</extends>
      <name>UnknownMethodException</name>
      <full_name>\CodeIgniter\UnknownMethodException</full_name>
      <docblock line="138">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="138" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\CriticalError" refers="\CodeIgniter\CriticalError" link="/classes/CodeIgniter.CriticalError.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="144" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\UnknownMethodException::code</full_name>
        <default>6</default>
        <docblock line="144">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="144" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="153" package="Default">
      <extends>\OutOfBoundsException</extends>
      <name>UserInputException</name>
      <full_name>\CodeIgniter\UserInputException</full_name>
      <docblock line="153">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="153" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="159" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\UserInputException::code</full_name>
        <default>7</default>
        <docblock line="159">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="159" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter" line="168" package="Default">
      <extends>\CodeIgniter\Error</extends>
      <name>DatabaseException</name>
      <full_name>\CodeIgniter\DatabaseException</full_name>
      <docblock line="168">
        <description>Exception for automatic logging.</description>
        <long-description></long-description>
        <tag name="package" line="168" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Error" refers="\CodeIgniter\Error" link="/classes/CodeIgniter.Error.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="174" package="Default">
        <name>$code</name>
        <full_name>\CodeIgniter\DatabaseException::code</full_name>
        <default>8</default>
        <docblock line="174">
          <description>Error code</description>
          <long-description></long-description>
          <tag name="var" line="174" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9V21v2zYQ/mz/ikMwYEmh2dnadUO7YVVsuRZmS4YsNwuwL7RE21wkUiMpu0bR/747SnZeuu5D3C4IkPLIu3vuuTf1l9+qTQWSldxULOMwUDkP11JYrl93u/1nz7rw7L4QjyTxJaiKSzCq1qjFqqoQGbNCScj5lheqKrm0sNJoeKf0LayUhtl41qqnG2EgU9LSI/yn5gVnhudQy5xrsBsO0zCFici4NBzO8XDRqg5UtddivbFwnl3AD5ffv4Dv6M9LD660sMJs8ElRl0vBIJTGCltbDmoFKc82UhVqvW8tzbguhTGEGSFsuObLPaw1Q1S5h9C5U8s2TK+5B1YBk3uouDaooJaWCSnkGhjGUZFJemwpLqNWdsc0siJzYMaoTDA0CbnKamKloWklCm7gnEI9m7caZxfOT85ZQQaFdEwcbmEn7EbVFtkyVouMzHj4KCvqnJAcrgtRitYJqTuyDNlD07XBUAiwB6XKxYr+chdfVS8LJM+DXJD1JbLmgSGhy4FH0fQxiYYXDhwaERiAC/oOo3tGjioi17Z0GZLsNqp8GI9wqFa1luiYO7VcIX3O7188syQhjZUqCrWjGLFmckGhmVfHUkKil2rLXVhNZUhlRdbw7zJS3WW6vTIbVhSw5C196FxIskbSQ2SaYBiL9SBYAZXSzu/jiHsHHOMA5vEovfaTAMI5zJL4XTgMhnDmz/F85sF1mI7jRQr4IvGj9AbiEfjRDfweRkMPgj9mSTCfQ5yQtXA6m4QBisNoMFkMw+gtXKFqFGNThNgNaDeNnc/WWhjMyd40SAZjPPpX4SRMbzyyNQrTiCyP4gR8mPlJGg4WEz+B2SKZxfMAQQzRchRGowQdBdMgSnvoGGUQvMMDzMf+ZELeXOsvMIyEgMIgnt0k4dtxCuN4MgxQeBUgPv9qEjTeMLrBxA+nHgz9qf82cFoxGnJB0ssGJlyPA5KSVx9/B2kYRxTPII7SBI8ehpukR+3rcB544CfhnJgZJfHURUrsolLs7KBqFDSGiPmHCcIndF7Mg6NNGAb+BM1htqLHCT0k+Q3OyFu25p2HExHesBp7T98Xw5Bvceaw0t0fa7PzBeYXnG+srV71+8tM2F7G+hfOR9upnfaS5nMznntKr/vtrelj9XTuDddWVd4e9DKMQTQx9DLVwDfYJrzzDpuZeuh577J36eRuiDkfeOzf7YvaWGz24H3GK9c0d72K05wfxUBToNJqK6gDaUXsVd3MKOpdtzholjQv3KiVBscTDlEyx99jYwsuqdUzrYxxjXlvF/XcdMj5itWFBa41eqDwGses0Jzle5xo1lWPcymasVCbZh4dXC+V3cA4TWeAA8HW5mAGVQaTEJHgrHOix5XyaHciR0hSt0O4AofnjiT0i1Ou5USUTIti/zD8HXOCDdvS4EK+ymbMY1Gsed7tYBUqEmU4xvaA2+wRH98aegpmjxSWve69jB1RuCwc7TjLOHd7DnpW4DaDwC0Mme0b/Pw9piM38Gdz/PDxNUC/3/qgxVrL2rBlwZ/iyy+4to1h+vmML9+tQiix6ih3lt3il4koS57T4kUmzhs0/XyJC2aHS5Pb7OIpeAbUochuC+kzeA6v7m0rD7fyLa2oslKSPnpqybZMFMiLQ9N7UiaOxPwXO0mNC6zkTflTizBLaxYXIX5I/F0LWsQHrrCPyPVTwMyw2CNlRwo/4e7Ujpji2sarK7o0x9vuh26HHHXI07E53fHNlmkscQt06nc72AMWPwiwKb+hN/ArvLh8gR+oH7vd109KpJIrsf4U54MEn4Tv+QnoFvJWYp2OcLp+TYinENhCHNDha2L88XSMU467+V9q8suBfHkKSMN1KKva/h9N89MJQIfMsiX+J+1TnKcT+PMB1z/6MJ3C</source>
  </file>
  <file path="HTTP/ContentSecurityPolicy.php" generated-path="HTTP.ContentSecurityPolicy.html" hash="ab6fa48c6f1d9ea6e17aafff17e5d04e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ContentSecurityPolicy">\Config\ContentSecurityPolicy</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="53" package="CodeIgniter\HTTP">
      <extends/>
      <name>ContentSecurityPolicy</name>
      <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy</full_name>
      <docblock line="53">
        <description>Class ContentSecurityPolicy</description>
        <long-description>Provides tools for working with the Content-Security-Policy header
to help defeat XSS attacks.</long-description>
        <tag name="see" line="53" description="" link="http://www.w3.org/TR/CSP/"/>
        <tag name="see" line="53" description="" link="http://www.html5rocks.com/en/tutorials/security/content-security-policy/"/>
        <tag name="see" line="53" description="" link="http://content-security-policy.com/"/>
        <tag name="see" line="53" description="" link="https://www.owasp.org/index.php/Content_Security_Policy"/>
        <tag name="package" line="53" description="CodeIgniter\HTTP"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="59" package="CodeIgniter\HTTP">
        <name>$baseURI</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::baseURI</full_name>
        <default>array()</default>
        <docblock line="59">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="65" package="CodeIgniter\HTTP">
        <name>$childSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::childSrc</full_name>
        <default>array()</default>
        <docblock line="65">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="71" package="CodeIgniter\HTTP">
        <name>$connectSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::connectSrc</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="77" package="CodeIgniter\HTTP">
        <name>$defaultSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::defaultSrc</full_name>
        <default>array()</default>
        <docblock line="77">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="77" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="83" package="CodeIgniter\HTTP">
        <name>$fontSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::fontSrc</full_name>
        <default>array()</default>
        <docblock line="83">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="89" package="CodeIgniter\HTTP">
        <name>$formAction</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::formAction</full_name>
        <default>array()</default>
        <docblock line="89">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="89" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="95" package="CodeIgniter\HTTP">
        <name>$frameAncestors</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::frameAncestors</full_name>
        <default>null</default>
        <docblock line="95">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="95" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter\HTTP">
        <name>$imageSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::imageSrc</full_name>
        <default>array()</default>
        <docblock line="101">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="107" package="CodeIgniter\HTTP">
        <name>$mediaSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::mediaSrc</full_name>
        <default>array()</default>
        <docblock line="107">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="113" package="CodeIgniter\HTTP">
        <name>$objectSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::objectSrc</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="119" package="CodeIgniter\HTTP">
        <name>$pluginTypes</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::pluginTypes</full_name>
        <default>null</default>
        <docblock line="119">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="119" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="125" package="CodeIgniter\HTTP">
        <name>$reportURI</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::reportURI</full_name>
        <default>null</default>
        <docblock line="125">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="131" package="CodeIgniter\HTTP">
        <name>$sandbox</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::sandbox</full_name>
        <default>false</default>
        <docblock line="131">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="131" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="137" package="CodeIgniter\HTTP">
        <name>$scriptSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::scriptSrc</full_name>
        <default>array()</default>
        <docblock line="137">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="137" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="143" package="CodeIgniter\HTTP">
        <name>$styleSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::styleSrc</full_name>
        <default>array()</default>
        <docblock line="143">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="143" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="149" package="CodeIgniter\HTTP">
        <name>$upgradeInsecureRequests</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::upgradeInsecureRequests</full_name>
        <default>false</default>
        <docblock line="149">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="149" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="155" package="CodeIgniter\HTTP">
        <name>$reportOnly</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::reportOnly</full_name>
        <default>false</default>
        <docblock line="155">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="155" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="161" package="CodeIgniter\HTTP">
        <name>$validSources</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::validSources</full_name>
        <default>array('self', 'none', 'unsafe-inline', 'unsafe-eval')</default>
        <docblock line="161">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="161" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="167" package="CodeIgniter\HTTP">
        <name>$nonces</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::nonces</full_name>
        <default>array()</default>
        <docblock line="167">
          <description>Used for security enforcement</description>
          <long-description></long-description>
          <tag name="var" line="167" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="178" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::__construct()</full_name>
        <docblock line="178">
          <description>ContentSecurityPolicy constructor.</description>
          <long-description>Stores our default values from the Config file.</long-description>
          <tag name="param" line="178" description="" type="\Config\ContentSecurityPolicy" variable="$config">
            <type>\Config\ContentSecurityPolicy</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\ContentSecurityPolicy</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="198" package="CodeIgniter\HTTP">
        <name>finalize</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::finalize()</full_name>
        <docblock line="198">
          <description>Compiles and sets the appropriate headers in the request.</description>
          <long-description>Should be called just prior to sending the response to the user agent.</long-description>
          <tag name="param" line="198" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="222" package="CodeIgniter\HTTP">
        <name>reportOnly</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::reportOnly()</full_name>
        <docblock line="222">
          <description>If TRUE, nothing will be restricted. Instead all violations will
be reported to the reportURI for monitoring. This is useful when
you are just starting to implement the policy, and will help
determine what errors need to be addressed before you turn on
all filtering.</description>
          <long-description></long-description>
          <tag name="param" line="222" description="" type="boolean|true" variable="$value">
            <type>boolean</type>
            <type>true</type>
          </tag>
          <tag name="return" line="222" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>true</default>
          <type>boolean|true</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="243" package="CodeIgniter\HTTP">
        <name>setBaseURI</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::setBaseURI()</full_name>
        <docblock line="243">
          <description>Sets the base_uri value. Can be either a URI class or a simple string.</description>
          <long-description>base_uri restricts the URLs that can appear in a page’s &lt;base&gt; element.</long-description>
          <tag name="see" line="243" description="" link="http://www.w3.org/TR/CSP/#directive-base-uri"/>
          <tag name="param" line="243" description="" type="string" variable="$uri">
            <type>string</type>
          </tag>
          <tag name="param" line="243" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="243" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="267" package="CodeIgniter\HTTP">
        <name>addChildSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addChildSrc()</full_name>
        <docblock line="267">
          <description>Adds a new valid endpoint for a form's action. Can be either
a URI class or a simple string.</description>
          <long-description>child-src lists the URLs for workers and embedded frame contents.
For example: child-src https://youtube.com would enable embedding
videos from YouTube but not from other origins.</long-description>
          <tag name="see" line="267" description="" link="http://www.w3.org/TR/CSP/#directive-child-src"/>
          <tag name="param" line="267" description="" type="" variable="$uri"/>
          <tag name="param" line="267" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="267" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="290" package="CodeIgniter\HTTP">
        <name>addConnectSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addConnectSrc()</full_name>
        <docblock line="290">
          <description>Adds a new valid endpoint for a form's action. Can be either
a URI class or a simple string.</description>
          <long-description>connect-src limits the origins to which you can connect
(via XHR, WebSockets, and EventSource).</long-description>
          <tag name="see" line="290" description="" link="http://www.w3.org/TR/CSP/#directive-connect-src"/>
          <tag name="param" line="290" description="" type="" variable="$uri"/>
          <tag name="param" line="290" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="290" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="313" package="CodeIgniter\HTTP">
        <name>setDefaultSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::setDefaultSrc()</full_name>
        <docblock line="313">
          <description>Adds a new valid endpoint for a form's action. Can be either
a URI class or a simple string.</description>
          <long-description>default_src is the URI that is used for many of the settings when
no other source has been set.</long-description>
          <tag name="see" line="313" description="" link="http://www.w3.org/TR/CSP/#directive-default-src"/>
          <tag name="param" line="313" description="" type="" variable="$uri"/>
          <tag name="param" line="313" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="313" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="335" package="CodeIgniter\HTTP">
        <name>addFontSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addFontSrc()</full_name>
        <docblock line="335">
          <description>Adds a new valid endpoint for a form's action. Can be either
a URI class or a simple string.</description>
          <long-description>font-src specifies the origins that can serve web fonts.</long-description>
          <tag name="see" line="335" description="" link="http://www.w3.org/TR/CSP/#directive-font-src"/>
          <tag name="param" line="335" description="" type="" variable="$uri"/>
          <tag name="param" line="335" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="335" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="355" package="CodeIgniter\HTTP">
        <name>addFormAction</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addFormAction()</full_name>
        <docblock line="355">
          <description>Adds a new valid endpoint for a form's action. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="355" description="" link="http://www.w3.org/TR/CSP/#directive-form-action"/>
          <tag name="param" line="355" description="" type="" variable="$uri"/>
          <tag name="param" line="355" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="355" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="375" package="CodeIgniter\HTTP">
        <name>addFrameAncestor</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addFrameAncestor()</full_name>
        <docblock line="375">
          <description>Adds a new resource that should allow embedding the resource using
&lt;frame&gt;, &lt;iframe&gt;, &lt;object&gt;, &lt;embed&gt;, or &lt;applet&gt;</description>
          <long-description></long-description>
          <tag name="see" line="375" description="" link="http://www.w3.org/TR/CSP/#directive-frame-ancestors"/>
          <tag name="param" line="375" description="" type="" variable="$uri"/>
          <tag name="param" line="375" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="375" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="395" package="CodeIgniter\HTTP">
        <name>addImageSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addImageSrc()</full_name>
        <docblock line="395">
          <description>Adds a new valid endpoint for valid image sources. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="395" description="" link="http://www.w3.org/TR/CSP/#directive-img-src"/>
          <tag name="param" line="395" description="" type="" variable="$uri"/>
          <tag name="param" line="395" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="395" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="415" package="CodeIgniter\HTTP">
        <name>addMediaSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addMediaSrc()</full_name>
        <docblock line="415">
          <description>Adds a new valid endpoint for valid video and audio. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="415" description="" link="http://www.w3.org/TR/CSP/#directive-media-src"/>
          <tag name="param" line="415" description="" type="" variable="$uri"/>
          <tag name="param" line="415" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="415" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="435" package="CodeIgniter\HTTP">
        <name>addObjectSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addObjectSrc()</full_name>
        <docblock line="435">
          <description>Adds a new valid endpoint for Flash and other plugin sources. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="435" description="" link="http://www.w3.org/TR/CSP/#directive-object-src"/>
          <tag name="param" line="435" description="" type="" variable="$uri"/>
          <tag name="param" line="435" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="435" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="455" package="CodeIgniter\HTTP">
        <name>addPluginType</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addPluginType()</full_name>
        <docblock line="455">
          <description>Limits the types of plugins that can be used. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="455" description="" link="http://www.w3.org/TR/CSP/#directive-plugin-types"/>
          <tag name="param" line="455" description="&lt;p&gt;One or more plugin mime types, separate by spaces&lt;/p&gt;" type="string" variable="$mime">
            <type>string</type>
          </tag>
          <tag name="param" line="455" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="455" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mime</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="474" package="CodeIgniter\HTTP">
        <name>setReportURI</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::setReportURI()</full_name>
        <docblock line="474">
          <description>Specifies a URL where a browser will send reports when a content
security policy is violated. Can be either a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="474" description="" link="http://www.w3.org/TR/CSP/#directive-report-uri"/>
          <tag name="param" line="474" description="" type="" variable="$uri"/>
          <tag name="return" line="474" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="494" package="CodeIgniter\HTTP">
        <name>setSandbox</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::setSandbox()</full_name>
        <docblock line="494">
          <description>specifies an HTML sandbox policy that the user agent applies to
the protected resource.</description>
          <long-description></long-description>
          <tag name="see" line="494" description="" link="http://www.w3.org/TR/CSP/#directive-sandbox"/>
          <tag name="param" line="494" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="param" line="494" description="&lt;p&gt;An array of sandbox flags that can be added to the directive.&lt;/p&gt;" type="array" variable="$flags">
            <type>array</type>
          </tag>
          <tag name="return" line="494" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$flags</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="521" package="CodeIgniter\HTTP">
        <name>addScriptSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addScriptSrc()</full_name>
        <docblock line="521">
          <description>Adds a new valid endpoint for javascript file sources. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="521" description="" link="http://www.w3.org/TR/CSP/#directive-connect-src"/>
          <tag name="param" line="521" description="" type="" variable="$uri"/>
          <tag name="param" line="521" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="521" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="541" package="CodeIgniter\HTTP">
        <name>addStyleSrc</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addStyleSrc()</full_name>
        <docblock line="541">
          <description>Adds a new valid endpoint for CSS file sources. Can be either
a URI class or a simple string.</description>
          <long-description></long-description>
          <tag name="see" line="541" description="" link="http://www.w3.org/TR/CSP/#directive-connect-src"/>
          <tag name="param" line="541" description="" type="" variable="$uri"/>
          <tag name="param" line="541" description="" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
          <tag name="return" line="541" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="558" package="CodeIgniter\HTTP">
        <name>upgradeInsecureRequests</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::upgradeInsecureRequests()</full_name>
        <docblock line="558">
          <description>Sets whether the user agents should rewrite URL schemes, changing
HTTP to HTTPS.</description>
          <long-description></long-description>
          <tag name="param" line="558" description="" type="boolean|true" variable="$value">
            <type>boolean</type>
            <type>true</type>
          </tag>
          <tag name="return" line="558" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>true</default>
          <type>boolean|true</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="578" package="CodeIgniter\HTTP">
        <name>addOption</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addOption()</full_name>
        <docblock line="578">
          <description>DRY method to add an string or array to a class property.</description>
          <long-description></long-description>
          <tag name="param" line="578" description="" type="" variable="$options"/>
          <tag name="param" line="578" description="" type="string" variable="$target">
            <type>string</type>
          </tag>
          <tag name="param" line="578" description="&lt;p&gt;If TRUE, this item will be reported, not restricted&lt;/p&gt;" type="boolean" variable="$reportOnly">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$target</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reportOnly</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="606" package="CodeIgniter\HTTP">
        <name>generateNonces</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::generateNonces()</full_name>
        <docblock line="606">
          <description>Scans the body of the request message and replaces any nonce
placeholders with actual nonces, that we'll then add to our
headers.</description>
          <long-description></long-description>
          <tag name="param" line="606" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="655" package="CodeIgniter\HTTP">
        <name>buildHeaders</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::buildHeaders()</full_name>
        <docblock line="655">
          <description>Based on the current state of the elements, will add the appropriate
Content-Security-Policy and Content-Security-Policy-Report-Only headers
with their values to the response object.</description>
          <long-description></long-description>
          <tag name="param" line="655" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="701" package="CodeIgniter\HTTP">
        <name>addToHeader</name>
        <full_name>\CodeIgniter\HTTP\ContentSecurityPolicy::addToHeader()</full_name>
        <docblock line="701">
          <description>Adds a directive and it's options to the appropriate header. The $values
array might have options that are geared toward either the regular or the
reportOnly header, since it's viable to have both simultaneously.</description>
          <long-description></long-description>
          <tag name="param" line="701" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="701" description="" type="array|string|null" variable="$values">
            <type>array</type>
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="701" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array|string|null</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/LoggerInterface.php" generated-path="Log.LoggerInterface.html" hash="ee585aa9d0c2c9035862fcfb5d994b48" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Psr\Log" line="50" package="CodeIgniter\Log">
      <name>LoggerInterface</name>
      <full_name>\Psr\Log\LoggerInterface</full_name>
      <docblock line="50">
        <description>Describes a logger instance</description>
        <long-description>The message MUST be a string or object implementing __toString().

The message MAY contain placeholders in the form: {foo} where foo
will be replaced by the context data in key "foo".

The context array can contain arbitrary data, the only assumption that
can be made by implementors is that if an Exception instance is given
to produce a stack trace, it MUST be in a key named "exception".</long-description>
        <tag name="package" line="50" description="CodeIgniter\Log"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="59" package="CodeIgniter\Log">
        <name>emergency</name>
        <full_name>\Psr\Log\LoggerInterface::emergency()</full_name>
        <docblock line="59">
          <description>System is unusable.</description>
          <long-description></long-description>
          <tag name="param" line="59" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="59" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="73" package="CodeIgniter\Log">
        <name>alert</name>
        <full_name>\Psr\Log\LoggerInterface::alert()</full_name>
        <docblock line="73">
          <description>Action must be taken immediately.</description>
          <long-description>Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</long-description>
          <tag name="param" line="73" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="73" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="73" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="86" package="CodeIgniter\Log">
        <name>critical</name>
        <full_name>\Psr\Log\LoggerInterface::critical()</full_name>
        <docblock line="86">
          <description>Critical conditions.</description>
          <long-description>Example: Application component unavailable, unexpected exception.</long-description>
          <tag name="param" line="86" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="86" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="86" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="98" package="CodeIgniter\Log">
        <name>error</name>
        <full_name>\Psr\Log\LoggerInterface::error()</full_name>
        <docblock line="98">
          <description>Runtime errors that do not require immediate action but should typically
be logged and monitored.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="98" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="112" package="CodeIgniter\Log">
        <name>warning</name>
        <full_name>\Psr\Log\LoggerInterface::warning()</full_name>
        <docblock line="112">
          <description>Exceptional occurrences that are not errors.</description>
          <long-description>Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</long-description>
          <tag name="param" line="112" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="112" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="112" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="123" package="CodeIgniter\Log">
        <name>notice</name>
        <full_name>\Psr\Log\LoggerInterface::notice()</full_name>
        <docblock line="123">
          <description>Normal but significant events.</description>
          <long-description></long-description>
          <tag name="param" line="123" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="123" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="123" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="136" package="CodeIgniter\Log">
        <name>info</name>
        <full_name>\Psr\Log\LoggerInterface::info()</full_name>
        <docblock line="136">
          <description>Interesting events.</description>
          <long-description>Example: User logs in, SQL logs.</long-description>
          <tag name="param" line="136" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="136" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="136" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="147" package="CodeIgniter\Log">
        <name>debug</name>
        <full_name>\Psr\Log\LoggerInterface::debug()</full_name>
        <docblock line="147">
          <description>Detailed debug information.</description>
          <long-description></long-description>
          <tag name="param" line="147" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="147" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="147" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="159" package="CodeIgniter\Log">
        <name>log</name>
        <full_name>\Psr\Log\LoggerInterface::log()</full_name>
        <docblock line="159">
          <description>Logs with an arbitrary level.</description>
          <long-description></long-description>
          <tag name="param" line="159" description="" type="mixed" variable="$level">
            <type>mixed</type>
          </tag>
          <tag name="param" line="159" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="159" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="159" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/Files/UploadedFileInterface.php" generated-path="HTTP.Files.UploadedFileInterface.html" hash="1593424c06ffafccf3bd8a626683f858" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\HTTP\Files" line="48" package="CodeIgniter\HTTP">
      <name>UploadedFileInterface</name>
      <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface</full_name>
      <docblock line="48">
        <description>Value object representing a single file uploaded through an
HTTP request. Used by the IncomingRequest class to
provide files.</description>
        <long-description>Typically, implementors will extend the SplFileInfo class.</long-description>
        <tag name="package" line="48" description="CodeIgniter\HTTP"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="59" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::__construct()</full_name>
        <docblock line="59">
          <description>Accepts the file information as would be filled in from the $_FILES array.</description>
          <long-description></long-description>
          <tag name="param" line="59" description="&lt;p&gt;The temporary location of the uploaded file.&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;The client-provided filename.&lt;/p&gt;" type="string" variable="$originalName">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;The type of file as provided by PHP&lt;/p&gt;" type="string" variable="$mimeType">
            <type>string</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;The size of the file, in bytes&lt;/p&gt;" type="integer" variable="$size">
            <type>integer</type>
          </tag>
          <tag name="param" line="59" description="&lt;p&gt;The error constant of the upload (one of PHP's UPLOADERRXXX constants)&lt;/p&gt;" type="integer" variable="$error">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$originalName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$mimeType</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="92" package="CodeIgniter\HTTP">
        <name>move</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::move()</full_name>
        <docblock line="92">
          <description>Move the uploaded file to a new location.</description>
          <long-description>$targetPath may be an absolute path, or a relative path. If it is a
relative path, resolution should be the same as used by PHP's rename()
function.

The original file MUST be removed on completion.

If this method is called more than once, any subsequent calls MUST raise
an exception.

When used in an SAPI environment where $_FILES is populated, when writing
files via moveTo(), is_uploaded_file() and move_uploaded_file() SHOULD be
used to ensure permissions and upload status are verified correctly.

If you wish to move to a stream, use getStream(), as SAPI operations
cannot guarantee writing to stream destinations.</long-description>
          <tag name="see" line="92" description="" link="http://php.net/is_uploaded_file"/>
          <tag name="see" line="92" description="" link="http://php.net/move_uploaded_file"/>
          <tag name="param" line="92" description="&lt;p&gt;Path to which to move the uploaded file.&lt;/p&gt;" type="string" variable="$targetPath">
            <type>string</type>
          </tag>
          <tag name="param" line="92" description="&lt;p&gt;the name to rename the file to.&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="throws" line="92" description="if the $path specified is invalid." type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="throws" line="92" description="on any error during the move operation." type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
          <tag name="throws" line="92" description="on the second or subsequent call to the method." type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targetPath</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="103" package="CodeIgniter\HTTP">
        <name>hasMoved</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::hasMoved()</full_name>
        <docblock line="103">
          <description>Returns whether the file has been moved or not. If it has,
the move() method will not work and certain properties, like
the tempName, will no longer be available.</description>
          <long-description></long-description>
          <tag name="return" line="103" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="121" package="CodeIgniter\HTTP">
        <name>getSize</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getSize()</full_name>
        <docblock line="121">
          <description>Retrieve the file size.</description>
          <long-description>Implementations SHOULD return the value stored in the "size" key of
the file in the $_FILES array if available, as PHP calculates this based
on the actual size transmitted.</long-description>
          <tag name="param" line="121" description="&lt;p&gt;The unit to return:&lt;/p&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;b   Bytes&lt;/li&gt;&#10;&lt;li&gt;kb  Kilobytes&lt;/li&gt;&#10;&lt;li&gt;mb  Megabytes&lt;/li&gt;&#10;&lt;/ul&gt;" type="string" variable="$unit">
            <type>string</type>
          </tag>
          <tag name="return" line="121" description="The file size in bytes or null if unknown." type="integer|null">
            <type>integer</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$unit</name>
          <default>'b'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="139" package="CodeIgniter\HTTP">
        <name>getError</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getError()</full_name>
        <docblock line="139">
          <description>Retrieve the error associated with the uploaded file.</description>
          <long-description>The return value MUST be one of PHP's UPLOAD_ERR_XXX constants.

If the file was uploaded successfully, this method MUST return
UPLOAD_ERR_OK.

Implementations SHOULD return the value stored in the "error" key of
the file in the $_FILES array.</long-description>
          <tag name="see" line="139" description="" link="http://php.net/manual/en/features.file-upload.errors.php"/>
          <tag name="return" line="139" description="One of PHP's UPLOAD_ERR_XXX constants." type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="156" package="CodeIgniter\HTTP">
        <name>getName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getName()</full_name>
        <docblock line="156">
          <description>Retrieve the filename sent by the client.</description>
          <long-description>Do not trust the value returned by this method. A client could send
a malicious filename with the intention to corrupt or hack your
application.

Implementations SHOULD return the value stored in the "name" key of
the file in the $_FILES array.</long-description>
          <tag name="return" line="156" description="The filename sent by the client or null if none&#10;    was provided." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="165" package="CodeIgniter\HTTP">
        <name>getTempName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getTempName()</full_name>
        <docblock line="165">
          <description>Gets the temporary filename where the file was uploaded to.</description>
          <long-description></long-description>
          <tag name="return" line="165" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="175" package="CodeIgniter\HTTP">
        <name>getRandomName</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getRandomName()</full_name>
        <docblock line="175">
          <description>Generates a random names based on a simple hash and the time, with
the correct file extension attached.</description>
          <long-description></long-description>
          <tag name="return" line="175" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="185" package="CodeIgniter\HTTP">
        <name>getExtension</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getExtension()</full_name>
        <docblock line="185">
          <description>Attempts to determine the file extension based on the trusted
getMimeType() method. If the mime type is unknown, will return null.</description>
          <long-description></long-description>
          <tag name="return" line="185" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="196" package="CodeIgniter\HTTP">
        <name>getClientExtension</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientExtension()</full_name>
        <docblock line="196">
          <description>Returns the original file extension, based on the file name that
was uploaded. This is NOT a trusted source.</description>
          <long-description>For a trusted version, use guessExtension() instead.</long-description>
          <tag name="return" line="196" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="208" package="CodeIgniter\HTTP">
        <name>getType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getType()</full_name>
        <docblock line="208">
          <description>Retrieve the media type of the file. SHOULD not use information from
the $_FILES array, but should use other methods to more accurately
determine the type of file, like finfo, or mime_content_type().</description>
          <long-description></long-description>
          <tag name="return" line="208" description="The media type sent by the client or null if none&#10;    was provided." type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="219" package="CodeIgniter\HTTP">
        <name>getClientType</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::getClientType()</full_name>
        <docblock line="219">
          <description>Returns the mime type as provided by the client.</description>
          <long-description>This is NOT a trusted value.
For a trusted version, use getMimeType() instead.</long-description>
          <tag name="return" line="219" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="229" package="CodeIgniter\HTTP">
        <name>isValid</name>
        <full_name>\CodeIgniter\HTTP\Files\UploadedFileInterface::isValid()</full_name>
        <docblock line="229">
          <description>Returns whether the file was uploaded successfully, based on whether
it was uploaded via HTTP and has no errors.</description>
          <long-description></long-description>
          <tag name="return" line="229" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/Logger.php" generated-path="Log.Logger.html" hash="42e171c65d5f3ef0f7be1104e763edd6" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="LoggerInterface">\Psr\Log\LoggerInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Log" line="55" package="CodeIgniter\Log">
      <extends/>
      <implements>\Psr\Log\LoggerInterface</implements>
      <name>Logger</name>
      <full_name>\CodeIgniter\Log\Logger</full_name>
      <docblock line="55">
        <description>The CodeIgntier Logger</description>
        <long-description>The message MUST be a string or object implementing __toString().

The message MAY contain placeholders in the form: {foo} where foo
will be replaced by the context data in key "foo".

The context array can contain arbitrary data, the only assumption that
can be made by implementors is that if an Exception instance is given
to produce a stack trace, it MUST be in a key named "exception".</long-description>
        <tag name="package" line="55" description="CodeIgniter\Log"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="63" package="CodeIgniter\Log">
        <name>$logPath</name>
        <full_name>\CodeIgniter\Log\Logger::logPath</full_name>
        <default></default>
        <docblock line="63">
          <description>Path to save log files to.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="71" package="CodeIgniter\Log">
        <name>$logLevels</name>
        <full_name>\CodeIgniter\Log\Logger::logLevels</full_name>
        <default>array('emergency' =&gt; 1, 'alert' =&gt; 2, 'critical' =&gt; 3, 'error' =&gt; 4, 'debug' =&gt; 5, 'warning' =&gt; 6, 'notice' =&gt; 7, 'info' =&gt; 8)</default>
        <docblock line="71">
          <description>Used by the logThreshold Config setting to define
which errors to show.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="89" package="CodeIgniter\Log">
        <name>$loggableLevels</name>
        <full_name>\CodeIgniter\Log\Logger::loggableLevels</full_name>
        <default>array()</default>
        <docblock line="89">
          <description>Array of levels to be logged.</description>
          <long-description>The rest will be ignored.
Set in Config/logger.php</long-description>
          <tag name="var" line="89" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="96" package="CodeIgniter\Log">
        <name>$filePermissions</name>
        <full_name>\CodeIgniter\Log\Logger::filePermissions</full_name>
        <default>420</default>
        <docblock line="96">
          <description>File permissions</description>
          <long-description></long-description>
          <tag name="var" line="96" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="103" package="CodeIgniter\Log">
        <name>$dateFormat</name>
        <full_name>\CodeIgniter\Log\Logger::dateFormat</full_name>
        <default>'Y-m-d H:i:s'</default>
        <docblock line="103">
          <description>Format of the timestamp for log files.</description>
          <long-description></long-description>
          <tag name="var" line="103" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="110" package="CodeIgniter\Log">
        <name>$fileExt</name>
        <full_name>\CodeIgniter\Log\Logger::fileExt</full_name>
        <default></default>
        <docblock line="110">
          <description>Filename Extension</description>
          <long-description></long-description>
          <tag name="var" line="110" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="117" package="CodeIgniter\Log">
        <name>$handlers</name>
        <full_name>\CodeIgniter\Log\Logger::handlers</full_name>
        <default>array()</default>
        <docblock line="117">
          <description>Caches instances of the handlers.</description>
          <long-description></long-description>
          <tag name="var" line="117" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="127" package="CodeIgniter\Log">
        <name>$handlerConfig</name>
        <full_name>\CodeIgniter\Log\Logger::handlerConfig</full_name>
        <default>array()</default>
        <docblock line="127">
          <description>Holds the configuration for each handler.</description>
          <long-description>The key is the handler's class name. The
value is an associative array of configuration
items.</long-description>
          <tag name="var" line="127" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Log" line="134" package="CodeIgniter\Log">
        <name>$logCache</name>
        <full_name>\CodeIgniter\Log\Logger::logCache</full_name>
        <default></default>
        <docblock line="134">
          <description>Caches logging calls for debugbar.</description>
          <long-description></long-description>
          <tag name="var" line="134" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log" line="141" package="CodeIgniter\Log">
        <name>$cacheLogs</name>
        <full_name>\CodeIgniter\Log\Logger::cacheLogs</full_name>
        <default>false</default>
        <docblock line="141">
          <description>Should we cache our logged items?</description>
          <long-description></long-description>
          <tag name="var" line="141" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="152" package="CodeIgniter\Log">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Logger::__construct()</full_name>
        <docblock line="152">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="152" description="" type="\CodeIgniter\Log\type" variable="$config">
            <type>\CodeIgniter\Log\type</type>
          </tag>
          <tag name="param" line="152" description="" type="boolean" variable="$debug">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="152" description="" type="\RuntimeException">
            <type>\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Log\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$debug</name>
          <default>CI_DEBUG</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="198" package="CodeIgniter\Log">
        <name>emergency</name>
        <full_name>\CodeIgniter\Log\Logger::emergency()</full_name>
        <docblock line="198">
          <description>System is unusable.</description>
          <long-description></long-description>
          <tag name="param" line="198" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="198" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="198" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::emergency()" refers="\Psr\Log\LoggerInterface::emergency()" link="/classes/Psr.Log.LoggerInterface.html#method_emergency"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="216" package="CodeIgniter\Log">
        <name>alert</name>
        <full_name>\CodeIgniter\Log\Logger::alert()</full_name>
        <docblock line="216">
          <description>Action must be taken immediately.</description>
          <long-description>Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</long-description>
          <tag name="param" line="216" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="216" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="216" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::alert()" refers="\Psr\Log\LoggerInterface::alert()" link="/classes/Psr.Log.LoggerInterface.html#method_alert"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="233" package="CodeIgniter\Log">
        <name>critical</name>
        <full_name>\CodeIgniter\Log\Logger::critical()</full_name>
        <docblock line="233">
          <description>Critical conditions.</description>
          <long-description>Example: Application component unavailable, unexpected exception.</long-description>
          <tag name="param" line="233" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="233" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="233" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::critical()" refers="\Psr\Log\LoggerInterface::critical()" link="/classes/Psr.Log.LoggerInterface.html#method_critical"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="249" package="CodeIgniter\Log">
        <name>error</name>
        <full_name>\CodeIgniter\Log\Logger::error()</full_name>
        <docblock line="249">
          <description>Runtime errors that do not require immediate action but should typically
be logged and monitored.</description>
          <long-description></long-description>
          <tag name="param" line="249" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="249" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::error()" refers="\Psr\Log\LoggerInterface::error()" link="/classes/Psr.Log.LoggerInterface.html#method_error"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="267" package="CodeIgniter\Log">
        <name>warning</name>
        <full_name>\CodeIgniter\Log\Logger::warning()</full_name>
        <docblock line="267">
          <description>Exceptional occurrences that are not errors.</description>
          <long-description>Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</long-description>
          <tag name="param" line="267" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="267" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="267" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::warning()" refers="\Psr\Log\LoggerInterface::warning()" link="/classes/Psr.Log.LoggerInterface.html#method_warning"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="282" package="CodeIgniter\Log">
        <name>notice</name>
        <full_name>\CodeIgniter\Log\Logger::notice()</full_name>
        <docblock line="282">
          <description>Normal but significant events.</description>
          <long-description></long-description>
          <tag name="param" line="282" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="282" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="282" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::notice()" refers="\Psr\Log\LoggerInterface::notice()" link="/classes/Psr.Log.LoggerInterface.html#method_notice"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="299" package="CodeIgniter\Log">
        <name>info</name>
        <full_name>\CodeIgniter\Log\Logger::info()</full_name>
        <docblock line="299">
          <description>Interesting events.</description>
          <long-description>Example: User logs in, SQL logs.</long-description>
          <tag name="param" line="299" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="299" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="299" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::info()" refers="\Psr\Log\LoggerInterface::info()" link="/classes/Psr.Log.LoggerInterface.html#method_info"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="314" package="CodeIgniter\Log">
        <name>debug</name>
        <full_name>\CodeIgniter\Log\Logger::debug()</full_name>
        <docblock line="314">
          <description>Detailed debug information.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="314" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="314" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::debug()" refers="\Psr\Log\LoggerInterface::debug()" link="/classes/Psr.Log.LoggerInterface.html#method_debug"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="330" package="CodeIgniter\Log">
        <name>log</name>
        <full_name>\CodeIgniter\Log\Logger::log()</full_name>
        <docblock line="330">
          <description>Logs with an arbitrary level.</description>
          <long-description></long-description>
          <tag name="param" line="330" description="" type="mixed" variable="$level">
            <type>mixed</type>
          </tag>
          <tag name="param" line="330" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="330" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="330" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::log()" refers="\Psr\Log\LoggerInterface::log()" link="/classes/Psr.Log.LoggerInterface.html#method_log"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Log" line="407" package="CodeIgniter\Log">
        <name>interpolate</name>
        <full_name>\CodeIgniter\Log\Logger::interpolate()</full_name>
        <docblock line="407">
          <description>Replaces any placeholders in the message with variables
from the context, as well as a few special items like:</description>
          <long-description>{session_vars}
{post_vars}
{get_vars}
{env}
{env:foo}
{file}
{line}</long-description>
          <tag name="param" line="407" description="" type="" variable="$message"/>
          <tag name="param" line="407" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="407" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log" line="473" package="CodeIgniter\Log">
        <name>determineFile</name>
        <full_name>\CodeIgniter\Log\Logger::determineFile()</full_name>
        <docblock line="473">
          <description>Determines the current file/line that the log method was called from.</description>
          <long-description>by analyzing the backtrace.</long-description>
          <tag name="return" line="473" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Log" line="514" package="CodeIgniter\Log">
        <name>cleanFileNames</name>
        <full_name>\CodeIgniter\Log\Logger::cleanFileNames()</full_name>
        <docblock line="514">
          <description>Cleans the paths of filenames by replacing APPPATH, BASEPATH, FCPATH
with the actual var. i.e.</description>
          <long-description>/var/www/site/application/Controllers/Home.php
     becomes:
 APPPATH/Controllers/Home.php</long-description>
          <tag name="param" line="514" description="" type="" variable="$file"/>
          <tag name="return" line="514" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session/Session.php" generated-path="Session.Session.html" hash="a27615bd4694b4dacaac3dd868d13ff1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="LoggerAwareTrait">\CodeIgniter\Log\LoggerAwareTrait</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Session" line="48" package="Default">
      <extends/>
      <implements>\CodeIgniter\Session\SessionInterface</implements>
      <name>Session</name>
      <full_name>\CodeIgniter\Session\Session</full_name>
      <docblock line="48">
        <description>Implementation of CodeIgniter session container.</description>
        <long-description>Session configuration is done through session variables and cookie related
variables in application/config/App.php</long-description>
        <tag name="package" line="48" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="58" package="Default">
        <name>$userdata</name>
        <full_name>\CodeIgniter\Session\Session::userdata</full_name>
        <default></default>
        <docblock line="58">
          <description>Userdata array.</description>
          <long-description>Just a reference to $_SESSION, for BC purposes.</long-description>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="65" package="Default">
        <name>$driver</name>
        <full_name>\CodeIgniter\Session\Session::driver</full_name>
        <default></default>
        <docblock line="65">
          <description>Instance of the driver to use.</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="\CodeIgniter\Session\HandlerInterface" variable="">
            <type>\CodeIgniter\Session\HandlerInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="71" package="Default">
        <name>$sessionDriverName</name>
        <full_name>\CodeIgniter\Session\Session::sessionDriverName</full_name>
        <default></default>
        <docblock line="71">
          <description>The storage driver to use: files, database, redis, memcached</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="77" package="Default">
        <name>$sessionCookieName</name>
        <full_name>\CodeIgniter\Session\Session::sessionCookieName</full_name>
        <default>'ci_session'</default>
        <docblock line="77">
          <description>The session cookie name, must contain only [0-9a-z_-] characters.</description>
          <long-description></long-description>
          <tag name="var" line="77" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="84" package="Default">
        <name>$sessionExpiration</name>
        <full_name>\CodeIgniter\Session\Session::sessionExpiration</full_name>
        <default>7200</default>
        <docblock line="84">
          <description>The number of SECONDS you want the session to last.</description>
          <long-description>Setting it to 0 (zero) means expire when the browser is closed.</long-description>
          <tag name="var" line="84" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="100" package="Default">
        <name>$sessionSavePath</name>
        <full_name>\CodeIgniter\Session\Session::sessionSavePath</full_name>
        <default>null</default>
        <docblock line="100">
          <description>The location to save sessions to, driver dependent.</description>
          <long-description>.

For the 'files' driver, it's a path to a writable directory.
WARNING: Only absolute paths are supported!

For the 'database' driver, it's a table name.

TODO: address memcache &amp; redis needs

IMPORTANT: You are REQUIRED to set a valid save path!</long-description>
          <tag name="var" line="100" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="110" package="Default">
        <name>$sessionMatchIP</name>
        <full_name>\CodeIgniter\Session\Session::sessionMatchIP</full_name>
        <default>false</default>
        <docblock line="110">
          <description>Whether to match the user's IP address when reading the session data.</description>
          <long-description>WARNING: If you're using the database driver, don't forget to update
your session table's PRIMARY KEY when changing this setting.</long-description>
          <tag name="var" line="110" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="116" package="Default">
        <name>$sessionTimeToUpdate</name>
        <full_name>\CodeIgniter\Session\Session::sessionTimeToUpdate</full_name>
        <default>300</default>
        <docblock line="116">
          <description>How many seconds between CI regenerating the session ID.</description>
          <long-description></long-description>
          <tag name="var" line="116" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="124" package="Default">
        <name>$sessionRegenerateDestroy</name>
        <full_name>\CodeIgniter\Session\Session::sessionRegenerateDestroy</full_name>
        <default>false</default>
        <docblock line="124">
          <description>Whether to destroy session data associated with the old session ID
when auto-regenerating the session ID. When set to FALSE, the data
will be later deleted by the garbage collector.</description>
          <long-description></long-description>
          <tag name="var" line="124" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="131" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Session\Session::cookieDomain</full_name>
        <default>''</default>
        <docblock line="131">
          <description>The domain name to use for cookies.</description>
          <long-description>Set to .your-domain.com for site-wide cookies.</long-description>
          <tag name="var" line="131" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="138" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Session\Session::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="138">
          <description>Path used for storing cookies.</description>
          <long-description>Typically will be a forward slash.</long-description>
          <tag name="var" line="138" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="144" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Session\Session::cookieSecure</full_name>
        <default>false</default>
        <docblock line="144">
          <description>Cookie will only be set if a secure HTTPS connection exists.</description>
          <long-description></long-description>
          <tag name="var" line="144" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session" line="150" package="Default">
        <name>$logger</name>
        <full_name>\CodeIgniter\Session\Session::logger</full_name>
        <default></default>
        <docblock line="150">
          <description>Logger instance to record error messages and awarnings.</description>
          <long-description></long-description>
          <tag name="var" line="150" description="" type="\PSR\Log\LoggerInterface" variable="">
            <type>\PSR\Log\LoggerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="162" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Session::__construct()</full_name>
        <docblock line="162">
          <description>Constructor.</description>
          <long-description>Extract configuration settings and save them here.</long-description>
          <tag name="param" line="162" description="" type="\SessionHandlerInterface" variable="$driver">
            <type>\SessionHandlerInterface</type>
          </tag>
          <tag name="param" line="162" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$driver</name>
          <default></default>
          <type>\SessionHandlerInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="184" package="Default">
        <name>start</name>
        <full_name>\CodeIgniter\Session\Session::start()</full_name>
        <docblock line="184">
          <description>Initialize the session container and starts up the session.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="263" package="Default">
        <name>stop</name>
        <full_name>\CodeIgniter\Session\Session::stop()</full_name>
        <docblock line="263">
          <description>Does a full stop of the session:</description>
          <long-description>- destroys the session
- unsets the session id
- destroys the session cookie</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session" line="286" package="Default">
        <name>configure</name>
        <full_name>\CodeIgniter\Session\Session::configure()</full_name>
        <docblock line="286">
          <description>Configuration.</description>
          <long-description>Handle input binds and configuration defaults.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session" line="331" package="Default">
        <name>initVars</name>
        <full_name>\CodeIgniter\Session\Session::initVars()</full_name>
        <docblock line="331">
          <description>Handle temporary variables</description>
          <long-description>Clears old "flash" data, marks the new one for deletion and handles
"temp" data deletion.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="370" package="Default">
        <name>regenerate</name>
        <full_name>\CodeIgniter\Session\Session::regenerate()</full_name>
        <docblock line="370">
          <description>Regenerates the session ID.</description>
          <long-description></long-description>
          <tag name="param" line="370" description="&lt;p&gt;Should old session data be destroyed?&lt;/p&gt;" type="boolean" variable="$destroy">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::regenerate()" refers="\CodeIgniter\Session\SessionInterface::regenerate()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_regenerate"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$destroy</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="381" package="Default">
        <name>destroy</name>
        <full_name>\CodeIgniter\Session\Session::destroy()</full_name>
        <docblock line="381">
          <description>Destroys the current session.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::destroy()" refers="\CodeIgniter\Session\SessionInterface::destroy()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_destroy"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="403" package="Default">
        <name>set</name>
        <full_name>\CodeIgniter\Session\Session::set()</full_name>
        <docblock line="403">
          <description>Sets user data into the session.</description>
          <long-description>If $data is a string, then it is interpreted as a session property
key, and  $value is expected to be non-null.

If $data is an array, it is expected to be an array of key/value pairs
to be set as session properties.</long-description>
          <tag name="param" line="403" description="&lt;p&gt;Property name or associative array of properties&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="403" description="&lt;p&gt;Property value if single key provided&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::set()" refers="\CodeIgniter\Session\SessionInterface::set()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_set"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="432" package="Default">
        <name>get</name>
        <full_name>\CodeIgniter\Session\Session::get()</full_name>
        <docblock line="432">
          <description>Get user data that has been set in the session.</description>
          <long-description>If the property exists as "normal", returns it.
Otherwise, returns an array of any temp or flash data values with the
property key.

Replaces the legacy method $session-&gt;userdata();</long-description>
          <tag name="param" line="432" description="&lt;p&gt;Identifier of the session property to retrieve&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="432" description="The property value(s)" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::get()" refers="\CodeIgniter\Session\SessionInterface::get()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_get"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="468" package="Default">
        <name>has</name>
        <full_name>\CodeIgniter\Session\Session::has()</full_name>
        <docblock line="468">
          <description>Returns whether an index exists in the session array.</description>
          <long-description></long-description>
          <tag name="param" line="468" description="&lt;p&gt;Identifier of the session property we are interested in.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="468" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::has()" refers="\CodeIgniter\Session\SessionInterface::has()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_has"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="484" package="Default">
        <name>remove</name>
        <full_name>\CodeIgniter\Session\Session::remove()</full_name>
        <docblock line="484">
          <description>Remove one or more session properties.</description>
          <long-description>If $key is an array, it is interpreted as an array of string property
identifiers to remove. Otherwise, it is interpreted as the identifier
of a specific session property to remove.</long-description>
          <tag name="param" line="484" description="&lt;p&gt;Identifier of the session property or properties to remove.&lt;/p&gt;" type="" variable="$key"/>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::remove()" refers="\CodeIgniter\Session\SessionInterface::remove()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_remove"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="508" package="Default">
        <name>__set</name>
        <full_name>\CodeIgniter\Session\Session::__set()</full_name>
        <docblock line="508">
          <description>Magic method to set variables in the session by simply calling
 $session-&gt;foo = bar;</description>
          <long-description></long-description>
          <tag name="param" line="508" description="&lt;p&gt;Identifier of the session property to set.&lt;/p&gt;" type="" variable="$key"/>
          <tag name="param" line="508" description="" type="" variable="$value"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="523" package="Default">
        <name>__get</name>
        <full_name>\CodeIgniter\Session\Session::__get()</full_name>
        <docblock line="523">
          <description>Magic method to get session variables by simply calling
 $foo = $session-&gt;foo;</description>
          <long-description></long-description>
          <tag name="param" line="523" description="&lt;p&gt;Identifier of the session property to remove.&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="523" description="" type="null|string">
            <type>null</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="556" package="Default">
        <name>setFlashdata</name>
        <full_name>\CodeIgniter\Session\Session::setFlashdata()</full_name>
        <docblock line="556">
          <description>Sets data into the session that will only last for a single request.</description>
          <long-description>Perfect for use with single-use status update messages.

If $data is an array, it is interpreted as an associative array of
key/value pairs for flashdata properties.
Otherwise, it is interpreted as the identifier of a specific
flashdata property, with $value containing the property value.</long-description>
          <tag name="param" line="556" description="&lt;p&gt;Property identifier or associative array of properties&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="556" description="&lt;p&gt;Property value if $data is a scalar&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::setFlashdata()" refers="\CodeIgniter\Session\SessionInterface::setFlashdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_setFlashdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="572" package="Default">
        <name>getFlashdata</name>
        <full_name>\CodeIgniter\Session\Session::getFlashdata()</full_name>
        <docblock line="572">
          <description>Retrieve one or more items of flash data from the session.</description>
          <long-description>If the item key is null, return all flashdata.</long-description>
          <tag name="param" line="572" description="&lt;p&gt;Property identifier&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="572" description="The requested property value, or an associative array  of them" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::getFlashdata()" refers="\CodeIgniter\Session\SessionInterface::getFlashdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_getFlashdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="600" package="Default">
        <name>keepFlashdata</name>
        <full_name>\CodeIgniter\Session\Session::keepFlashdata()</full_name>
        <docblock line="600">
          <description>Keeps a single piece of flash data alive for one more request.</description>
          <long-description></long-description>
          <tag name="param" line="600" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::keepFlashdata()" refers="\CodeIgniter\Session\SessionInterface::keepFlashdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_keepFlashdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="613" package="Default">
        <name>markAsFlashdata</name>
        <full_name>\CodeIgniter\Session\Session::markAsFlashdata()</full_name>
        <docblock line="613">
          <description>Mark a session property or properties as flashdata.</description>
          <long-description></long-description>
          <tag name="param" line="613" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="613" description="if any of the properties are not already set" type="False">
            <type>False</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::markAsFlashdata()" refers="\CodeIgniter\Session\SessionInterface::markAsFlashdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_markAsFlashdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="649" package="Default">
        <name>unmarkFlashdata</name>
        <full_name>\CodeIgniter\Session\Session::unmarkFlashdata()</full_name>
        <docblock line="649">
          <description>Unmark data in the session as flashdata.</description>
          <long-description></long-description>
          <tag name="param" line="649" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::unmarkFlashdata()" refers="\CodeIgniter\Session\SessionInterface::unmarkFlashdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_unmarkFlashdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="679" package="Default">
        <name>getFlashKeys</name>
        <full_name>\CodeIgniter\Session\Session::getFlashKeys()</full_name>
        <docblock line="679">
          <description>Retrieve all of the keys for session data marked as flashdata.</description>
          <long-description></long-description>
          <tag name="return" line="679" description="The property names of all flashdata" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::getFlashKeys()" refers="\CodeIgniter\Session\SessionInterface::getFlashKeys()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_getFlashKeys"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="708" package="Default">
        <name>setTempdata</name>
        <full_name>\CodeIgniter\Session\Session::setTempdata()</full_name>
        <docblock line="708">
          <description>Sets new data into the session, and marks it as temporary data
with a set lifespan.</description>
          <long-description></long-description>
          <tag name="param" line="708" description="&lt;p&gt;Session data key or associative array of items&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="708" description="&lt;p&gt;Value to store&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="param" line="708" description="&lt;p&gt;Time-to-live in seconds&lt;/p&gt;" type="integer" variable="$ttl">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::setTempdata()" refers="\CodeIgniter\Session\SessionInterface::setTempdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_setTempdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>300</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="723" package="Default">
        <name>getTempdata</name>
        <full_name>\CodeIgniter\Session\Session::getTempdata()</full_name>
        <docblock line="723">
          <description>Returns either a single piece of tempdata, or all temp data currently
in the session.</description>
          <long-description></long-description>
          <tag name="param" line="723" description="&lt;p&gt;Session data key&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="723" description="Session data value or null if not found." type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::getTempdata()" refers="\CodeIgniter\Session\SessionInterface::getTempdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_getTempdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="751" package="Default">
        <name>removeTempdata</name>
        <full_name>\CodeIgniter\Session\Session::removeTempdata()</full_name>
        <docblock line="751">
          <description>Removes a single piece of temporary data from the session.</description>
          <long-description></long-description>
          <tag name="param" line="751" description="&lt;p&gt;Session data key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::removeTempdata()" refers="\CodeIgniter\Session\SessionInterface::removeTempdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_removeTempdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="767" package="Default">
        <name>markAsTempdata</name>
        <full_name>\CodeIgniter\Session\Session::markAsTempdata()</full_name>
        <docblock line="767">
          <description>Mark one of more pieces of data as being temporary, meaning that
it has a set lifespan within the session.</description>
          <long-description></long-description>
          <tag name="param" line="767" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
          <tag name="param" line="767" description="&lt;p&gt;Time to live, in seconds&lt;/p&gt;" type="integer" variable="$ttl">
            <type>integer</type>
          </tag>
          <tag name="return" line="767" description="False if any of the properties were not set" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::markAsTempdata()" refers="\CodeIgniter\Session\SessionInterface::markAsTempdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_markAsTempdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>300</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="819" package="Default">
        <name>unmarkTempdata</name>
        <full_name>\CodeIgniter\Session\Session::unmarkTempdata()</full_name>
        <docblock line="819">
          <description>Unmarks temporary data in the session, effectively removing its
lifespan and allowing it to live as long as the session does.</description>
          <long-description></long-description>
          <tag name="param" line="819" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::unmarkTempdata()" refers="\CodeIgniter\Session\SessionInterface::unmarkTempdata()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_unmarkTempdata"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="849" package="Default">
        <name>getTempKeys</name>
        <full_name>\CodeIgniter\Session\Session::getTempKeys()</full_name>
        <docblock line="849">
          <description>Retrieve the keys of all session data that have been marked as temporary data.</description>
          <long-description></long-description>
          <tag name="return" line="849" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\SessionInterface::getTempKeys()" refers="\CodeIgniter\Session\SessionInterface::getTempKeys()" link="/classes/CodeIgniter.Session.SessionInterface.html#method_getTempKeys"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\LoggerAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="CodeIgniter.php" generated-path="CodeIgniter.html" hash="ad5620640ff12e0b8f3d8324455431b1" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RouteCollectionInterface">\CodeIgniter\Router\RouteCollectionInterface</namespace-alias>
    <namespace-alias name="App">\Config\App</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <namespace-alias name="Hooks">\CodeIgniter\Hooks\Hooks</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter" line="50" package="Default">
      <extends/>
      <name>CodeIgniter</name>
      <full_name>\CodeIgniter\CodeIgniter</full_name>
      <docblock line="50">
        <description>System Initialization Class</description>
        <long-description>Loads the base classes and executes the request.</long-description>
        <tag name="package" line="50" description="Default"/>
      </docblock>
      <constant namespace="CodeIgniter" line="55" package="Default">
        <name>CI_VERSION</name>
        <full_name>\CodeIgniter\CodeIgniter::CI_VERSION</full_name>
        <value>'4.0-dev'</value>
        <docblock line="55">
          <description>The current version of CodeIgniter Framework</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="63" package="Default">
        <name>$startMemory</name>
        <full_name>\CodeIgniter\CodeIgniter::startMemory</full_name>
        <default></default>
        <docblock line="63">
          <description>UNIX timestamp for the start of script execution
in seconds with microseconds.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="70" package="Default">
        <name>$startTime</name>
        <full_name>\CodeIgniter\CodeIgniter::startTime</full_name>
        <default></default>
        <docblock line="70">
          <description>App start time</description>
          <long-description></long-description>
          <tag name="var" line="70" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="77" package="Default">
        <name>$config</name>
        <full_name>\CodeIgniter\CodeIgniter::config</full_name>
        <default></default>
        <docblock line="77">
          <description>The application configuration object.</description>
          <long-description></long-description>
          <tag name="var" line="77" description="" type="\Config\App" variable="">
            <type>\Config\App</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="84" package="Default">
        <name>$request</name>
        <full_name>\CodeIgniter\CodeIgniter::request</full_name>
        <default></default>
        <docblock line="84">
          <description>Current request.</description>
          <long-description></long-description>
          <tag name="var" line="84" description="" type="\CodeIgniter\HTTP\Request" variable="">
            <type>\CodeIgniter\HTTP\Request</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="91" package="Default">
        <name>$response</name>
        <full_name>\CodeIgniter\CodeIgniter::response</full_name>
        <default></default>
        <docblock line="91">
          <description>Current response.</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="\CodeIgniter\HTTP\Response" variable="">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="98" package="Default">
        <name>$router</name>
        <full_name>\CodeIgniter\CodeIgniter::router</full_name>
        <default></default>
        <docblock line="98">
          <description>Router to use.</description>
          <long-description></long-description>
          <tag name="var" line="98" description="" type="\CodeIgniter\Router\Router" variable="">
            <type>\CodeIgniter\Router\Router</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="104" package="Default">
        <name>$controller</name>
        <full_name>\CodeIgniter\CodeIgniter::controller</full_name>
        <default></default>
        <docblock line="104">
          <description>Controller to use.</description>
          <long-description></long-description>
          <tag name="var" line="104" description="" type="string|\Closure" variable="">
            <type>string</type>
            <type>\Closure</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="111" package="Default">
        <name>$method</name>
        <full_name>\CodeIgniter\CodeIgniter::method</full_name>
        <default></default>
        <docblock line="111">
          <description>Controller method to invoke.</description>
          <long-description></long-description>
          <tag name="var" line="111" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="117" package="Default">
        <name>$output</name>
        <full_name>\CodeIgniter\CodeIgniter::output</full_name>
        <default></default>
        <docblock line="117">
          <description>Output handler to use.</description>
          <long-description></long-description>
          <tag name="var" line="117" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="128" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\CodeIgniter::__construct()</full_name>
        <docblock line="128">
          <description>CodeIgniter constructor.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="" type="integer" variable="$startMemory">
            <type>integer</type>
          </tag>
          <tag name="param" line="128" description="" type="float" variable="$startTime">
            <type>float</type>
          </tag>
          <tag name="param" line="128" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$startMemory</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startTime</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="144" package="Default">
        <name>run</name>
        <full_name>\CodeIgniter\CodeIgniter::run()</full_name>
        <docblock line="144">
          <description>The class entry point. This is where the magic happens and all
of the framework pieces are pulled together and shown how to
make beautiful music together. Or something like that. :)</description>
          <long-description></long-description>
          <tag name="param" line="144" description="" type="\CodeIgniter\Router\RouteCollectionInterface" variable="$routes">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$routes</name>
          <default>null</default>
          <type>\CodeIgniter\Router\RouteCollectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="223" package="Default">
        <name>startBenchmark</name>
        <full_name>\CodeIgniter\CodeIgniter::startBenchmark()</full_name>
        <docblock line="223">
          <description>Start the Benchmark</description>
          <long-description>The timer is used to display total script execution both in the
debug toolbar, and potentially on the displayed page.</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="239" package="Default">
        <name>getRequestObject</name>
        <full_name>\CodeIgniter\CodeIgniter::getRequestObject()</full_name>
        <docblock line="239">
          <description>Get our Request object, (either IncomingRequest or CLIRequest)
and set the server protocol based on the information provided
by the server.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="258" package="Default">
        <name>getResponseObject</name>
        <full_name>\CodeIgniter\CodeIgniter::getResponseObject()</full_name>
        <docblock line="258">
          <description>Get our Response object, and set some default values, including
the HTTP protocol version and a default successful response.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="283" package="Default">
        <name>forceSecureAccess</name>
        <full_name>\CodeIgniter\CodeIgniter::forceSecureAccess()</full_name>
        <docblock line="283">
          <description>Force Secure Site Access? If the config value 'forceGlobalSecureRequests'
is true, will enforce that all requests to this site are made through
HTTPS. Will redirect the user to the current page with HTTPS, as well
as set the HTTP Strict Transport Security header for those browsers
that support it.</description>
          <long-description></long-description>
          <tag name="param" line="283" description="&lt;p&gt;How long the Strict Transport Security&#10;                      should be enforced for this URL.&lt;/p&gt;" type="integer" variable="$duration">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$duration</name>
          <default>31536000</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="299" package="Default">
        <name>CsrfProtection</name>
        <full_name>\CodeIgniter\CodeIgniter::CsrfProtection()</full_name>
        <docblock line="299">
          <description>CSRF Protection. Checks if it's enabled globally, and
enforces the presence of CSRF tokens.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="321" package="Default">
        <name>tryToRouteIt</name>
        <full_name>\CodeIgniter\CodeIgniter::tryToRouteIt()</full_name>
        <docblock line="321">
          <description>Try to Route It - As it sounds like, works with the router to
match a route against the current URI. If the route is a
"redirect route", will also handle the redirect.</description>
          <long-description></long-description>
          <tag name="param" line="321" description="&lt;p&gt;An collection interface to use in place&#10;                                         of the config file.&lt;/p&gt;" type="\CodeIgniter\Router\RouteCollectionInterface" variable="$routes">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$routes</name>
          <default>null</default>
          <type>\CodeIgniter\Router\RouteCollectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="351" package="Default">
        <name>startController</name>
        <full_name>\CodeIgniter\CodeIgniter::startController()</full_name>
        <docblock line="351">
          <description>Now that everything has been setup, this method attempts to run the
controller method and make the script go. If it's not able to, will
show the appropriate Page Not Found error.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="392" package="Default">
        <name>createController</name>
        <full_name>\CodeIgniter\CodeIgniter::createController()</full_name>
        <docblock line="392">
          <description>Instantiates the controller class.</description>
          <long-description></long-description>
          <tag name="return" line="392" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="408" package="Default">
        <name>runController</name>
        <full_name>\CodeIgniter\CodeIgniter::runController()</full_name>
        <docblock line="408">
          <description>Runs the controller, allowing for _remap methods to function.</description>
          <long-description></long-description>
          <tag name="param" line="408" description="" type="mixed" variable="$class">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="430" package="Default">
        <name>display404errors</name>
        <full_name>\CodeIgniter\CodeIgniter::display404errors()</full_name>
        <docblock line="430">
          <description>Displays a 404 Page Not Found error. If set, will try to
call the 404Override controller/method that was set in routing config.</description>
          <long-description></long-description>
          <tag name="param" line="430" description="" type="\CodeIgniter\PageNotFoundException" variable="$e">
            <type>\CodeIgniter\PageNotFoundException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$e</name>
          <default></default>
          <type>\CodeIgniter\PageNotFoundException</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="505" package="Default">
        <name>gatherOutput</name>
        <full_name>\CodeIgniter\CodeIgniter::gatherOutput()</full_name>
        <docblock line="505">
          <description>Gathers the script output from the buffer, replaces some execution
time tag in the output and displays the debug toolbar, if required.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="532" package="Default">
        <name>sendResponse</name>
        <full_name>\CodeIgniter\CodeIgniter::sendResponse()</full_name>
        <docblock line="532">
          <description>Sends the output of this request back to the client.</description>
          <long-description>This is what they've been waiting for!</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="550" package="Default">
        <name>callExit</name>
        <full_name>\CodeIgniter\CodeIgniter::callExit()</full_name>
        <docblock line="550">
          <description>Exits the application, setting the exit code for CLI-based applications
that might be watching.</description>
          <long-description>Made into a separate method so that it can be mocked during testing
without actually stopping script execution.</long-description>
          <tag name="param" line="550" description="" type="" variable="$code"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/MySQLi/Forge.php" generated-path="Database.MySQLi.Forge.html" hash="d5f4ff42b41ea93976c243dc2f1cdbba" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\MySQLi" line="42" package="Default">
      <extends>\CodeIgniter\Database\Forge</extends>
      <name>Forge</name>
      <full_name>\CodeIgniter\Database\MySQLi\Forge</full_name>
      <docblock line="42">
        <description>Forge for MySQLi</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\Forge" refers="\CodeIgniter\Database\Forge" link="/classes/CodeIgniter.Database.Forge.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="49" package="Default">
        <name>$createDatabaseStr</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::createDatabaseStr</full_name>
        <default>'CREATE DATABASE %s CHARACTER SET %s COLLATE %s'</default>
        <docblock line="49">
          <description>CREATE DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::createDatabaseStr" refers="\CodeIgniter\Database\Forge::createDatabaseStr" link="/classes/CodeIgniter.Database.Forge.html#property_createDatabaseStr"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="59" package="Default">
        <name>$createTableKeys</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::createTableKeys</full_name>
        <default>true</default>
        <docblock line="59">
          <description>CREATE TABLE keys flag</description>
          <long-description>Whether table keys are created from within the
CREATE TABLE statement.</long-description>
          <tag name="var" line="59" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::createTableKeys" refers="\CodeIgniter\Database\Forge::createTableKeys" link="/classes/CodeIgniter.Database.Forge.html#property_createTableKeys"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="66" package="Default">
        <name>$_unsigned</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_unsigned</full_name>
        <default>array('TINYINT', 'SMALLINT', 'MEDIUMINT', 'INT', 'INTEGER', 'BIGINT', 'REAL', 'DOUBLE', 'DOUBLE PRECISION', 'FLOAT', 'DECIMAL', 'NUMERIC')</default>
        <docblock line="66">
          <description>UNSIGNED support</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="86" package="Default">
        <name>$_null</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_null</full_name>
        <default>'NULL'</default>
        <docblock line="86">
          <description>NULL value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="51" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Forge::db</full_name>
        <default></default>
        <docblock line="51">
          <description>The active database connection.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="58" package="Default">
        <name>$fields</name>
        <full_name>\CodeIgniter\Database\Forge::fields</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>List of fields.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="64" package="Default">
        <name>$keys</name>
        <full_name>\CodeIgniter\Database\Forge::keys</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>List of keys.</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="71" package="Default">
        <name>$primaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::primaryKeys</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>List of primary keys.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="78" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\Forge::charset</full_name>
        <default>''</default>
        <docblock line="78">
          <description>Character set used.</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="87" package="Default">
        <name>$createDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabaseStr</full_name>
        <default>'CREATE DATABASE %s'</default>
        <docblock line="87">
          <description>CREATE DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="94" package="Default">
        <name>$dropDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabaseStr</full_name>
        <default>'DROP DATABASE %s'</default>
        <docblock line="94">
          <description>DROP DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="101" package="Default">
        <name>$createTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableStr</full_name>
        <default>"%s %s (%s\n)"</default>
        <docblock line="101">
          <description>CREATE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="108" package="Default">
        <name>$createTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableIfStr</full_name>
        <default>'CREATE TABLE IF NOT EXISTS'</default>
        <docblock line="108">
          <description>CREATE TABLE IF statement</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="118" package="Default">
        <name>$createTableKeys</name>
        <full_name>\CodeIgniter\Database\Forge::createTableKeys</full_name>
        <default>false</default>
        <docblock line="118">
          <description>CREATE TABLE keys flag</description>
          <long-description>Whether table keys are created from within the
CREATE TABLE statement.</long-description>
          <tag name="var" line="118" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="125" package="Default">
        <name>$dropTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropTableIfStr</full_name>
        <default>'DROP TABLE IF EXISTS'</default>
        <docblock line="125">
          <description>DROP TABLE IF EXISTS statement</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="132" package="Default">
        <name>$renameTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::renameTableStr</full_name>
        <default>'ALTER TABLE %s RENAME TO %s;'</default>
        <docblock line="132">
          <description>RENAME TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="132" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="139" package="Default">
        <name>$unsigned</name>
        <full_name>\CodeIgniter\Database\Forge::unsigned</full_name>
        <default>true</default>
        <docblock line="139">
          <description>UNSIGNED support</description>
          <long-description></long-description>
          <tag name="var" line="139" description="" type="boolean|array" variable="">
            <type>boolean</type>
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="146" package="Default">
        <name>$null</name>
        <full_name>\CodeIgniter\Database\Forge::null</full_name>
        <default>''</default>
        <docblock line="146">
          <description>NULL value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="146" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="153" package="Default">
        <name>$default</name>
        <full_name>\CodeIgniter\Database\Forge::default</full_name>
        <default>' DEFAULT '</default>
        <docblock line="153">
          <description>DEFAULT value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="153" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="96" package="Default">
        <name>_createTableAttributes</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_createTableAttributes()</full_name>
        <docblock line="96">
          <description>CREATE TABLE attributes</description>
          <long-description></long-description>
          <tag name="param" line="96" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="96" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_createTableAttributes()" refers="\CodeIgniter\Database\Forge::_createTableAttributes()" link="/classes/CodeIgniter.Database.Forge.html#method__createTableAttributes"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="131" package="Default">
        <name>_alterTable</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_alterTable()</full_name>
        <docblock line="131">
          <description>ALTER TABLE</description>
          <long-description></long-description>
          <tag name="param" line="131" description="&lt;p&gt;ALTER type&lt;/p&gt;" type="string" variable="$alter_type">
            <type>string</type>
          </tag>
          <tag name="param" line="131" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="131" description="&lt;p&gt;Column definition&lt;/p&gt;" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="return" line="131" description="" type="string|array&lt;mixed,string&gt;">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_alterTable()" refers="\CodeIgniter\Database\Forge::_alterTable()" link="/classes/CodeIgniter.Database.Forge.html#method__alterTable"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alter_type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="173" package="Default">
        <name>_processColumn</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_processColumn()</full_name>
        <docblock line="173">
          <description>Process column</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_processColumn()" refers="\CodeIgniter\Database\Forge::_processColumn()" link="/classes/CodeIgniter.Database.Forge.html#method__processColumn"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="203" package="Default">
        <name>_processIndexes</name>
        <full_name>\CodeIgniter\Database\MySQLi\Forge::_processIndexes()</full_name>
        <docblock line="203">
          <description>Process indexes</description>
          <long-description></long-description>
          <tag name="param" line="203" description="&lt;p&gt;(ignored)&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="203" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_processIndexes()" refers="\CodeIgniter\Database\Forge::_processIndexes()" link="/classes/CodeIgniter.Database.Forge.html#method__processIndexes"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="162" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Forge::__construct()</full_name>
        <docblock line="162">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="174" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\Forge::getConnection()</full_name>
        <docblock line="174">
          <description>Provides access to the forge's current database connection.</description>
          <long-description></long-description>
          <tag name="return" line="174" description="" type="\CodeIgniter\Database\ConnectionInterface">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="189" package="Default">
        <name>createDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabase()</full_name>
        <docblock line="189">
          <description>Create database</description>
          <long-description></long-description>
          <tag name="param" line="189" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="189" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="229" package="Default">
        <name>dropDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabase()</full_name>
        <docblock line="229">
          <description>Drop database</description>
          <long-description></long-description>
          <tag name="param" line="229" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="229" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="272" package="Default">
        <name>addKey</name>
        <full_name>\CodeIgniter\Database\Forge::addKey()</full_name>
        <docblock line="272">
          <description>Add Key</description>
          <long-description></long-description>
          <tag name="param" line="272" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="272" description="" type="boolean" variable="$primary">
            <type>boolean</type>
          </tag>
          <tag name="return" line="272" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$primary</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="305" package="Default">
        <name>addField</name>
        <full_name>\CodeIgniter\Database\Forge::addField()</full_name>
        <docblock line="305">
          <description>Add Field</description>
          <long-description></long-description>
          <tag name="param" line="305" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="305" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="350" package="Default">
        <name>createTable</name>
        <full_name>\CodeIgniter\Database\Forge::createTable()</full_name>
        <docblock line="350">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="350" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Whether to add IF NOT EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="350" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="412" package="Default">
        <name>_createTable</name>
        <full_name>\CodeIgniter\Database\Forge::_createTable()</full_name>
        <docblock line="412">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Whether to add 'IF NOT EXISTS' condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="412" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="467" package="Default">
        <name>_createTableAttributes</name>
        <full_name>\CodeIgniter\Database\Forge::_createTableAttributes()</full_name>
        <docblock line="467">
          <description>CREATE TABLE attributes</description>
          <long-description></long-description>
          <tag name="param" line="467" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="467" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="492" package="Default">
        <name>dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::dropTable()</full_name>
        <docblock line="492">
          <description>Drop Table</description>
          <long-description></long-description>
          <tag name="param" line="492" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="492" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="492" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="537" package="Default">
        <name>_dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::_dropTable()</full_name>
        <docblock line="537">
          <description>Drop Table</description>
          <long-description>Generates a platform-specific DROP TABLE string</long-description>
          <tag name="param" line="537" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="537" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="537" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="569" package="Default">
        <name>renameTable</name>
        <full_name>\CodeIgniter\Database\Forge::renameTable()</full_name>
        <docblock line="569">
          <description>Rename Table</description>
          <long-description></long-description>
          <tag name="param" line="569" description="&lt;p&gt;Old table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="569" description="&lt;p&gt;New table name&lt;/p&gt;" type="string" variable="$new_table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="569" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$new_table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="614" package="Default">
        <name>addColumn</name>
        <full_name>\CodeIgniter\Database\Forge::addColumn()</full_name>
        <docblock line="614">
          <description>Column Add</description>
          <long-description></long-description>
          <tag name="param" line="614" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column definition&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column for AFTER clause (deprecated)&lt;/p&gt;" type="string" variable="$_after">
            <type>string</type>
          </tag>
          <tag name="return" line="614" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$_after</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="657" package="Default">
        <name>dropColumn</name>
        <full_name>\CodeIgniter\Database\Forge::dropColumn()</full_name>
        <docblock line="657">
          <description>Column Drop</description>
          <long-description></long-description>
          <tag name="param" line="657" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="657" description="&lt;p&gt;Column name&lt;/p&gt;" type="string" variable="$column_name">
            <type>string</type>
          </tag>
          <tag name="return" line="657" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="683" package="Default">
        <name>modifyColumn</name>
        <full_name>\CodeIgniter\Database\Forge::modifyColumn()</full_name>
        <docblock line="683">
          <description>Column Modify</description>
          <long-description></long-description>
          <tag name="param" line="683" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="683" description="&lt;p&gt;Column definition&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="return" line="683" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="732" package="Default">
        <name>_alterTable</name>
        <full_name>\CodeIgniter\Database\Forge::_alterTable()</full_name>
        <docblock line="732">
          <description>ALTER TABLE</description>
          <long-description></long-description>
          <tag name="param" line="732" description="&lt;p&gt;ALTER type&lt;/p&gt;" type="string" variable="$alter_type">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Column definition&lt;/p&gt;" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="return" line="732" description="" type="string|array&lt;mixed,string&gt;">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alter_type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="765" package="Default">
        <name>_processFields</name>
        <full_name>\CodeIgniter\Database\Forge::_processFields()</full_name>
        <docblock line="765">
          <description>Process fields</description>
          <long-description></long-description>
          <tag name="param" line="765" description="" type="boolean" variable="$create_table">
            <type>boolean</type>
          </tag>
          <tag name="return" line="765" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$create_table</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="873" package="Default">
        <name>_processColumn</name>
        <full_name>\CodeIgniter\Database\Forge::_processColumn()</full_name>
        <docblock line="873">
          <description>Process column</description>
          <long-description></long-description>
          <tag name="param" line="873" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="873" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="895" package="Default">
        <name>_attributeType</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeType()</full_name>
        <docblock line="895">
          <description>Field attribute TYPE</description>
          <long-description>Performs a data type mapping between different databases.</long-description>
          <tag name="param" line="895" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="895" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="919" package="Default">
        <name>_attributeUnsigned</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnsigned()</full_name>
        <docblock line="919">
          <description>Field attribute UNSIGNED</description>
          <long-description>Depending on the unsigned property value:

   - TRUE will always set $field['unsigned'] to 'UNSIGNED'
   - FALSE will always set $field['unsigned'] to ''
   - array(TYPE) will set $field['unsigned'] to 'UNSIGNED',
       if $attributes['TYPE'] is found in the array
   - array(TYPE =&gt; UTYPE) will change $field['type'],
       from TYPE to UTYPE in case of a match</long-description>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="919" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="963" package="Default">
        <name>_attributeDefault</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeDefault()</full_name>
        <docblock line="963">
          <description>Field attribute DEFAULT</description>
          <long-description></long-description>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="963" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="997" package="Default">
        <name>_attributeUnique</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnique()</full_name>
        <docblock line="997">
          <description>Field attribute UNIQUE</description>
          <long-description></long-description>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="997" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1015" package="Default">
        <name>_attributeAutoIncrement</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeAutoIncrement()</full_name>
        <docblock line="1015">
          <description>Field attribute AUTO_INCREMENT</description>
          <long-description></long-description>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="1015" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1034" package="Default">
        <name>_processPrimaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::_processPrimaryKeys()</full_name>
        <docblock line="1034">
          <description>Process primary keys</description>
          <long-description></long-description>
          <tag name="param" line="1034" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1034" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1064" package="Default">
        <name>_processIndexes</name>
        <full_name>\CodeIgniter\Database\Forge::_processIndexes()</full_name>
        <docblock line="1064">
          <description>Process indexes</description>
          <long-description></long-description>
          <tag name="param" line="1064" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1064" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1107" package="Default">
        <name>_reset</name>
        <full_name>\CodeIgniter\Database\Forge::_reset()</full_name>
        <docblock line="1107">
          <description>Reset</description>
          <long-description>Resets table creation vars</long-description>
          <tag name="return" line="1107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Config/Routes.php" generated-path="Config.Routes.html" hash="1da9e74e3a512120595d2361cc5be6de" package="CodeIgniter">
    <docblock line="0">
      <description>CodeIgniter</description>
      <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
      <tag name="package" line="0" description="CodeIgniter"/>
      <tag name="author" line="0" description="CodeIgniter Dev Team"/>
      <tag name="copyright" line="0" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
      <tag name="license" line="0" description="MIT License" link="http://opensource.org/licenses/MIT"/>
      <tag name="link" line="0" description="http://codeigniter.com" link="http://codeigniter.com"/>
      <tag name="since" line="0" description="Version 3.0.0"/>
      <tag name="filesource" line="0" description=""/>
    </docblock>
    <source>eJytVVFv4zYMfm5+BVEUaFK4ce827KEbtnMTpxHOsQPbaVegL46txNrZliHJ7fLvR8pO2t7DsA0rCsSiyI/8KPHTL7+1ZTsauVdXI7iCmSw42zfCcIVLsngNyJY3oGWncg5Z21Yiz4yQDRT8hVeyrXljYKeymr9K9Q12UsF6uR7C01JoyGVjyAk/Fa94pnkBXVNwBabksGIpBCLnjeYwxsVkCJ3J9qDEvjQwzifw+ebTj3BNPz85cKeEEbpEl6qrtyID1mgjTGc4yB2kPC8bWcn9YUBac1ULralmLKHkim8PsFcZVlU4WDq3YXmZqT13wEjImgO0XGkMkFuTiUY0e8iQR0uQ5GyIl5Y785op7EpTQKa1zEWGkFDIvKOu9G3aiYprGBPV82SIOJ/YPAXPKgIUje3EcRdehSllZ7Bb2iiRE4yDTnnVFVTJcbsStRiSULhtliY8hO40UqGCHahlIXb0yy2/tttW2DwHCkHoW+yaA5qM9gwcYuPiIWpe2eIQRCABS/qtRutGiVpqrhnapcnyWsr6Ix9hq9p1qsHE3IYVEttn8/7Bc0MWitjJqpKvxBHvTCGImr49XSVs9Fa+cEurvxmNNCLv+29PpH076WFLl1lVwZYP7cPkoiE0sh6ZKSpDG7wPIquglcrm/Z7x9FjH0ockWqSPXuwDS2AdRw9s7s/h3Etwfe7AI0uX0SYF9Ii9MH2CaAFe+ARfWTh3wP99HftJAlFMaGy1DpiPZhbOgs2chfdwh6FhhEPBcBoQN41szgGN+Qnhrfx4tsSld8cClj45hLVgaUjIiygGD9ZenLLZJvBiWG/idZT4WMQckUMWLmJM5K/8MJ1iYrSB/4ALSJZeEFA2O/obpBFToTCL1k8xu1+msIyCuY/GOx/r8+4Cv8+G7GaBx1YOzL2Vd+/bqAiBLEny7MuEx6VPVsrq4f8sZVFIfGZRmMa4dJBunJ6iH1niO+DFLKHOLOJoZZlSdzEosjgYGvo9EHX+4wGhC603iX/ChLnvBQiHpxV+f6DHQ/7SZvm3bM/PPioifMk6nD313gxz/oKak9V2/3Q3z/4H/YJxaUx767rbXJhpnrkTm2OY1LNhk/S5l+epVHt32NUu3p6zd+I6hDbfjnE5chA9h2ku+/I1jgk/e8Bhphn6YXozvbF2K2I2By7d0QiGByM5aMNr2MQMYpQknFyynpSfwqz8o4ZqK6uq96KB132skbLSpAR5iSKK3nWN83yNlfJey3Dbviq1QM22o+kAN/nxqJh9WHIcaBxuFPaZbHZi/0zlcN3LVIm4NMoXyhptqRybX3Grrb0eKJ4VB6hkRiLRtTawt1HyTg+qOu0b4LqwOtUzGoCvf80rMb58K9Qd32q+p7dg8u7z0oHL53c3CL8tZ/38BjmYbm8vPrkXny8nP/+THAj87u/f5Pi7BB9R/1MCga/9n5TjL/ACrDo=</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Database.php" generated-path="Debug.Toolbar.Collectors.Database.html" hash="806a5fa7c1b63d603b496863162f7b27" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="44" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Database</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database</full_name>
      <docblock line="44">
        <description>Collector for the Database tab of the Debug Toolbar.</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="51" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::hasTimeline</full_name>
        <default>true</default>
        <docblock line="51">
          <description>Whether this collector has timeline data.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::hasTabContent</full_name>
        <default>true</default>
        <docblock line="58">
          <description>Whether this collector should display its own tab.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="65" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::hasVarData</full_name>
        <default>false</default>
        <docblock line="65">
          <description>Whether this collector has data for the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasVarData"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="72" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::title</full_name>
        <default>'Database'</default>
        <docblock line="72">
          <description>The name used to reference this collector in the toolbar.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="72" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="79" package="Default">
        <name>$connections</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::connections</full_name>
        <default></default>
        <docblock line="79">
          <description>Array of database connections.</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="87" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::__construct()</full_name>
        <docblock line="87">
          <description>Constructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="99" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::formatTimelineData()</full_name>
        <docblock line="99">
          <description>Returns timeline data formatted for the toolbar.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="99" description="The formatted data or an empty array." type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_formatTimelineData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="136" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::display()</full_name>
        <docblock line="136">
          <description>Returns the HTML to fill the Database tab in the toolbar.</description>
          <long-description></long-description>
          <tag name="return" line="136" description="The data formatted for the toolbar." type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_display"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="198" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Database::getTitleDetails()</full_name>
        <docblock line="198">
          <description>Information to be displayed next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="198" description="The number of queries (in parentheses) or an empty string." type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_getTitleDetails"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="View/RenderableInterface.php" generated-path="View.RenderableInterface.html" hash="4d06357d82512635e366fd8c62aa6adf" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\View" line="46" package="CodeIgniter\View">
      <name>RenderableInterface</name>
      <full_name>\CodeIgniter\View\RenderableInterface</full_name>
      <docblock line="46">
        <description>Interface RenderableInterface</description>
        <long-description>The interface used for displaying Views and/or theme files.</long-description>
        <tag name="package" line="46" description="CodeIgniter\View"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="61" package="CodeIgniter\View">
        <name>render</name>
        <full_name>\CodeIgniter\View\RenderableInterface::render()</full_name>
        <docblock line="61">
          <description>Builds the output based upon a file name and any
data that has already been set.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="61" description="&lt;p&gt;Reserved for 3rd-party uses since&#10;it might be needed to pass additional info&#10;to other template engines.&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="61" description="&lt;p&gt;If true, will save data for use with any other calls,&#10;                        if false, will clean the data after displaying the view.&lt;/p&gt;" type="boolean" variable="$saveData">
            <type>boolean</type>
          </tag>
          <tag name="return" line="61" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saveData</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="74" package="CodeIgniter\View">
        <name>setData</name>
        <full_name>\CodeIgniter\View\RenderableInterface::setData()</full_name>
        <docblock line="74">
          <description>Sets several pieces of view data at once.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;The context to escape it for: html, css, js, url&#10;If 'raw', no escaping will happen&lt;/p&gt;" type="string" variable="$context">
            <type>string</type>
          </tag>
          <tag name="return" line="74" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="88" package="CodeIgniter\View">
        <name>setVar</name>
        <full_name>\CodeIgniter\View\RenderableInterface::setVar()</full_name>
        <docblock line="88">
          <description>Sets a single piece of view data.</description>
          <long-description></long-description>
          <tag name="param" line="88" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="88" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="88" description="&lt;p&gt;The context to escape it for: html, css, js, url&#10;If 'raw' no escaping will happen&lt;/p&gt;" type="string" variable="$context">
            <type>string</type>
          </tag>
          <tag name="return" line="88" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="97" package="CodeIgniter\View">
        <name>resetData</name>
        <full_name>\CodeIgniter\View\RenderableInterface::resetData()</full_name>
        <docblock line="97">
          <description>Removes all of the view data from the system.</description>
          <long-description></long-description>
          <tag name="return" line="97" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9Vttu20YQfZa/YmAEiB0wUtoUfXAaNLRER0RlUaBou0bbhxW5krahuMTu0o5Q9N97ZknZip0YfUgi2JD2MpczlzP7y6/1uqZKbKStRS5pqAsZryrlpPnzUsnbNwcHgxcvDujF/gmWvBNWpGtZkdWNgaio61LlwildUSFvZKnrjawcLQ2032rzgZba0Gw868SztbKU68rxJfw0spTCyoKaqpCG3FrSeZzRROWyspKOsDjuRIe63hq1Wjs6yo/px1c//EQv+evngE6NcsqucaVsNgslKK6sU65xkvSSMpmvK13q1bbTNJNmo6xln+HCWhq52NLKCHhVBHBderF8LcxKBuQ0iWpLtTQWAnrhhKpUtSIBHDWr5MuOcVm9dLfCICpVQcJanSsBlVTovOGotGFaqlJaOmKoh/NO4vDY2ymkKFmhqnwkdqd0q9xaNw7Rss6onNUEuJSXTcGe7I5LtVGdERb3wbKsD6obCyjscEAbXaglf0uPr24WJYIXUKFY+wJRC8jyps9BwGgGSKKVpXcOShQAeND3PvprbKjm4LouXJZ3btd68yke5b1aNqaCYenFCo3webt/y9zxDkssdVnqW8aImikUQ7Mnd6WEQC/0jfSw2sqotFN5G3+fkfo+092RXYuypIXswgfjqmJtvLtDZtgN61APSpRUa+PtPkTc3/kxjmienGVXYRpRPKdZmlzGo2hEh+Ec68OAruJsnFxkhBtpOM2uKTmjcHpNv8XTUUDR77M0ms8pSVlbfD6bxBG24+lwcjGKp+/pFKLTBE0RoxugN0u8zU5bHM1Z33mUDsdYhqfxJM6uA9Z1FmdT1nyWpBTSLEyzeHgxCVOaXaSzZB7BiRE0T+PpWQpD0Xk0zfowjD2KLrGg+TicTNiab/0LwEjZURoms+s0fj/OaJxMRhE2TyP4F55OotYa0A0nYXwe0Cg8D99HXiqBIg+Sb7Zu0tU44l22GuJvmMXJlPEMk2mWYhkAbprdSV/F8yigMI3nHJmzNDn3SDm6EEq8HohOo1YRR/7TBOEKry/m0Z1OGkXhBOqQrenDhO6S/A5E+UGsZO9TRqR3okHvmf1tGskbcI7Y+PO72ux9Bf6io7Vz9clgsMiV6+dicOxtdJ3a6w6Zn1t67muzGnSndoDq6e2RaydafdjJ5cCgWgz9XLfuW7SJ7F2imbmHXvdf9V/5fU9i3gaWg7t5EYNCzZJnSiqZ0MWilHd7e32r7u41TP48I8A+dSm23Os8g+yOdtByG9mS5sNkPBpc3hf1lA/0z8FBj53tQc9po8rC+qYGfdZg0EU7i2pgFd6mn5Itn1dbL1QIJyAiHK0FnCyNFMUWhMIzUbo+3/H34CRmIDGlAtKzG3Zvb18YI7ZEz3TdkguctdLcdMF4bYqXuOe2HB8MFs6Cl/7SB4y78bUFZqukLFpSrTGESBQtcYLKVLXUT6qBjEY4EHW5QTZQf7JaqYpDv+f7QusSl59ZcSNHHI4YzGgazIBbBRrl7TZMDAUA/IDyQ7RVnoNsbfA0niUtRWl3KnO8Etqh5vWKJffZXsXwCUd4L/xGOsyXLv68NTjo+VGXY/BUfoZinnKBHO3nKOgys0vM26opy+Ae61vv1vFJp/gNl9Pg5Vf47NXlXDrkHK8pw+NHybwdt+xeh9+RRkU8KrbOdb7zuRr0766Pznfg7jcyLm0uasklhHyd0NptADi3NqC/8d+Y8qlMIfXPjbh9HmDAtpraFwmStsbjUFaPMvI5Zvh8etBPHPKjPVhv//greIjHp+j422VCcP+twAU+FZ9k4ovtzrSxv79RH9GS6JkbUTbyeyfn2+TmUty3DuMNOnRdy3y/LKVyg2eg9W+47pF23ytL070+7daC1R4zxP/HjOd3V5FfFce/B/8BmMsQQw==</source>
  </file>
  <file path="Log/LogLevel.php" generated-path="Log.LogLevel.html" hash="83883f8456559740ce829b65dc343c2c" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Psr\Log" line="42" package="Default">
      <extends/>
      <name>LogLevel</name>
      <full_name>\Psr\Log\LogLevel</full_name>
      <docblock line="42">
        <description>Describes log levels</description>
        <long-description>Not used within CodeIgniter, but provided as a
service to framework-agnostic libraries.</long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <constant namespace="Psr\Log" line="44" package="Default">
        <name>EMERGENCY</name>
        <full_name>\Psr\Log\LogLevel::EMERGENCY</full_name>
        <value>1</value>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="45" package="Default">
        <name>ALERT</name>
        <full_name>\Psr\Log\LogLevel::ALERT</full_name>
        <value>2</value>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="46" package="Default">
        <name>CRITICAL</name>
        <full_name>\Psr\Log\LogLevel::CRITICAL</full_name>
        <value>3</value>
        <docblock line="46">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="47" package="Default">
        <name>ERROR</name>
        <full_name>\Psr\Log\LogLevel::ERROR</full_name>
        <value>4</value>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="48" package="Default">
        <name>WARNING</name>
        <full_name>\Psr\Log\LogLevel::WARNING</full_name>
        <value>5</value>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="49" package="Default">
        <name>NOTICE</name>
        <full_name>\Psr\Log\LogLevel::NOTICE</full_name>
        <value>6</value>
        <docblock line="49">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="50" package="Default">
        <name>INFO</name>
        <full_name>\Psr\Log\LogLevel::INFO</full_name>
        <value>7</value>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
      <constant namespace="Psr\Log" line="51" package="Default">
        <name>DEBUG</name>
        <full_name>\Psr\Log\LogLevel::DEBUG</full_name>
        <value>8</value>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
        </docblock>
      </constant>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydVd9v4zYMfm7+CqJP7cHX7LrbD1x3WF1HSYQ5tmE71xXYi2IrjlbHMiSlQTHsfx+pOL7rPS4I4Ogz+ZEfKTK//d7veujEXtpeVBIya/6KdXM3mUzfvZvAO4h0LXnTKScNHgkJO9C97MDqg0EP0fetqoRTuoNavshW93vZOdgaJD1q8wxbbSBbZoN7uVMWKt05MsKfRrZSWFnDoaulAbeTsOIlxKqSnZVwhYfrwTXS/atRzc7BVXUNtz98uCVemI+ROLIaTM6IjWqVe4WF0Yd+8M6k2StrKU8Mu5NGbl6hMQJ96gDTlRL0FqqdMI0MwGkQ3Ssgl0UHvXFCdaprQGDu/SvxobEjLVZv3VEYrERXg7BWV0ogJdS6OlAlTqXZqlZauCJ5l8XgcXnt49RStESoOq/+/BaOyu30wWGFrDOqIpoAjar2UFMm59et2qshCLn7AlniQ+qDRSmUcAB7XastPaXX1x82rbK7AGpF7JuDQ9AS6OsekJopNs7K1ieHJAoFeNFfc/RmFKin4rqhXJaQ407v3+pRPqvtwXQYWHq3WmP5fNy/ZeUIIY+tblt9JI14T2pF0uyn8fpgoTf6RXpZp9vQaaeqU/19R/qvnR5e2Z1oW9jIoXwYXHXERuhZmaE0rMP7oEQLvTY+7veKb855LBkU6bx8DHMGvIAsT7/wGZvBZVjg+TKAR14u03UJaJGHSfkE6RzC5An+4MksAPZnlrOigDQnNr7KYs4Q5kkUr2c8WcADuiYpDgLHCUDeMvUxBzbOCuJbsTxa4jF84DEvnwLimvMyIeZ5mkMIWZiXPFrHYQ7ZOs/SgmESM2ROeDLPMRBbsaS8wcCIAfuCByiWYRxTND/ua5SRU6IQpdlTzhfLEpZpPGMIPjDML3yI2SkaqovikK8CmIWrcMG8V4pEXiRZntKExyUjlKKG+I1KniakJ0qTMsdjgHLzcvR+5AULIMx5QZWZ5+nKK6XqolPqedA1YSciqvzbBqEJndcFGzlhxsIY6bBbyfcNPTf5Hnfis2jkxdstCPfj3bv4/zsJ7odZu9g513+aTmmrnpbqjTbNdHhrp9j/i29W4uDaPZ/9hsfxeLzBZf5+qxrvj3bTcY3PpK1wyvGet7qBlva0HUQm2tGeqP1CwR30jdYAcC9Ab/SLopkRFgR5WGleaKpwXMct/140nbY4bLiPNkYYHKkbn0HV4k4E/E+JKejkn8kFDrV1gPcuX7AkeoLP8OHujIYxw77T5zPcjmiUc7zEYUzojyPK8hybebL9OKLYv4RuCaE/jShOEo/YyfbnEcURSGFg+GVEZ+xhvRjQX+8m/07+A5DdNhU=</source>
  </file>
  <file path="View/View.php" generated-path="View.View.html" hash="47a3c8238dc21e4c055f701053414ba5" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\Config\Services</namespace-alias>
    <namespace-alias name="Logger">\CodeIgniter\Log\Logger</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\View" line="49" package="CodeIgniter\View">
      <extends/>
      <implements>\CodeIgniter\View\RenderableInterface</implements>
      <name>View</name>
      <full_name>\CodeIgniter\View\View</full_name>
      <docblock line="49">
        <description>Class View</description>
        <long-description></long-description>
        <tag name="todo" line="49" description="integrate parsing somehow"/>
        <tag name="package" line="49" description="CodeIgniter\View"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="56" package="CodeIgniter\View">
        <name>$data</name>
        <full_name>\CodeIgniter\View\View::data</full_name>
        <default>array()</default>
        <docblock line="56">
          <description>Data that is made available to the Views.</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="63" package="CodeIgniter\View">
        <name>$viewPath</name>
        <full_name>\CodeIgniter\View\View::viewPath</full_name>
        <default></default>
        <docblock line="63">
          <description>The base directory to look in for our Views.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="70" package="CodeIgniter\View">
        <name>$loader</name>
        <full_name>\CodeIgniter\View\View::loader</full_name>
        <default></default>
        <docblock line="70">
          <description>Instance of CodeIgniter\Loader for when
we need to attempt to find a view
that's not in standard place.</description>
          <long-description></long-description>
          <tag name="var" line="70" description="" type="" variable=""/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="76" package="CodeIgniter\View">
        <name>$logger</name>
        <full_name>\CodeIgniter\View\View::logger</full_name>
        <default></default>
        <docblock line="76">
          <description>Logger instance.</description>
          <long-description></long-description>
          <tag name="var" line="76" description="" type="\CodeIgniter\Log\Logger" variable="">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="82" package="CodeIgniter\View">
        <name>$debug</name>
        <full_name>\CodeIgniter\View\View::debug</full_name>
        <default>false</default>
        <docblock line="82">
          <description>Should we store performance info?</description>
          <long-description></long-description>
          <tag name="var" line="82" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\View" line="89" package="CodeIgniter\View">
        <name>$performanceData</name>
        <full_name>\CodeIgniter\View\View::performanceData</full_name>
        <default>array()</default>
        <docblock line="89">
          <description>Cache stats about our performance here,
when CI_DEBUG = true</description>
          <long-description></long-description>
          <tag name="var" line="89" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="101" package="CodeIgniter\View">
        <name>__construct</name>
        <full_name>\CodeIgniter\View\View::__construct()</full_name>
        <docblock line="101">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="string" variable="$viewPath">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="" type="\CodeIgniter\View\type" variable="$loader">
            <type>\CodeIgniter\View\type</type>
          </tag>
          <tag name="param" line="101" description="" type="boolean" variable="$debug">
            <type>boolean</type>
          </tag>
          <tag name="param" line="101" description="" type="\CodeIgniter\Log\Logger" variable="$logger">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$viewPath</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$loader</name>
          <default>null</default>
          <type>\CodeIgniter\View\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$debug</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default>null</default>
          <type>\CodeIgniter\Log\Logger</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="124" package="CodeIgniter\View">
        <name>render</name>
        <full_name>\CodeIgniter\View\View::render()</full_name>
        <docblock line="124">
          <description>Builds the output based upon a file name and any
data that has already been set.</description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$view">
            <type>string</type>
          </tag>
          <tag name="param" line="124" description="&lt;p&gt;// Unused in this implementation&lt;/p&gt;" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="param" line="124" description="" type="boolean" variable="$saveData">
            <type>boolean</type>
          </tag>
          <tag name="return" line="124" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\View\RenderableInterface::render()" refers="\CodeIgniter\View\RenderableInterface::render()" link="/classes/CodeIgniter.View.RenderableInterface.html#method_render"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$saveData</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="174" package="CodeIgniter\View">
        <name>setData</name>
        <full_name>\CodeIgniter\View\View::setData()</full_name>
        <docblock line="174">
          <description>Sets several pieces of view data at once.</description>
          <long-description></long-description>
          <tag name="param" line="174" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="param" line="174" description="&lt;p&gt;The context to escape it for: html, css, js, url&#10;                       If null, no escaping will happen&lt;/p&gt;" type="string" variable="$context">
            <type>string</type>
          </tag>
          <tag name="return" line="174" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\View\RenderableInterface::setData()" refers="\CodeIgniter\View\RenderableInterface::setData()" link="/classes/CodeIgniter.View.RenderableInterface.html#method_setData"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="198" package="CodeIgniter\View">
        <name>setVar</name>
        <full_name>\CodeIgniter\View\View::setVar()</full_name>
        <docblock line="198">
          <description>Sets a single piece of view data.</description>
          <long-description></long-description>
          <tag name="param" line="198" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="198" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="param" line="198" description="&lt;p&gt;The context to escape it for: html, css, js, url&#10;                       If null, no escaping will happen&lt;/p&gt;" type="string" variable="$context">
            <type>string</type>
          </tag>
          <tag name="return" line="198" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\View\RenderableInterface::setVar()" refers="\CodeIgniter\View\RenderableInterface::setVar()" link="/classes/CodeIgniter.View.RenderableInterface.html#method_setVar"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="217" package="CodeIgniter\View">
        <name>resetData</name>
        <full_name>\CodeIgniter\View\View::resetData()</full_name>
        <docblock line="217">
          <description>Removes all of the view data from the system.</description>
          <long-description></long-description>
          <tag name="return" line="217" description="" type="\CodeIgniter\View\RenderableInterface">
            <type>\CodeIgniter\View\RenderableInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\View\RenderableInterface::resetData()" refers="\CodeIgniter\View\RenderableInterface::resetData()" link="/classes/CodeIgniter.View.RenderableInterface.html#method_resetData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="231" package="CodeIgniter\View">
        <name>getData</name>
        <full_name>\CodeIgniter\View\View::getData()</full_name>
        <docblock line="231">
          <description>Returns the current data that will be displayed in the view.</description>
          <long-description></long-description>
          <tag name="return" line="231" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\View" line="244" package="CodeIgniter\View">
        <name>getPerformanceData</name>
        <full_name>\CodeIgniter\View\View::getPerformanceData()</full_name>
        <docblock line="244">
          <description>Returns the performance data that might have been collected
during the execution. Used primarily in the Debug Toolbar.</description>
          <long-description></long-description>
          <tag name="return" line="244" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\View" line="258" package="CodeIgniter\View">
        <name>logPerformance</name>
        <full_name>\CodeIgniter\View\View::logPerformance()</full_name>
        <docblock line="258">
          <description>Logs performance data for rendering a view.</description>
          <long-description></long-description>
          <tag name="param" line="258" description="" type="float" variable="$start">
            <type>float</type>
          </tag>
          <tag name="param" line="258" description="" type="float" variable="$end">
            <type>float</type>
          </tag>
          <tag name="param" line="258" description="" type="string" variable="$view">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default></default>
          <type>float</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$view</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="49">integrate parsing somehow</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Config/AutoloadConfig.php" generated-path="Config.AutoloadConfig.html" hash="03e96d96a77ee151a7695c73cfb8c0f2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Config" line="46" package="Default">
      <extends/>
      <name>AutoloadConfig</name>
      <full_name>\CodeIgniter\Config\AutoloadConfig</full_name>
      <docblock line="46">
        <description>AUTO-LOADER</description>
        <long-description>This file defines the namespaces and class maps so the Autoloader
can find the files as needed.</long-description>
        <tag name="package" line="46" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Config" line="52" package="Default">
        <name>$psr4</name>
        <full_name>\CodeIgniter\Config\AutoloadConfig::psr4</full_name>
        <default>array()</default>
        <docblock line="52">
          <description>Array of namespaces for autoloading.</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="\CodeIgniter\Config\type" variable="">
            <type>\CodeIgniter\Config\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Config" line="58" package="Default">
        <name>$classmap</name>
        <full_name>\CodeIgniter\Config\AutoloadConfig::classmap</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>Map of class names and locations</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\Config\type" variable="">
            <type>\CodeIgniter\Config\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Config" line="65" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Config\AutoloadConfig::__construct()</full_name>
        <docblock line="65">
          <description>Constructor.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Seeder.php" generated-path="Database.Seeder.html" hash="2cedaf80fb7cf9999cdca28b3d68c961" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="CLI">\CodeIgniter\CLI\CLI</namespace-alias>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="45" package="Default">
      <extends/>
      <name>Seeder</name>
      <full_name>\CodeIgniter\Database\Seeder</full_name>
      <docblock line="45">
        <description>Class Seeder</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="51" package="Default">
        <name>$DBGroup</name>
        <full_name>\CodeIgniter\Database\Seeder::DBGroup</full_name>
        <default></default>
        <docblock line="51">
          <description>The name of the database group to use.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="57" package="Default">
        <name>$seedPath</name>
        <full_name>\CodeIgniter\Database\Seeder::seedPath</full_name>
        <default></default>
        <docblock line="57">
          <description>Where we can find the Seed files.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="63" package="Default">
        <name>$config</name>
        <full_name>\CodeIgniter\Database\Seeder::config</full_name>
        <default></default>
        <docblock line="63">
          <description>An instance of the main Database configuration</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="\CodeIgniter\Config\BaseConfig" variable="">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="69" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Seeder::db</full_name>
        <default></default>
        <docblock line="69">
          <description>Database Connection instance</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="\CodeIgniter\Database\BaseConnection" variable="">
            <type>\CodeIgniter\Database\BaseConnection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="75" package="Default">
        <name>$forge</name>
        <full_name>\CodeIgniter\Database\Seeder::forge</full_name>
        <default></default>
        <docblock line="75">
          <description>Database Forge instance.</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="\CodeIgniter\Database\Forge" variable="">
            <type>\CodeIgniter\Database\Forge</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="81" package="Default">
        <name>$silent</name>
        <full_name>\CodeIgniter\Database\Seeder::silent</full_name>
        <default>false</default>
        <docblock line="81">
          <description>If true, will not display CLI messages.</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="91" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Seeder::__construct()</full_name>
        <docblock line="91">
          <description>Seeder constructor.</description>
          <long-description></long-description>
          <tag name="param" line="91" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
          <tag name="param" line="91" description="" type="\CodeIgniter\Database\BaseConnection" variable="$db">
            <type>\CodeIgniter\Database\BaseConnection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default>null</default>
          <type>\CodeIgniter\Database\BaseConnection</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="126" package="Default">
        <name>call</name>
        <full_name>\CodeIgniter\Database\Seeder::call()</full_name>
        <docblock line="126">
          <description>Loads the specified seeder and runs it.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="throws" line="126" description="" type="\CodeIgniter\Database\RuntimeException">
            <type>\CodeIgniter\Database\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="166" package="Default">
        <name>setPath</name>
        <full_name>\CodeIgniter\Database\Seeder::setPath()</full_name>
        <docblock line="166">
          <description>Sets the location of the directory that seed files can be located in.</description>
          <long-description></long-description>
          <tag name="param" line="166" description="" type="\CodeIgniter\Database\sting" variable="$path">
            <type>\CodeIgniter\Database\sting</type>
          </tag>
          <tag name="return" line="166" description="" type="\CodeIgniter\Database\Seeder">
            <type>\CodeIgniter\Database\Seeder</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>\CodeIgniter\Database\sting</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="182" package="Default">
        <name>setSilent</name>
        <full_name>\CodeIgniter\Database\Seeder::setSilent()</full_name>
        <docblock line="182">
          <description>Sets the silent treatment.</description>
          <long-description></long-description>
          <tag name="param" line="182" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="182" description="" type="\CodeIgniter\Database\Seeder">
            <type>\CodeIgniter\Database\Seeder</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="199" package="Default">
        <name>run</name>
        <full_name>\CodeIgniter\Database\Seeder::run()</full_name>
        <docblock line="199">
          <description>Run the database seeds. This is where the magic happens.</description>
          <long-description>Child classes must implement this method and take care
of inserting their data here.</long-description>
          <tag name="return" line="199" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Postgre/Result.php" generated-path="Database.Postgre.Result.html" hash="4d58c31cfce4bc7beed61e0f40b63920" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseResult">\CodeIgniter\Database\BaseResult</namespace-alias>
    <namespace-alias name="ResultInterface">\CodeIgniter\Database\ResultInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\Postgre" line="45" package="Default">
      <extends>\CodeIgniter\Database\BaseResult</extends>
      <implements>\CodeIgniter\Database\ResultInterface</implements>
      <name>Result</name>
      <full_name>\CodeIgniter\Database\Postgre\Result</full_name>
      <docblock line="45">
        <description>Result for Postgre</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult" refers="\CodeIgniter\Database\BaseResult" link="/classes/CodeIgniter.Database.BaseResult.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="50" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseResult::connID</full_name>
        <default></default>
        <docblock line="50">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="57" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultID</full_name>
        <default></default>
        <docblock line="57">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="64" package="Default">
        <name>$resultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultArray</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Result Array</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array&lt;mixed,array&gt;" variable="">
            <type>array&lt;mixed,array&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="71" package="Default">
        <name>$resultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultObject</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Result Object</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="78" package="Default">
        <name>$customResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::customResultObject</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>Custom Result Object</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="85" package="Default">
        <name>$currentRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::currentRow</full_name>
        <default>0</default>
        <docblock line="85">
          <description>Current Row index</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="92" package="Default">
        <name>$numRows</name>
        <full_name>\CodeIgniter\Database\BaseResult::numRows</full_name>
        <default></default>
        <docblock line="92">
          <description>Number of rows</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="99" package="Default">
        <name>$rowData</name>
        <full_name>\CodeIgniter\Database\BaseResult::rowData</full_name>
        <default></default>
        <docblock line="99">
          <description>Row data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="52" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::getFieldCount()</full_name>
        <docblock line="52">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="52" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldCount()" refers="\CodeIgniter\Database\BaseResult::getFieldCount()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldCount"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="64" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::getFieldNames()</full_name>
        <docblock line="64">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="64" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldNames()" refers="\CodeIgniter\Database\BaseResult::getFieldNames()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldNames"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="82" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::getFieldData()</full_name>
        <docblock line="82">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="82" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::getFieldData()" refers="\CodeIgniter\Database\BaseResult::getFieldData()" link="/classes/CodeIgniter.Database.BaseResult.html#method_getFieldData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="106" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::freeResult()</full_name>
        <docblock line="106">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="106" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::freeResult()" refers="\CodeIgniter\Database\BaseResult::freeResult()" link="/classes/CodeIgniter.Database.BaseResult.html#method_freeResult"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="126" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::dataSeek()</full_name>
        <docblock line="126">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="126" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::dataSeek()" refers="\CodeIgniter\Database\BaseResult::dataSeek()" link="/classes/CodeIgniter.Database.BaseResult.html#method_dataSeek"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="140" package="Default">
        <name>fetchAssoc</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::fetchAssoc()</full_name>
        <docblock line="140">
          <description>Returns the result set as an array.</description>
          <long-description>Overridden by driver classes.</long-description>
          <tag name="return" line="140" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::fetchAssoc()" refers="\CodeIgniter\Database\BaseResult::fetchAssoc()" link="/classes/CodeIgniter.Database.BaseResult.html#method_fetchAssoc"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="156" package="Default">
        <name>fetchObject</name>
        <full_name>\CodeIgniter\Database\Postgre\Result::fetchObject()</full_name>
        <docblock line="156">
          <description>Returns the result set as an object.</description>
          <long-description>Overridden by child classes.</long-description>
          <tag name="param" line="156" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="156" description="" type="object">
            <type>object</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseResult::fetchObject()" refers="\CodeIgniter\Database\BaseResult::fetchObject()" link="/classes/CodeIgniter.Database.BaseResult.html#method_fetchObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>'stdClass'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="109" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseResult::__construct()</full_name>
        <docblock line="109">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$connID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$resultID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$connID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$resultID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="126" package="Default">
        <name>getResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResult()</full_name>
        <docblock line="126">
          <description>Retrieve the results of the query. Typically an array of
individual data rows, which can be either an 'array', an
'object', or a custom class name.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="&lt;p&gt;The row type. Either 'array', 'object', or a class name to use&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResult()" refers="\CodeIgniter\Database\ResultInterface::getResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResult"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="149" package="Default">
        <name>getCustomResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomResultObject()</full_name>
        <docblock line="149">
          <description>Returns the results as an array of custom objects.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The name of the class to use.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="149" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomResultObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="206" package="Default">
        <name>getResultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultArray()</full_name>
        <docblock line="206">
          <description>Returns the results as an array of arrays.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultArray()" refers="\CodeIgniter\Database\ResultInterface::getResultArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultArray"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="249" package="Default">
        <name>getResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultObject()</full_name>
        <docblock line="249">
          <description>Returns the results as an array of objects.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="249" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultObject()" refers="\CodeIgniter\Database\ResultInterface::getResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultObject"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="296" package="Default">
        <name>getRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRow()</full_name>
        <docblock line="296">
          <description>Wrapper object to return a row as either an array, an object, or
a custom class.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="296" description="&lt;p&gt;The index of the results to return&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="296" description="&lt;p&gt;The type of result object. 'array', 'object' or class name.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="296" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRow()" refers="\CodeIgniter\Database\ResultInterface::getRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="338" package="Default">
        <name>getCustomRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomRowObject()</full_name>
        <docblock line="338">
          <description>Returns a row as a custom class instance.</description>
          <long-description>If row doesn't exists, returns null.</long-description>
          <tag name="param" line="338" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="338" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="366" package="Default">
        <name>getRowArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowArray()</full_name>
        <docblock line="366">
          <description>Returns a single row from the results as an array.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="366" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="366" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowArray()" refers="\CodeIgniter\Database\ResultInterface::getRowArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowArray"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="393" package="Default">
        <name>getRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowObject()</full_name>
        <docblock line="393">
          <description>Returns a single row from the results as an object.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="393" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="393" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowObject()" refers="\CodeIgniter\Database\ResultInterface::getRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="419" package="Default">
        <name>setRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::setRow()</full_name>
        <docblock line="419">
          <description>Assigns an item into a particular column slot.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="" variable="$key"/>
          <tag name="param" line="419" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::setRow()" refers="\CodeIgniter\Database\ResultInterface::setRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_setRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="452" package="Default">
        <name>getFirstRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFirstRow()</full_name>
        <docblock line="452">
          <description>Returns the "first" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="452" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="452" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFirstRow()" refers="\CodeIgniter\Database\ResultInterface::getFirstRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFirstRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="468" package="Default">
        <name>getLastRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getLastRow()</full_name>
        <docblock line="468">
          <description>Returns the "last" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="468" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="468" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getLastRow()" refers="\CodeIgniter\Database\ResultInterface::getLastRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getLastRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="484" package="Default">
        <name>getNextRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getNextRow()</full_name>
        <docblock line="484">
          <description>Returns the "next" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="484" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="484" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getNextRow()" refers="\CodeIgniter\Database\ResultInterface::getNextRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getNextRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="506" package="Default">
        <name>getPreviousRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getPreviousRow()</full_name>
        <docblock line="506">
          <description>Returns the "previous" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="506" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getPreviousRow()" refers="\CodeIgniter\Database\ResultInterface::getPreviousRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getPreviousRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="531" package="Default">
        <name>getUnbufferedRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getUnbufferedRow()</full_name>
        <docblock line="531">
          <description>Returns an unbuffered row and move the pointer to the next row.</description>
          <long-description></long-description>
          <tag name="param" line="531" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="531" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" refers="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getUnbufferedRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="552" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldCount()</full_name>
        <docblock line="552">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="552" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldCount()" refers="\CodeIgniter\Database\ResultInterface::getFieldCount()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldCount"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="561" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldNames()</full_name>
        <docblock line="561">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="561" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldNames()" refers="\CodeIgniter\Database\ResultInterface::getFieldNames()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldNames"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="570" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldData()</full_name>
        <docblock line="570">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="570" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldData()" refers="\CodeIgniter\Database\ResultInterface::getFieldData()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldData"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="579" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::freeResult()</full_name>
        <docblock line="579">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="579" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::freeResult()" refers="\CodeIgniter\Database\ResultInterface::freeResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_freeResult"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="592" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\BaseResult::dataSeek()</full_name>
        <docblock line="592">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="592" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="592" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::dataSeek()" refers="\CodeIgniter\Database\ResultInterface::dataSeek()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_dataSeek"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="603" package="Default">
        <name>fetchAssoc</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchAssoc()</full_name>
        <docblock line="603">
          <description>Returns the result set as an array.</description>
          <long-description>Overridden by driver classes.</long-description>
          <tag name="return" line="603" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="616" package="Default">
        <name>fetchObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchObject()</full_name>
        <docblock line="616">
          <description>Returns the result set as an object.</description>
          <long-description>Overridden by child classes.</long-description>
          <tag name="param" line="616" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="616" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>'stdClass'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseResult</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/Handlers/ChromeLoggerHandler.php" generated-path="Log.Handlers.ChromeLoggerHandler.html" hash="ae7a44e58333f269d0551a187baf56ae" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Hooks">\CodeIgniter\Hooks\Hooks</namespace-alias>
    <namespace-alias name="ResponseInterface">\CodeIgniter\HTTP\ResponseInterface</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Log\Handlers" line="53" package="CodeIgniter\Log\Handlers">
      <extends>\CodeIgniter\Log\Handlers\BaseHandler</extends>
      <implements>\CodeIgniter\Log\Handlers\HandlerInterface</implements>
      <name>ChromeLoggerHandler</name>
      <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler</full_name>
      <docblock line="53">
        <description>Class ChromeLoggerHandler</description>
        <long-description>Allows for logging items to the Chrome console for debugging.
Requires the ChromeLogger extension installed in your browser.</long-description>
        <tag name="see" line="53" description="" link="https://craig.is/writing/chrome-logger"/>
        <tag name="package" line="53" description="CodeIgniter\Log\Handlers"/>
        <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler" refers="\CodeIgniter\Log\Handlers\BaseHandler" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html"/>
      </docblock>
      <constant namespace="CodeIgniter\Log\Handlers" line="60" package="CodeIgniter\Log\Handlers">
        <name>VERSION</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::VERSION</full_name>
        <value>1.0</value>
        <docblock line="60">
          <description>Version of this library - for ChromeLogger use.</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </constant>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="67" package="CodeIgniter\Log\Handlers">
        <name>$backtraceLevel</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::backtraceLevel</full_name>
        <default>0</default>
        <docblock line="67">
          <description>The number of strack frames returned from the backtrace.</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="74" package="CodeIgniter\Log\Handlers">
        <name>$json</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::json</full_name>
        <default>array('version' =&gt; self::VERSION, 'columns' =&gt; array('log', 'backtrace', 'type'), 'rows' =&gt; array())</default>
        <docblock line="74">
          <description>The final data that is sent to the browser.</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="85" package="CodeIgniter\Log\Handlers">
        <name>$header</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::header</full_name>
        <default>'X-ChromeLogger-Data'</default>
        <docblock line="85">
          <description>The header used to pass the data.</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="92" package="CodeIgniter\Log\Handlers">
        <name>$levels</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::levels</full_name>
        <default>array('emergency' =&gt; 'error', 'alert' =&gt; 'error', 'critical' =&gt; 'error', 'error' =&gt; 'error', 'warning' =&gt; 'warn', 'notice' =&gt; 'warn', 'info' =&gt; 'info', 'debug' =&gt; 'info')</default>
        <docblock line="92">
          <description>Maps the log levels to the ChromeLogger types.</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="50" package="Default">
        <name>$handles</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handles</full_name>
        <default></default>
        <docblock line="50">
          <description>Handles</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="57" package="Default">
        <name>$dateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::dateFormat</full_name>
        <default>'Y-m-d H:i:s'</default>
        <docblock line="57">
          <description>Date format for logging</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="110" package="CodeIgniter\Log\Handlers">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::__construct()</full_name>
        <docblock line="110">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler::__construct()" refers="\CodeIgniter\Log\Handlers\BaseHandler::__construct()" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="134" package="CodeIgniter\Log\Handlers">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::handle()</full_name>
        <docblock line="134">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="134" description="" type="" variable="$level"/>
          <tag name="param" line="134" description="" type="" variable="$message"/>
          <tag name="return" line="134" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\BaseHandler::handle()" refers="\CodeIgniter\Log\Handlers\BaseHandler::handle()" link="/classes/CodeIgniter.Log.Handlers.BaseHandler.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Log\Handlers" line="169" package="CodeIgniter\Log\Handlers">
        <name>format</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::format()</full_name>
        <docblock line="169">
          <description>Converts the object to display nicely in the Chrome Logger UI.</description>
          <long-description></long-description>
          <tag name="param" line="169" description="" type="" variable="$object"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="191" package="CodeIgniter\Log\Handlers">
        <name>sendLogs</name>
        <full_name>\CodeIgniter\Log\Handlers\ChromeLoggerHandler::sendLogs()</full_name>
        <docblock line="191">
          <description>Attaches the header and the content to the passed in request object.</description>
          <long-description></long-description>
          <tag name="param" line="191" description="&lt;p&gt;response&lt;/p&gt;" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$response</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="66" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="66">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="66" description="" type="array" variable="$config">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="81" package="Default">
        <name>canHandle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::canHandle()</full_name>
        <docblock line="81">
          <description>Checks whether the Handler will handle logging items of this
log Level.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="" variable="$level"/>
          <tag name="return" line="81" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::canHandle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_canHandle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="99" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::handle()</full_name>
        <docblock line="99">
          <description>Handles logging the message.</description>
          <long-description>If the handler returns false, then execution of handlers
will stop. Any handlers that have not run, yet, will not
be run.</long-description>
          <tag name="param" line="99" description="" type="" variable="$level"/>
          <tag name="param" line="99" description="" type="" variable="$message"/>
          <tag name="return" line="99" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::handle()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_handle"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Log\Handlers" line="110" package="Default">
        <name>setDateFormat</name>
        <full_name>\CodeIgniter\Log\Handlers\BaseHandler::setDateFormat()</full_name>
        <docblock line="110">
          <description>Stores the date format to use while logging messages.</description>
          <long-description></long-description>
          <tag name="param" line="110" description="" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="110" description="" type="\CodeIgniter\Log\Handlers\HandlerInterface">
            <type>\CodeIgniter\Log\Handlers\HandlerInterface</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" refers="\CodeIgniter\Log\Handlers\HandlerInterface::setDateFormat()" link="/classes/CodeIgniter.Log.Handlers.HandlerInterface.html#method_setDateFormat"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\Handlers\BaseHandler</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Forge.php" generated-path="Database.Forge.html" hash="1fa54b4ec829247391c617ac00f2a9da" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="44" package="Default">
      <extends/>
      <name>Forge</name>
      <full_name>\CodeIgniter\Database\Forge</full_name>
      <docblock line="44">
        <description>Class Forge</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="51" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Forge::db</full_name>
        <default></default>
        <docblock line="51">
          <description>The active database connection.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="58" package="Default">
        <name>$fields</name>
        <full_name>\CodeIgniter\Database\Forge::fields</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>List of fields.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="64" package="Default">
        <name>$keys</name>
        <full_name>\CodeIgniter\Database\Forge::keys</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>List of keys.</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="71" package="Default">
        <name>$primaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::primaryKeys</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>List of primary keys.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="78" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\Forge::charset</full_name>
        <default>''</default>
        <docblock line="78">
          <description>Character set used.</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="87" package="Default">
        <name>$createDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabaseStr</full_name>
        <default>'CREATE DATABASE %s'</default>
        <docblock line="87">
          <description>CREATE DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="94" package="Default">
        <name>$dropDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabaseStr</full_name>
        <default>'DROP DATABASE %s'</default>
        <docblock line="94">
          <description>DROP DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="101" package="Default">
        <name>$createTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableStr</full_name>
        <default>"%s %s (%s\n)"</default>
        <docblock line="101">
          <description>CREATE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="108" package="Default">
        <name>$createTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableIfStr</full_name>
        <default>'CREATE TABLE IF NOT EXISTS'</default>
        <docblock line="108">
          <description>CREATE TABLE IF statement</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="118" package="Default">
        <name>$createTableKeys</name>
        <full_name>\CodeIgniter\Database\Forge::createTableKeys</full_name>
        <default>false</default>
        <docblock line="118">
          <description>CREATE TABLE keys flag</description>
          <long-description>Whether table keys are created from within the
CREATE TABLE statement.</long-description>
          <tag name="var" line="118" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="125" package="Default">
        <name>$dropTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropTableIfStr</full_name>
        <default>'DROP TABLE IF EXISTS'</default>
        <docblock line="125">
          <description>DROP TABLE IF EXISTS statement</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="132" package="Default">
        <name>$renameTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::renameTableStr</full_name>
        <default>'ALTER TABLE %s RENAME TO %s;'</default>
        <docblock line="132">
          <description>RENAME TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="132" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="139" package="Default">
        <name>$unsigned</name>
        <full_name>\CodeIgniter\Database\Forge::unsigned</full_name>
        <default>true</default>
        <docblock line="139">
          <description>UNSIGNED support</description>
          <long-description></long-description>
          <tag name="var" line="139" description="" type="boolean|array" variable="">
            <type>boolean</type>
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="146" package="Default">
        <name>$null</name>
        <full_name>\CodeIgniter\Database\Forge::null</full_name>
        <default>''</default>
        <docblock line="146">
          <description>NULL value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="146" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="153" package="Default">
        <name>$default</name>
        <full_name>\CodeIgniter\Database\Forge::default</full_name>
        <default>' DEFAULT '</default>
        <docblock line="153">
          <description>DEFAULT value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="153" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="162" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Forge::__construct()</full_name>
        <docblock line="162">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="174" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\Forge::getConnection()</full_name>
        <docblock line="174">
          <description>Provides access to the forge's current database connection.</description>
          <long-description></long-description>
          <tag name="return" line="174" description="" type="\CodeIgniter\Database\ConnectionInterface">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="189" package="Default">
        <name>createDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabase()</full_name>
        <docblock line="189">
          <description>Create database</description>
          <long-description></long-description>
          <tag name="param" line="189" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="189" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="229" package="Default">
        <name>dropDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabase()</full_name>
        <docblock line="229">
          <description>Drop database</description>
          <long-description></long-description>
          <tag name="param" line="229" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="229" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="272" package="Default">
        <name>addKey</name>
        <full_name>\CodeIgniter\Database\Forge::addKey()</full_name>
        <docblock line="272">
          <description>Add Key</description>
          <long-description></long-description>
          <tag name="param" line="272" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="272" description="" type="boolean" variable="$primary">
            <type>boolean</type>
          </tag>
          <tag name="return" line="272" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$primary</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="305" package="Default">
        <name>addField</name>
        <full_name>\CodeIgniter\Database\Forge::addField()</full_name>
        <docblock line="305">
          <description>Add Field</description>
          <long-description></long-description>
          <tag name="param" line="305" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="305" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="350" package="Default">
        <name>createTable</name>
        <full_name>\CodeIgniter\Database\Forge::createTable()</full_name>
        <docblock line="350">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="350" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Whether to add IF NOT EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="350" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="412" package="Default">
        <name>_createTable</name>
        <full_name>\CodeIgniter\Database\Forge::_createTable()</full_name>
        <docblock line="412">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Whether to add 'IF NOT EXISTS' condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="412" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="467" package="Default">
        <name>_createTableAttributes</name>
        <full_name>\CodeIgniter\Database\Forge::_createTableAttributes()</full_name>
        <docblock line="467">
          <description>CREATE TABLE attributes</description>
          <long-description></long-description>
          <tag name="param" line="467" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="467" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="492" package="Default">
        <name>dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::dropTable()</full_name>
        <docblock line="492">
          <description>Drop Table</description>
          <long-description></long-description>
          <tag name="param" line="492" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="492" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="492" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="537" package="Default">
        <name>_dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::_dropTable()</full_name>
        <docblock line="537">
          <description>Drop Table</description>
          <long-description>Generates a platform-specific DROP TABLE string</long-description>
          <tag name="param" line="537" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="537" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="537" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="569" package="Default">
        <name>renameTable</name>
        <full_name>\CodeIgniter\Database\Forge::renameTable()</full_name>
        <docblock line="569">
          <description>Rename Table</description>
          <long-description></long-description>
          <tag name="param" line="569" description="&lt;p&gt;Old table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="569" description="&lt;p&gt;New table name&lt;/p&gt;" type="string" variable="$new_table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="569" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$new_table_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="614" package="Default">
        <name>addColumn</name>
        <full_name>\CodeIgniter\Database\Forge::addColumn()</full_name>
        <docblock line="614">
          <description>Column Add</description>
          <long-description></long-description>
          <tag name="param" line="614" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column definition&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column for AFTER clause (deprecated)&lt;/p&gt;" type="string" variable="$_after">
            <type>string</type>
          </tag>
          <tag name="return" line="614" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$_after</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="657" package="Default">
        <name>dropColumn</name>
        <full_name>\CodeIgniter\Database\Forge::dropColumn()</full_name>
        <docblock line="657">
          <description>Column Drop</description>
          <long-description></long-description>
          <tag name="param" line="657" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="657" description="&lt;p&gt;Column name&lt;/p&gt;" type="string" variable="$column_name">
            <type>string</type>
          </tag>
          <tag name="return" line="657" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="683" package="Default">
        <name>modifyColumn</name>
        <full_name>\CodeIgniter\Database\Forge::modifyColumn()</full_name>
        <docblock line="683">
          <description>Column Modify</description>
          <long-description></long-description>
          <tag name="param" line="683" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="683" description="&lt;p&gt;Column definition&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="return" line="683" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="732" package="Default">
        <name>_alterTable</name>
        <full_name>\CodeIgniter\Database\Forge::_alterTable()</full_name>
        <docblock line="732">
          <description>ALTER TABLE</description>
          <long-description></long-description>
          <tag name="param" line="732" description="&lt;p&gt;ALTER type&lt;/p&gt;" type="string" variable="$alter_type">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Column definition&lt;/p&gt;" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="return" line="732" description="" type="string|array&lt;mixed,string&gt;">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alter_type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="765" package="Default">
        <name>_processFields</name>
        <full_name>\CodeIgniter\Database\Forge::_processFields()</full_name>
        <docblock line="765">
          <description>Process fields</description>
          <long-description></long-description>
          <tag name="param" line="765" description="" type="boolean" variable="$create_table">
            <type>boolean</type>
          </tag>
          <tag name="return" line="765" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$create_table</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="873" package="Default">
        <name>_processColumn</name>
        <full_name>\CodeIgniter\Database\Forge::_processColumn()</full_name>
        <docblock line="873">
          <description>Process column</description>
          <long-description></long-description>
          <tag name="param" line="873" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="873" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="895" package="Default">
        <name>_attributeType</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeType()</full_name>
        <docblock line="895">
          <description>Field attribute TYPE</description>
          <long-description>Performs a data type mapping between different databases.</long-description>
          <tag name="param" line="895" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="895" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="919" package="Default">
        <name>_attributeUnsigned</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnsigned()</full_name>
        <docblock line="919">
          <description>Field attribute UNSIGNED</description>
          <long-description>Depending on the unsigned property value:

   - TRUE will always set $field['unsigned'] to 'UNSIGNED'
   - FALSE will always set $field['unsigned'] to ''
   - array(TYPE) will set $field['unsigned'] to 'UNSIGNED',
       if $attributes['TYPE'] is found in the array
   - array(TYPE =&gt; UTYPE) will change $field['type'],
       from TYPE to UTYPE in case of a match</long-description>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="919" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="963" package="Default">
        <name>_attributeDefault</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeDefault()</full_name>
        <docblock line="963">
          <description>Field attribute DEFAULT</description>
          <long-description></long-description>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="963" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="997" package="Default">
        <name>_attributeUnique</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnique()</full_name>
        <docblock line="997">
          <description>Field attribute UNIQUE</description>
          <long-description></long-description>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="997" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1015" package="Default">
        <name>_attributeAutoIncrement</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeAutoIncrement()</full_name>
        <docblock line="1015">
          <description>Field attribute AUTO_INCREMENT</description>
          <long-description></long-description>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="1015" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1034" package="Default">
        <name>_processPrimaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::_processPrimaryKeys()</full_name>
        <docblock line="1034">
          <description>Process primary keys</description>
          <long-description></long-description>
          <tag name="param" line="1034" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1034" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1064" package="Default">
        <name>_processIndexes</name>
        <full_name>\CodeIgniter\Database\Forge::_processIndexes()</full_name>
        <docblock line="1064">
          <description>Process indexes</description>
          <long-description></long-description>
          <tag name="param" line="1064" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1064" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1107" package="Default">
        <name>_reset</name>
        <full_name>\CodeIgniter\Database\Forge::_reset()</full_name>
        <docblock line="1107">
          <description>Reset</description>
          <long-description>Resets table creation vars</long-description>
          <tag name="return" line="1107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session/Handlers/MemcachedHandler.php" generated-path="Session.Handlers.MemcachedHandler.html" hash="2c78b1c58da26c4295e1d674a7cbb46f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Session\Handlers" line="44" package="Default">
      <extends>\CodeIgniter\Session\Handlers\BaseHandler</extends>
      <implements>\SessionHandlerInterface</implements>
      <name>MemcachedHandler</name>
      <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler</full_name>
      <docblock line="44">
        <description>Session handler using Memcache for persistence</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler" refers="\CodeIgniter\Session\Handlers\BaseHandler" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="51" package="Default">
        <name>$memcached</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::memcached</full_name>
        <default></default>
        <docblock line="51">
          <description>Memcached instance</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="\Memcached" variable="">
            <type>\Memcached</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="58" package="Default">
        <name>$keyPrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::keyPrefix</full_name>
        <default>'ci_session:'</default>
        <docblock line="58">
          <description>Key prefix</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="65" package="Default">
        <name>$lockKey</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::lockKey</full_name>
        <default></default>
        <docblock line="65">
          <description>Lock key</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="72" package="Default">
        <name>$sessionExpiration</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::sessionExpiration</full_name>
        <default>7200</default>
        <docblock line="72">
          <description>Number of seconds until the session ends.</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="54" package="Default">
        <name>$fingerprint</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::fingerprint</full_name>
        <default></default>
        <docblock line="54">
          <description>The Data fingerprint.</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="61" package="Default">
        <name>$lock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lock</full_name>
        <default>false</default>
        <docblock line="61">
          <description>Lock placeholder.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="68" package="Default">
        <name>$cookiePrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePrefix</full_name>
        <default>''</default>
        <docblock line="68">
          <description>Cookie prefix</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="75" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieDomain</full_name>
        <default>''</default>
        <docblock line="75">
          <description>Cookie domain</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="81" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="81">
          <description>Cookie path</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="88" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieSecure</full_name>
        <default>false</default>
        <docblock line="88">
          <description>Cookie secure?</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="94" package="Default">
        <name>$cookieName</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieName</full_name>
        <default></default>
        <docblock line="94">
          <description>Cookie name to use</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="101" package="Default">
        <name>$matchIP</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::matchIP</full_name>
        <default>false</default>
        <docblock line="101">
          <description>Match IP addresses for cookies?</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="107" package="Default">
        <name>$sessionID</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::sessionID</full_name>
        <default></default>
        <docblock line="107">
          <description>Current session ID</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="82" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::__construct()</full_name>
        <docblock line="82">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="82" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
          <tag name="throws" line="82" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" refers="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="111" package="Default">
        <name>open</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::open()</full_name>
        <docblock line="111">
          <description>Open</description>
          <long-description>Sanitizes save_path and initializes connections.</long-description>
          <tag name="param" line="111" description="&lt;p&gt;Server path(s)&lt;/p&gt;" type="string" variable="$save_path">
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;Session cookie name, unused&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save_path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="173" package="Default">
        <name>read</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::read()</full_name>
        <docblock line="173">
          <description>Read</description>
          <long-description>Reads session data and acquires a lock</long-description>
          <tag name="param" line="173" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="173" description="Serialized session data" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="201" package="Default">
        <name>write</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::write()</full_name>
        <docblock line="201">
          <description>Write</description>
          <long-description>Writes (create / update) session data</long-description>
          <tag name="param" line="201" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="param" line="201" description="&lt;p&gt;Serialized session data&lt;/p&gt;" type="string" variable="$session_data">
            <type>string</type>
          </tag>
          <tag name="return" line="201" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$session_data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="250" package="Default">
        <name>close</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::close()</full_name>
        <docblock line="250">
          <description>Close</description>
          <long-description>Releases locks and closes connection.</long-description>
          <tag name="return" line="250" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="280" package="Default">
        <name>destroy</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::destroy()</full_name>
        <docblock line="280">
          <description>Destroy</description>
          <long-description>Destroys the current session.</long-description>
          <tag name="param" line="280" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="280" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="303" package="Default">
        <name>gc</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::gc()</full_name>
        <docblock line="303">
          <description>Garbage Collector</description>
          <long-description>Deletes expired sessions</long-description>
          <tag name="param" line="303" description="&lt;p&gt;Maximum lifetime of sessions&lt;/p&gt;" type="integer" variable="$maxlifetime">
            <type>integer</type>
          </tag>
          <tag name="return" line="303" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$maxlifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="320" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::lockSession()</full_name>
        <docblock line="320">
          <description>Get lock</description>
          <long-description>Acquires an (emulated) lock.</long-description>
          <tag name="param" line="320" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="320" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::lockSession()" refers="\CodeIgniter\Session\Handlers\BaseHandler::lockSession()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method_lockSession"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="372" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\MemcachedHandler::releaseLock()</full_name>
        <docblock line="372">
          <description>Release lock</description>
          <long-description>Releases a previously acquired lock</long-description>
          <tag name="return" line="372" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()" refers="\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method_releaseLock"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="115" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="115">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="133" package="Default">
        <name>destroyCookie</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::destroyCookie()</full_name>
        <docblock line="133">
          <description>Internal method to force removal of a cookie by the client
when session_destroy() is called.</description>
          <long-description></long-description>
          <tag name="return" line="133" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="157" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lockSession()</full_name>
        <docblock line="157">
          <description>A dummy method allowing drivers with no locking functionality
(databases other than PostgreSQL and MySQL) to act as if they
do acquire a lock.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="170" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()</full_name>
        <docblock line="170">
          <description>Releases the lock, if any.</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\LoggerAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Commands/MigrationsCommand.php" generated-path="Commands.MigrationsCommand.html" hash="d2d61fd8064c55bd0bf8331db0ab163a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="CLI">\CodeIgniter\CLI\CLI</namespace-alias>
    <namespace-alias name="Seeder">\CodeIgniter\Database\Seeder</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <namespace-alias name="Database">\Config\Database</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Commands" line="49" package="Default">
      <extends>\CodeIgniter\Controller</extends>
      <name>MigrationsCommand</name>
      <full_name>\CodeIgniter\Commands\MigrationsCommand</full_name>
      <docblock line="49">
        <description>Class MigrationsCommand.</description>
        <long-description>Migrations controller.</long-description>
        <tag name="package" line="49" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Controller" refers="\CodeIgniter\Controller" link="/classes/CodeIgniter.Controller.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="56" package="Default">
        <name>$runner</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::runner</full_name>
        <default></default>
        <docblock line="56">
          <description>Migration runner.</description>
          <long-description></long-description>
          <tag name="var" line="56" description="" type="\CodeIgniter\Database\MigrationRunner" variable="">
            <type>\CodeIgniter\Database\MigrationRunner</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="57" package="CodeIgniter">
        <name>$helpers</name>
        <full_name>\CodeIgniter\Controller::helpers</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>An array of helpers to be automatically loaded
upon class instantiation.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="66" package="CodeIgniter">
        <name>$request</name>
        <full_name>\CodeIgniter\Controller::request</full_name>
        <default></default>
        <docblock line="66">
          <description>Instance of the main Request object.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="73" package="CodeIgniter">
        <name>$response</name>
        <full_name>\CodeIgniter\Controller::response</full_name>
        <default></default>
        <docblock line="73">
          <description>Instance of the main response object.</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="79" package="CodeIgniter">
        <name>$logger</name>
        <full_name>\CodeIgniter\Controller::logger</full_name>
        <default></default>
        <docblock line="79">
          <description>Instance of logger to use.</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="\CodeIgniter\Log\Logger" variable="">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Commands" line="87" package="CodeIgniter">
        <name>$forceHTTPS</name>
        <full_name>\CodeIgniter\Controller::forceHTTPS</full_name>
        <default>0</default>
        <docblock line="87">
          <description>Whether HTTPS access should be enforced
for all methods in this controller.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="&lt;p&gt;Number of seconds to set HSTS header&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="63" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::__construct()</full_name>
        <docblock line="63">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\CodeIgniter\Controller::__construct()" refers="\CodeIgniter\Controller::__construct()" link="/classes/CodeIgniter.Controller.html#method___construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="73" package="Default">
        <name>index</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::index()</full_name>
        <docblock line="73">
          <description>Provides a list of available commands.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="90" package="Default">
        <name>latest</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::latest()</full_name>
        <docblock line="90">
          <description>Ensures that all migrations have been run.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="112" package="Default">
        <name>version</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::version()</full_name>
        <docblock line="112">
          <description>Migrates the database up or down to get to the specified version.</description>
          <long-description></long-description>
          <tag name="param" line="112" description="" type="integer" variable="$version">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="144" package="Default">
        <name>current</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::current()</full_name>
        <docblock line="144">
          <description>Migrates us up or down to the version specified as $currentVersion
in the migrations config file.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="165" package="Default">
        <name>rollback</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::rollback()</full_name>
        <docblock line="165">
          <description>Runs all of the migrations in reverse order, until they have
all been un-applied.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="186" package="Default">
        <name>refresh</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::refresh()</full_name>
        <docblock line="186">
          <description>Does a rollback followed by a latest to refresh the current state
of the database.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="197" package="Default">
        <name>status</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::status()</full_name>
        <docblock line="197">
          <description>Displays a list of all migrations and whether they've been run or not.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="241" package="Default">
        <name>seed</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::seed()</full_name>
        <docblock line="241">
          <description>Runs the specified Seeder file to populate the database
with some data.</description>
          <long-description></long-description>
          <tag name="param" line="241" description="" type="string" variable="$seedName">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seedName</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Commands" line="273" package="Default">
        <name>showError</name>
        <full_name>\CodeIgniter\Commands\MigrationsCommand::showError()</full_name>
        <docblock line="273">
          <description>Displays a caught exception.</description>
          <long-description></long-description>
          <tag name="param" line="273" description="" type="\Exception" variable="$e">
            <type>\Exception</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$e</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="98" package="CodeIgniter">
        <name>__construct</name>
        <full_name>\CodeIgniter\Controller::__construct()</full_name>
        <docblock line="98">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
          <tag name="param" line="98" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
          <tag name="param" line="98" description="" type="\CodeIgniter\Log\Logger" variable="$logger">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default>null</default>
          <type>\CodeIgniter\Log\Logger</type>
        </argument>
        <inherited_from>\CodeIgniter\Controller</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Commands" line="128" package="CodeIgniter">
        <name>forceHTTPS</name>
        <full_name>\CodeIgniter\Controller::forceHTTPS()</full_name>
        <docblock line="128">
          <description>A convenience method to use when you need to ensure that a single
method is reached only via HTTPS. If it isn't, then a redirect
will happen back to this method and HSTS header will be sent
to have modern browsers transform requests automatically.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="&lt;p&gt;The number of seconds this link should be&#10;                     considered secure for. Only with HSTS header.&#10;                     Default value is 1 year.&lt;/p&gt;" type="integer" variable="$duration">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$duration</name>
          <default>31536000</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Controller</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Commands" line="138" package="CodeIgniter">
        <name>loadHelpers</name>
        <full_name>\CodeIgniter\Controller::loadHelpers()</full_name>
        <docblock line="138">
          <description>Handles "auto-loading" helper files.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\Controller</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/AbstractLogger.php" generated-path="Log.AbstractLogger.html" hash="0668b28e9e695bce1d1e67c2f33d7fbb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="Psr\Log" line="45" package="Default">
      <extends/>
      <implements>\Psr\Log\LoggerInterface</implements>
      <name>AbstractLogger</name>
      <full_name>\Psr\Log\AbstractLogger</full_name>
      <docblock line="45">
        <description>This is a simple Logger implementation that other Loggers can inherit from.</description>
        <long-description>It simply delegates all log-level-specific methods to the `log` method to
reduce boilerplate code that a simple Logger that does the same thing with
messages regardless of the error level has to implement.</long-description>
        <tag name="package" line="45" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="55" package="Default">
        <name>emergency</name>
        <full_name>\Psr\Log\AbstractLogger::emergency()</full_name>
        <docblock line="55">
          <description>System is unusable.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="55" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::emergency()" refers="\Psr\Log\LoggerInterface::emergency()" link="/classes/Psr.Log.LoggerInterface.html#method_emergency"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="70" package="Default">
        <name>alert</name>
        <full_name>\Psr\Log\AbstractLogger::alert()</full_name>
        <docblock line="70">
          <description>Action must be taken immediately.</description>
          <long-description>Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</long-description>
          <tag name="param" line="70" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="70" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="70" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::alert()" refers="\Psr\Log\LoggerInterface::alert()" link="/classes/Psr.Log.LoggerInterface.html#method_alert"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="84" package="Default">
        <name>critical</name>
        <full_name>\Psr\Log\AbstractLogger::critical()</full_name>
        <docblock line="84">
          <description>Critical conditions.</description>
          <long-description>Example: Application component unavailable, unexpected exception.</long-description>
          <tag name="param" line="84" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="84" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="84" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::critical()" refers="\Psr\Log\LoggerInterface::critical()" link="/classes/Psr.Log.LoggerInterface.html#method_critical"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="97" package="Default">
        <name>error</name>
        <full_name>\Psr\Log\AbstractLogger::error()</full_name>
        <docblock line="97">
          <description>Runtime errors that do not require immediate action but should typically
be logged and monitored.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="97" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="97" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::error()" refers="\Psr\Log\LoggerInterface::error()" link="/classes/Psr.Log.LoggerInterface.html#method_error"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="112" package="Default">
        <name>warning</name>
        <full_name>\Psr\Log\AbstractLogger::warning()</full_name>
        <docblock line="112">
          <description>Exceptional occurrences that are not errors.</description>
          <long-description>Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</long-description>
          <tag name="param" line="112" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="112" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="112" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::warning()" refers="\Psr\Log\LoggerInterface::warning()" link="/classes/Psr.Log.LoggerInterface.html#method_warning"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="124" package="Default">
        <name>notice</name>
        <full_name>\Psr\Log\AbstractLogger::notice()</full_name>
        <docblock line="124">
          <description>Normal but significant events.</description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="124" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="124" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::notice()" refers="\Psr\Log\LoggerInterface::notice()" link="/classes/Psr.Log.LoggerInterface.html#method_notice"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="138" package="Default">
        <name>info</name>
        <full_name>\Psr\Log\AbstractLogger::info()</full_name>
        <docblock line="138">
          <description>Interesting events.</description>
          <long-description>Example: User logs in, SQL logs.</long-description>
          <tag name="param" line="138" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="138" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::info()" refers="\Psr\Log\LoggerInterface::info()" link="/classes/Psr.Log.LoggerInterface.html#method_info"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="150" package="Default">
        <name>debug</name>
        <full_name>\Psr\Log\AbstractLogger::debug()</full_name>
        <docblock line="150">
          <description>Detailed debug information.</description>
          <long-description></long-description>
          <tag name="param" line="150" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="150" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="150" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::debug()" refers="\Psr\Log\LoggerInterface::debug()" link="/classes/Psr.Log.LoggerInterface.html#method_debug"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="View/Escaper.php" generated-path="View.Escaper.html" hash="3c4ed12832595c67e15b86d101e99166" package="Default">
    <docblock line="0">
      <description>Zend Framework (http://framework.zend.com/)</description>
      <long-description></long-description>
      <tag name="link" line="0" description="for the canonical source repository" link="http://github.com/zendframework/zf2"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Zend\Escaper" line="15" package="Default">
      <extends/>
      <name>Escaper</name>
      <full_name>\Zend\Escaper\Escaper</full_name>
      <docblock line="15">
        <description>Context specific methods for use in secure output escaping</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="Zend\Escaper" line="27" package="Default">
        <name>$htmlNamedEntityMap</name>
        <full_name>\Zend\Escaper\Escaper::htmlNamedEntityMap</full_name>
        <default>array(34 =&gt; 'quot', 38 =&gt; 'amp', 60 =&gt; 'lt', 62 =&gt; 'gt')</default>
        <docblock line="27">
          <description>Entity Map mapping Unicode codepoints to any available named HTML entities.</description>
          <long-description>While HTML supports far more named entities, the lowest common denominator
has become HTML5's XML Serialisation which is restricted to the those named
entities that XML supports. Using HTML entities would result in this error:
    XML Parsing Error: undefined entity</long-description>
          <tag name="var" line="27" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="40" package="Default">
        <name>$encoding</name>
        <full_name>\Zend\Escaper\Escaper::encoding</full_name>
        <default>'utf-8'</default>
        <docblock line="40">
          <description>Current encoding for escaping. If not UTF-8, we convert strings from this encoding
pre-escaping and back to this encoding post-escaping.</description>
          <long-description></long-description>
          <tag name="var" line="40" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="50" package="Default">
        <name>$htmlSpecialCharsFlags</name>
        <full_name>\Zend\Escaper\Escaper::htmlSpecialCharsFlags</full_name>
        <default>ENT_QUOTES</default>
        <docblock line="50">
          <description>Holds the value of the special flags passed as second parameter to
htmlspecialchars(). We modify these for PHP 5.4 to take advantage
of the new ENT_SUBSTITUTE flag for correctly dealing with invalid
UTF-8 sequences.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="57" package="Default">
        <name>$htmlAttrMatcher</name>
        <full_name>\Zend\Escaper\Escaper::htmlAttrMatcher</full_name>
        <default></default>
        <docblock line="57">
          <description>Static Matcher which escapes characters for HTML Attribute contexts</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="callable" variable="">
            <type>callable</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="64" package="Default">
        <name>$jsMatcher</name>
        <full_name>\Zend\Escaper\Escaper::jsMatcher</full_name>
        <default></default>
        <docblock line="64">
          <description>Static Matcher which escapes characters for Javascript contexts</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="callable" variable="">
            <type>callable</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="71" package="Default">
        <name>$cssMatcher</name>
        <full_name>\Zend\Escaper\Escaper::cssMatcher</full_name>
        <default></default>
        <docblock line="71">
          <description>Static Matcher which escapes characters for CSS Attribute contexts</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="callable" variable="">
            <type>callable</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="Zend\Escaper" line="78" package="Default">
        <name>$supportedEncodings</name>
        <full_name>\Zend\Escaper\Escaper::supportedEncodings</full_name>
        <default>array('iso-8859-1', 'iso8859-1', 'iso-8859-5', 'iso8859-5', 'iso-8859-15', 'iso8859-15', 'utf-8', 'cp866', 'ibm866', '866', 'cp1251', 'windows-1251', 'win-1251', '1251', 'cp1252', 'windows-1252', '1252', 'koi8-r', 'koi8-ru', 'koi8r', 'big5', '950', 'gb2312', '936', 'big5-hkscs', 'shift_jis', 'sjis', 'sjis-win', 'cp932', '932', 'euc-jp', 'eucjp', 'eucjp-win', 'macroman')</default>
        <docblock line="78">
          <description>List of all encoding supported by this class</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="98" package="Default">
        <name>__construct</name>
        <full_name>\Zend\Escaper\Escaper::__construct()</full_name>
        <docblock line="98">
          <description>Constructor: Single parameter allows setting of global encoding for use by
the current object. If PHP 5.4 is detected, additional ENT_SUBSTITUTE flag
is set for htmlspecialchars() calls.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="string" variable="$encoding">
            <type>string</type>
          </tag>
          <tag name="throws" line="98" description="" type="\Zend\Escaper\Exception\InvalidArgumentException">
            <type>\Zend\Escaper\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$encoding</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="134" package="Default">
        <name>getEncoding</name>
        <full_name>\Zend\Escaper\Escaper::getEncoding()</full_name>
        <docblock line="134">
          <description>Return the encoding that all output/input is expected to be encoded in.</description>
          <long-description></long-description>
          <tag name="return" line="134" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="146" package="Default">
        <name>escapeHtml</name>
        <full_name>\Zend\Escaper\Escaper::escapeHtml()</full_name>
        <docblock line="146">
          <description>Escape a string for the HTML Body context where there are very few characters
of special meaning. Internally this will use htmlspecialchars().</description>
          <long-description></long-description>
          <tag name="param" line="146" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="159" package="Default">
        <name>escapeHtmlAttr</name>
        <full_name>\Zend\Escaper\Escaper::escapeHtmlAttr()</full_name>
        <docblock line="159">
          <description>Escape a string for the HTML Attribute context. We use an extended set of characters
to escape that are not covered by htmlspecialchars() to cover cases where an attribute
might be unquoted or quoted illegally (e.g. backticks are valid quotes for IE).</description>
          <long-description></long-description>
          <tag name="param" line="159" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="159" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="182" package="Default">
        <name>escapeJs</name>
        <full_name>\Zend\Escaper\Escaper::escapeJs()</full_name>
        <docblock line="182">
          <description>Escape a string for the Javascript context. This does not use json_encode(). An extended
set of characters are escaped beyond ECMAScript's rules for Javascript literal string
escaping in order to prevent misinterpretation of Javascript as HTML leading to the
injection of special characters and entities. The escaping used should be tolerant
of cases where HTML escaping was not applied on top of Javascript escaping correctly.</description>
          <long-description>Backslash escaping is not used as it still leaves the escaped character as-is and so
is not useful in a HTML context.</long-description>
          <tag name="param" line="182" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="182" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="201" package="Default">
        <name>escapeUrl</name>
        <full_name>\Zend\Escaper\Escaper::escapeUrl()</full_name>
        <docblock line="201">
          <description>Escape a string for the URI or Parameter contexts. This should not be used to escape
an entire URI - only a subcomponent being inserted. The function is a simple proxy
to rawurlencode() which now implements RFC 3986 since PHP 5.3 completely.</description>
          <long-description></long-description>
          <tag name="param" line="201" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="201" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Zend\Escaper" line="213" package="Default">
        <name>escapeCss</name>
        <full_name>\Zend\Escaper\Escaper::escapeCss()</full_name>
        <docblock line="213">
          <description>Escape a string for the CSS context. CSS escaping can be applied to any string being
inserted into CSS and escapes everything except alphanumerics.</description>
          <long-description></long-description>
          <tag name="param" line="213" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="213" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="231" package="Default">
        <name>htmlAttrMatcher</name>
        <full_name>\Zend\Escaper\Escaper::htmlAttrMatcher()</full_name>
        <docblock line="231">
          <description>Callback function for preg_replace_callback that applies HTML Attribute
escaping to all matches.</description>
          <long-description></long-description>
          <tag name="param" line="231" description="" type="array" variable="$matches">
            <type>array</type>
          </tag>
          <tag name="return" line="231" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$matches</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="277" package="Default">
        <name>jsMatcher</name>
        <full_name>\Zend\Escaper\Escaper::jsMatcher()</full_name>
        <docblock line="277">
          <description>Callback function for preg_replace_callback that applies Javascript
escaping to all matches.</description>
          <long-description></long-description>
          <tag name="param" line="277" description="" type="array" variable="$matches">
            <type>array</type>
          </tag>
          <tag name="return" line="277" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$matches</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="294" package="Default">
        <name>cssMatcher</name>
        <full_name>\Zend\Escaper\Escaper::cssMatcher()</full_name>
        <docblock line="294">
          <description>Callback function for preg_replace_callback that applies CSS
escaping to all matches.</description>
          <long-description></long-description>
          <tag name="param" line="294" description="" type="array" variable="$matches">
            <type>array</type>
          </tag>
          <tag name="return" line="294" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$matches</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="314" package="Default">
        <name>toUtf8</name>
        <full_name>\Zend\Escaper\Escaper::toUtf8()</full_name>
        <docblock line="314">
          <description>Converts a string to UTF-8 from the base encoding. The base encoding is set via this
class' constructor.</description>
          <long-description></long-description>
          <tag name="param" line="314" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="throws" line="314" description="" type="\Zend\Escaper\Exception\RuntimeException">
            <type>\Zend\Escaper\Exception\RuntimeException</type>
          </tag>
          <tag name="return" line="314" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="337" package="Default">
        <name>fromUtf8</name>
        <full_name>\Zend\Escaper\Escaper::fromUtf8()</full_name>
        <docblock line="337">
          <description>Converts a string from UTF-8 to the base encoding. The base encoding is set via this
class' constructor.</description>
          <long-description></long-description>
          <tag name="param" line="337" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="337" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="352" package="Default">
        <name>isUtf8</name>
        <full_name>\Zend\Escaper\Escaper::isUtf8()</full_name>
        <docblock line="352">
          <description>Checks if a given string appears to be valid UTF-8 or not.</description>
          <long-description></long-description>
          <tag name="param" line="352" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="return" line="352" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Zend\Escaper" line="367" package="Default">
        <name>convertEncoding</name>
        <full_name>\Zend\Escaper\Escaper::convertEncoding()</full_name>
        <docblock line="367">
          <description>Encoding conversion helper which wraps iconv and mbstring where they exist or throws
and exception where neither is available.</description>
          <long-description></long-description>
          <tag name="param" line="367" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="param" line="367" description="" type="string" variable="$to">
            <type>string</type>
          </tag>
          <tag name="param" line="367" description="" type="array|string" variable="$from">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="throws" line="367" description="" type="\Zend\Escaper\Exception\RuntimeException">
            <type>\Zend\Escaper\Exception\RuntimeException</type>
          </tag>
          <tag name="return" line="367" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>array|string</type>
        </argument>
      </method>
    </class>
    <source>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</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Timers.php" generated-path="Debug.Toolbar.Collectors.Timers.html" hash="f8b9857b6472ba31b4f623cff29702e7" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="44" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Timers</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Timers</full_name>
      <docblock line="44">
        <description>Timers collector</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="52" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Timers::hasTimeline</full_name>
        <default>true</default>
        <docblock line="52">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="60" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Timers::hasTabContent</full_name>
        <default>false</default>
        <docblock line="60">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="68" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Timers::title</full_name>
        <default>'Timers'</default>
        <docblock line="68">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="68" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="78" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Timers::formatTimelineData()</full_name>
        <docblock line="78">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="78" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_formatTimelineData"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVlFv2zYQfrZ/xSEIILtQ7W4o+pAuXRVbiYXZliHLzYI2KGiJtrjKpEBSSYOh/313lOQk7cMGrEKQhOTdd/fdHe/42+9VUYFkB24qlnGYqJxHeyks15+mfFvvP6VKlVumP01UWfLMKm3e9vvjFy/68OKpNC5pJ5CgKi7BqFojHKuqUmTMCiUh53e8VNWBSws7jRbvlf4CO6VhNVu16mkhDGRKWhLCfzUvOTM8h1rmXIMtOCyiFOYi49JwGOBi2KpOVPWgxb6wMMiG8OurX17DS/rzxocLLawwBYqU9WErGETSWGFry0HtIOVZIVWp9g8t0orrgzCGfEYXCq759gH2mqFXuY+uc6eWFUzvuQ9WAZMPUHFtUEFtLRNSyD0w5FERJAlb4mXUzt4zjVGROTBjVCYYQkKuspqi0oRpJ0puYEBUT9atxsnQ2ck5KwlQSBeJ7hTuhS1UbTFaxmqREYyPQllZ5+RJd1yKg2iNkLoLliE8hK4NUiGHfTioXOzoL3f8qnpbYvB8yAWhbzFqPhjadDnwic0Yk2h46ZxDEIEEHOlHH50YGaoouLYNl6Gd+0IdnvMRzqtdrSUa5k4tVxg+Z/cvLELaIY0d1qS6J45YM7kgaubsWEoY6K26445WUxlSWZE18XcZqR4z3R6ZgpUlbHkbPjQuJKHRbsdMkxvGYj0IVkKltLP7PeNR58cshHV8mV4HSQjRGlZJ/CGahlM4Cda4PvHhOkpn8SYFlEiCZXoD8SUEyxv4I1pOfQj/XCXheg1xQmjRYjWPQtyOlpP5Zhotr+ACVZcxXooIbwPiprGz2aJF4ZrwFmEymeEyuIjmUXrjE9ZllC4J+TJOIIBVkKTRZDMPElhtklW8DtGJKSIvo+VlgobCRbhMR2gY9yD8gAtYz4L5nKy5q79BGgk5CpN4dZNEV7MUZvF8GuLmRYj+BRfzsLGG7CbzIFr4MA0WwVXotGIEciRJsnETrmch7ZLVAH8maRQvic8kXqYJLn2km6RH7etoHfoQJNGaInOZxAvHlKKLSrHDQdVl2ABR5J8nCEVovVmHR0yYhsEc4TBby+8T2iX5PTbPL2zPwX3P2yK8ZzVeQA0/HMKU32H7YQcn9VimTup/dzMYFNZWZ+PxNhN2lLHx0Jlp723jTCtBLbvp2COl9+NWxIyxoHpP+m2rL79A97X6GXISDadRpho6Bm8Q7+Q+4HWnW/Z69Gr0yh27NudM4nLc72MDejZ81lzfodUnwyYV2JFoOrRzyOllJTbS7oh/xbmRG7jAkXEcV/2/+z1C6CHEdcHxiurm8h+BoGAGcmYZ7jMLGZNOGJsAtryqZA+uC7jLTYYwAHi5UcJJvb9jGrY4I2k17vcqrSyiosopwnbycA5W1xzJ/JsvkvPctcXWtpM9TkSJY8WyLfUgbFj/2Qu2nbQI57BjpXnmCDVKDwuo5N5xVB2j50zAxjRdmN4JJCD3pouIbZ4HMEsX8+/8oXEh9z965GyhJ16TNs85M375E74nrCaFKHNw5YE92+AAxKU4VCV3DxDHEhlpbnHMNEy6XFEpOAx8mxyYJZ/plZIprWn21AYv+hOqLcRBfOX5D2R3tcyase6wunqYoonB8AyY1pRiLNHeqavAc/h4S/HonW65zIoDwyfSOXSX4eyMnNQDqqXhW5LS6t6gwKP0y3d7bpvADt4MHRSa5iwrYNBIY7GfukSev4NTIXdqiDLkQU/sUKY5wuxYZVn5mX/lWU0MvKErQyGbMm4d/nhLLtOy55GmR6h1hk+73AywAD5rjlWc8YH32fPBA/zlLAyHPilRb/CwY1RKYlacclMV3uMxTlqNR/R1Hn9sN28fpfJau6eN91QKu4F3i43zuRLp3FL0vhGPNn2ODW5++4nF+K3/D2jgakE=</source>
  </file>
  <file path="Helpers/url_helper.php" generated-path="Helpers.url_helper.html" hash="4b92d0f8206d03e9ea4372b32dfce4a0" package="CodeIgniter">
    <docblock line="0">
      <description>CodeIgniter</description>
      <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
      <tag name="package" line="0" description="CodeIgniter"/>
      <tag name="author" line="0" description="CodeIgniter Dev Team"/>
      <tag name="copyright" line="0" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
      <tag name="license" line="0" description="MIT License" link="http://opensource.org/licenses/MIT"/>
      <tag name="link" line="0" description="http://codeigniter.com" link="http://codeigniter.com"/>
      <tag name="since" line="0" description="Version 3.0.0"/>
      <tag name="filesource" line="0" description=""/>
    </docblock>
    <function namespace="" line="50" package="CodeIgniter">
      <name>site_url</name>
      <full_name>\site_url()</full_name>
      <docblock line="50">
        <description>Return a site URL to use in views</description>
        <long-description></long-description>
        <tag name="package" line="50" description="CodeIgniter"/>
        <tag name="param" line="50" description="" type="string" variable="$path">
          <type>string</type>
        </tag>
        <tag name="param" line="50" description="" type="string|null" variable="$scheme">
          <type>string</type>
          <type>null</type>
        </tag>
        <tag name="return" line="50" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$path</name>
        <default>''</default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$scheme</name>
        <default>null</default>
        <type>string|null</type>
      </argument>
    </function>
    <function namespace="" line="86" package="CodeIgniter">
      <name>base_url</name>
      <full_name>\base_url()</full_name>
      <docblock line="86">
        <description>Return the base URL to use in views</description>
        <long-description></long-description>
        <tag name="package" line="86" description="CodeIgniter"/>
        <tag name="param" line="86" description="" type="string" variable="$path">
          <type>string</type>
        </tag>
        <tag name="param" line="86" description="" type="string" variable="$scheme">
          <type>string</type>
        </tag>
        <tag name="return" line="86" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$path</name>
        <default>''</default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$scheme</name>
        <default>null</default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="" line="117" package="CodeIgniter">
      <name>current_url</name>
      <full_name>\current_url()</full_name>
      <docblock line="117">
        <description>Current URL</description>
        <long-description>Returns the full URL (including segments) of the page where this
function is placed</long-description>
        <tag name="package" line="117" description="CodeIgniter"/>
        <tag name="return" line="117" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$returnObject</name>
        <default>false</default>
        <type>\bool</type>
      </argument>
    </function>
    <function namespace="" line="135" package="CodeIgniter">
      <name>uri_string</name>
      <full_name>\uri_string()</full_name>
      <docblock line="135">
        <description>URL String</description>
        <long-description>Returns the URI segments.</long-description>
        <tag name="package" line="135" description="CodeIgniter"/>
        <tag name="return" line="135" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
    </function>
    <function namespace="" line="152" package="CodeIgniter">
      <name>index_page</name>
      <full_name>\index_page()</full_name>
      <docblock line="152">
        <description>Index page</description>
        <long-description>Returns the "index_page" from your config file</long-description>
        <tag name="package" line="152" description="CodeIgniter"/>
        <tag name="return" line="152" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
    </function>
    <parse_markers>
      <error line="117" code="PPC:ERR-50015">Argument $returnObject is missing from the Docblock of current_url</error>
    </parse_markers>
    <source>eJzdV1tv2zYUfrZ/xWlQIFKhWN0Fe0iXdIqt1MIcy5DkZgECBLJE21xlUSOpuMHW/75zKMlJ3BTLgG4PNQInPJfv3A+Zn99W66rfd1+96sMrGIqcBauSaybxSBSvBFGxEpSoZcYgraqCZ6nmooSc3bJCVBtWaljKdMO2Qn6ApZAwG89a9WTNFWSi1CSEf0pWsFSxHOoyZxL0msFFkMCEZ6xUDCw82K3qUFR3kq/WGqzMhu9ff/cjHNGvnxw4k1xztUaRot4seApBqTTXtWYglpCwbF2KQqzuWqQZkxuuFPmMLqyZZIs7WMkUvcoddJ0ZtWydyhVzQAtIyzuomFSoIBY65SUvV5BiHBVBkrCmuJRY6m0qMStlDqlSIuMpQkIuspqy0qRpyQumwKJQD+JW48A2dnKWFgTIS5OJjgtbrtei1pgtpSXPCMZBoayoc/KkYxd8w1sjpG6SpQgPoWuFoZDDDmxEzpf0m5n4qnpRYPIcyDmhLzBrDigimho4FI2LRVSsMM4hCMcATND3PhoxMlRRcnWbLkWU7VpsHsfDjVfLWpZomBm1XGD6jN3fWaaJQhpLURRiSzFiz+ScQlPHu1bCRC/ELTNhNZ1RCs2zJv+mItV9pVuWWqdFAQvWpg+N85LQiNpFJskNpbEfeFpAJaSxux/xoPNj7EMcnieXXuRDEMMsCt8HI38EB16M5wMHLoNkHM4TQInImyZXEJ6DN72CX4PpyAH/t1nkxzGEEaEFF7NJ4CM5mA4n81EwfQdnqDoNcSgCnAbETUJjs0UL/JjwLvxoOMajdxZMguTKIazzIJkS8nkYgQczL0qC4XziRTCbR7Mw9tGJESJPg+l5hIb8C3+aDNAw0sB/jweIx95kQtbM6M8xjIgchWE4u4qCd+MExuFk5CPxzEf/vLOJ31jD6IYTL7hwYORdeO98oxUikAmSJBs34XLsE5WsevgzTIJwSvEMw2kS4dHBcKNkp30ZxL4DXhTElJnzKLwwkVJ2USk0OKg69RsgyvzjAqEIneexv8OEke9NEA6rNd0vaFfkX6o0+5CuWO/xRoRf0hpnTz4kw4jd4s5JN4a/683eV9hfYK21ro5dd5FxPchS1zY22knttUzaz816Hgi5cluucrF7eg+Wa6tafuj0MoyBNzEMMtG4r3BMWO89DjPN0A+D14PXhm6WmLGBR7ff7/MlWC9wpEuznW7YR1wmyjpUiHZTy+LQtvt/9nt0rfRQP2Iahx9XKPFhHk3aFUWb75azrTJS5gszj3cJ0GrCNWA+L6tUrz9n/lXWOMQvVbZmG0bsRkQ2thoZIrn9XucndP5ZLb6BhhM4PHQ6ky0gEgnfPt4hYTy9l7iXlnxFTLaF66E5XXtVZdlv+sRHbGS+ALap9J3Vih+dLvDSw7BtFOm97XR3LXQ9TpLZ9TwKnlY4hqwQJbMeqcRM3mJh1fGxZH/UeFFY9tFpLXnjh+uCl9Ouy9lHqLCRkdaUbM8xIzFDAZtMUYi9LicS4948IenAoXtoD/BrYETfoNKnLvijU8X0DKmW4TXePLLcpPeBuU4rNoydwA62LWhbMpvkkfepj0zXPfoKny92MxXhy91MlwNJ/Jt+/kIrP+zif+jgzqdvvYO/uWbKainxUfhEPw0bDvXRbo01PaaaVxHtOWoy6/4NqNiKnpjK7p4pNOT49MLHrXkKGZBd09DTqEgzlu+vyd7TTfbAV2shBG7ZRjxsXmsnsEwLxeymo9qU7omcnICWNWva5Vl1bxqlq8yzVNrS/ceVQ0M3jVd7haOaxLsEflY3HIddnQbPzPy9LWtvcNs0PysvR6erdnDs/6m7ze1wQ024l6PgwRX0RI4O7hUP8F8x/M/hDp8Z0C4penY8M3H3OJb9vE3X9e1nF1ybsr8BjKiEeg==</source>
  </file>
  <file path="HTTP/IncomingRequest.php" generated-path="HTTP.IncomingRequest.html" hash="18f21c495d2d72f4daa228f0716790e4" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="FileCollection">\CodeIgniter\HTTP\Files\FileCollection</namespace-alias>
    <namespace-alias name="UploadedFile">\CodeIgniter\HTTP\Files\UploadedFile</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter\HTTPLite">
      <extends>\CodeIgniter\HTTP\Request</extends>
      <name>IncomingRequest</name>
      <full_name>\CodeIgniter\HTTP\IncomingRequest</full_name>
      <docblock line="67">
        <description>Class IncomingRequest</description>
        <long-description>Represents an incoming, getServer-side HTTP request.

Per the HTTP specification, this interface includes properties for
each of the following:

- Protocol version
- HTTP method
- URI
- Headers
- Message body

Additionally, it encapsulates all data as it has arrived to the
application from the CGI and/or PHP environment, including:

- The values represented in $_SERVER.
- Any cookies provided (generally via $_COOKIE)
- Query string arguments (generally via $_GET, or as parsed via parse_str())
- Upload files, if any (as represented by $_FILES)
- Deserialized body binds (generally from $_POST)</long-description>
        <tag name="package" line="67" description="CodeIgniter\HTTPLite"/>
        <tag name="inherited_from" description="\CodeIgniter\HTTP\Request" refers="\CodeIgniter\HTTP\Request" link="/classes/CodeIgniter.HTTP.Request.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="77" package="CodeIgniter\HTTPLite">
        <name>$enableCSRF</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::enableCSRF</full_name>
        <default>false</default>
        <docblock line="77">
          <description>Enable CSRF flag</description>
          <long-description>Enables a CSRF cookie token to be set.
Set automatically based on Config setting.</long-description>
          <tag name="var" line="77" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\HTTP" line="84" package="CodeIgniter\HTTPLite">
        <name>$uri</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::uri</full_name>
        <default></default>
        <docblock line="84">
          <description>A \CodeIgniter\HTTPLite\URI instance.</description>
          <long-description></long-description>
          <tag name="var" line="84" description="" type="\CodeIgniter\HTTP\URI" variable="">
            <type>\CodeIgniter\HTTP\URI</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="91" package="CodeIgniter\HTTPLite">
        <name>$files</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::files</full_name>
        <default></default>
        <docblock line="91">
          <description>File collection</description>
          <long-description></long-description>
          <tag name="var" line="91" description="" type="\CodeIgniter\HTTP\Files\FileCollection" variable="">
            <type>\CodeIgniter\HTTP\Files\FileCollection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="98" package="CodeIgniter\HTTPLite">
        <name>$negotiate</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::negotiate</full_name>
        <default></default>
        <docblock line="98">
          <description>Negotiator</description>
          <long-description></long-description>
          <tag name="var" line="98" description="" type="\CodeIgniter\HTTP\Negotiate" variable="">
            <type>\CodeIgniter\HTTP\Negotiate</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="51" package="Default">
        <name>$ipAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::ipAddress</full_name>
        <default>''</default>
        <docblock line="51">
          <description>IP address of the current user.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="58" package="Default">
        <name>$proxyIPs</name>
        <full_name>\CodeIgniter\HTTP\Request::proxyIPs</full_name>
        <default></default>
        <docblock line="58">
          <description>Proxy IPs</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="109" package="CodeIgniter\HTTPLite">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::__construct()</full_name>
        <docblock line="109">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="\CodeIgniter\HTTP\type" variable="$config">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="109" description="" type="\CodeIgniter\HTTP\type" variable="$uri">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="109" description="" type="\CodeIgniter\HTTP\type" variable="$body">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\Request::__construct()" refers="\CodeIgniter\HTTP\Request::__construct()" link="/classes/CodeIgniter.HTTP.Request.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$body</name>
          <default>'php://input'</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="135" package="CodeIgniter\HTTPLite">
        <name>isCLI</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::isCLI()</full_name>
        <docblock line="135">
          <description>Determines if this request was made from the command line (CLI).</description>
          <long-description></long-description>
          <tag name="return" line="135" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="147" package="CodeIgniter\HTTPLite">
        <name>isAJAX</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::isAJAX()</full_name>
        <docblock line="147">
          <description>Test to see if a request contains the HTTP_X_REQUESTED_WITH header.</description>
          <long-description></long-description>
          <tag name="return" line="147" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="161" package="CodeIgniter\HTTPLite">
        <name>isSecure</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::isSecure()</full_name>
        <docblock line="161">
          <description>Attempts to detect if the current connection is secure through
a few different methods.</description>
          <long-description></long-description>
          <tag name="return" line="161" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="191" package="CodeIgniter\HTTPLite">
        <name>getVar</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getVar()</full_name>
        <docblock line="191">
          <description>Fetch an item from the $_REQUEST object. This is the simplest way
to grab data from the request object and can be used in lieu of the
other get* methods in most cases.</description>
          <long-description></long-description>
          <tag name="param" line="191" description="" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="191" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="191" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="213" package="CodeIgniter\HTTPLite">
        <name>getJSON</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getJSON()</full_name>
        <docblock line="213">
          <description>A convenience method that grabs the raw input stream and decodes
the JSON into an array.</description>
          <long-description>If $assoc == true, then all objects in the response will be converted
to associative arrays.</long-description>
          <tag name="param" line="213" description="&lt;p&gt;Whether to return objects as associative arrays&lt;/p&gt;" type="boolean" variable="$assoc">
            <type>boolean</type>
          </tag>
          <tag name="param" line="213" description="&lt;p&gt;How many levels deep to decode&lt;/p&gt;" type="integer" variable="$depth">
            <type>integer</type>
          </tag>
          <tag name="param" line="213" description="&lt;p&gt;Bitmask of options&lt;/p&gt;" type="integer" variable="$options">
            <type>integer</type>
          </tag>
          <tag name="see" line="213" description="" link="http://php.net/manual/en/function.json-decode.php"/>
          <tag name="return" line="213" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$assoc</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$depth</name>
          <default>512</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="228" package="CodeIgniter\HTTPLite">
        <name>getGet</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getGet()</full_name>
        <docblock line="228">
          <description>Fetch an item from GET data.</description>
          <long-description></long-description>
          <tag name="param" line="228" description="&lt;p&gt;Index for item to fetch from $_GET.&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="228" description="&lt;p&gt;A filter name to apply.&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="228" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="243" package="CodeIgniter\HTTPLite">
        <name>getPost</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getPost()</full_name>
        <docblock line="243">
          <description>Fetch an item from POST.</description>
          <long-description></long-description>
          <tag name="param" line="243" description="&lt;p&gt;Index for item to fetch from $_POST.&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="243" description="&lt;p&gt;A filter name to apply&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="243" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="258" package="CodeIgniter\HTTPLite">
        <name>getPostGet</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getPostGet()</full_name>
        <docblock line="258">
          <description>Fetch an item from POST data with fallback to GET.</description>
          <long-description></long-description>
          <tag name="param" line="258" description="&lt;p&gt;Index for item to fetch from $_POST or $_GET&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="258" description="&lt;p&gt;A filter name to apply&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="258" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="278" package="CodeIgniter\HTTPLite">
        <name>getGetPost</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getGetPost()</full_name>
        <docblock line="278">
          <description>Fetch an item from GET data with fallback to POST.</description>
          <long-description></long-description>
          <tag name="param" line="278" description="&lt;p&gt;Index for item to be fetched from $_GET or $_POST&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="278" description="&lt;p&gt;A filter name to apply&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="278" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="298" package="CodeIgniter\HTTPLite">
        <name>getCookie</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getCookie()</full_name>
        <docblock line="298">
          <description>Fetch an item from the COOKIE array.</description>
          <long-description></long-description>
          <tag name="param" line="298" description="&lt;p&gt;Index for item to be fetched from $_COOKIE&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="298" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="298" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="310" package="CodeIgniter\HTTPLite">
        <name>getUserAgent</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getUserAgent()</full_name>
        <docblock line="310">
          <description>Fetch the user agent string</description>
          <long-description></long-description>
          <tag name="param" line="310" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="323" package="CodeIgniter\HTTPLite">
        <name>getFiles</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getFiles()</full_name>
        <docblock line="323">
          <description>Returns an array of all files that have been uploaded with this
request. Each file is represented by an UploadedFile instance.</description>
          <long-description></long-description>
          <tag name="return" line="323" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter\HTTPLite">
        <name>getFile</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::getFile()</full_name>
        <docblock line="344">
          <description>Retrieves a single file by the name of the input field used
to upload it.</description>
          <long-description></long-description>
          <tag name="param" line="344" description="" type="string" variable="$fileID">
            <type>string</type>
          </tag>
          <tag name="return" line="344" description="" type="\CodeIgniter\HTTP\Files\UploadedFile|null">
            <type>\CodeIgniter\HTTP\Files\UploadedFile</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fileID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="370" package="CodeIgniter\HTTPLite">
        <name>detectURI</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::detectURI()</full_name>
        <docblock line="370">
          <description>Sets up our URI object based on the information we have. This is
either provided by the user in the baseURL Config setting, or
determined from the environment as needed.</description>
          <long-description></long-description>
          <tag name="param" line="370" description="" type="" variable="$protocol"/>
          <tag name="param" line="370" description="" type="" variable="$baseURL"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$protocol</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$baseURL</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="409" package="CodeIgniter\HTTPLite">
        <name>detectPath</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::detectPath()</full_name>
        <docblock line="409">
          <description>Based on the URIProtocol Config setting, will attempt to
detect the path portion of the current URI.</description>
          <long-description></long-description>
          <tag name="param" line="409" description="" type="" variable="$protocol"/>
          <tag name="return" line="409" description="" type="string|string">
            <type>string</type>
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$protocol</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="447" package="CodeIgniter\HTTPLite">
        <name>negotiate</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::negotiate()</full_name>
        <docblock line="447">
          <description>Provides a convenient way to work with the Negotiate class
for content negotiation.</description>
          <long-description></long-description>
          <tag name="param" line="447" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="447" description="" type="array" variable="$supported">
            <type>array</type>
          </tag>
          <tag name="param" line="447" description="" type="boolean" variable="$strictMatch">
            <type>boolean</type>
          </tag>
          <tag name="return" line="447" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$supported</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$strictMatch</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="481" package="CodeIgniter\HTTPLite">
        <name>parseRequestURI</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::parseRequestURI()</full_name>
        <docblock line="481">
          <description>Will parse the REQUEST_URI and automatically detect the URI from it,
fixing the query string if necessary.</description>
          <long-description></long-description>
          <tag name="return" line="481" description="The URI it found." type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="538" package="CodeIgniter\HTTPLite">
        <name>parseQueryString</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::parseQueryString()</full_name>
        <docblock line="538">
          <description>Parse QUERY_STRING</description>
          <long-description>Will parse QUERY_STRING and automatically detect the URI from it.</long-description>
          <tag name="return" line="538" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="569" package="CodeIgniter\HTTPLite">
        <name>removeRelativeDirectory</name>
        <full_name>\CodeIgniter\HTTP\IncomingRequest::removeRelativeDirectory()</full_name>
        <docblock line="569">
          <description>Remove relative directory (.</description>
          <long-description>./) and multi slashes (///)

Do some final cleaning of the URI and return it, currently only used in self::_parse_request_uri()</long-description>
          <tag name="param" line="569" description="" type="string" variable="$uri">
            <type>string</type>
          </tag>
          <tag name="return" line="569" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="68" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Request::__construct()</full_name>
        <docblock line="68">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$config">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$uri">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="80" package="Default">
        <name>getIPAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::getIPAddress()</full_name>
        <docblock line="80">
          <description>Gets the user's IP address.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="IP address" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" refers="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getIPAddress"/>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="218" package="Default">
        <name>isValidIP</name>
        <full_name>\CodeIgniter\HTTP\Request::isValidIP()</full_name>
        <docblock line="218">
          <description>Validate an IP address</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;IP Address&lt;/p&gt;" type="" variable="$ip"/>
          <tag name="param" line="218" description="&lt;p&gt;IP protocol: 'ipv4' or 'ipv6'&lt;/p&gt;" type="string" variable="$which">
            <type>string</type>
          </tag>
          <tag name="return" line="218" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::isValidIP()" refers="\CodeIgniter\HTTP\RequestInterface::isValidIP()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_isValidIP"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$which</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="246" package="Default">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\Request::getMethod()</full_name>
        <docblock line="246">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="246" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getMethod()" refers="\CodeIgniter\HTTP\RequestInterface::getMethod()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="262" package="Default">
        <name>getServer</name>
        <full_name>\CodeIgniter\HTTP\Request::getServer()</full_name>
        <docblock line="262">
          <description>Fetch an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag name="param" line="262" description="&lt;p&gt;Index for item to be fetched from $_SERVER&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="262" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="262" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getServer()" refers="\CodeIgniter\HTTP\RequestInterface::getServer()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getServer"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="276" package="Default">
        <name>getEnv</name>
        <full_name>\CodeIgniter\HTTP\Request::getEnv()</full_name>
        <docblock line="276">
          <description>Fetch an item from the $_ENV array.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="&lt;p&gt;Index for item to be fetched from $_ENV&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="299" package="Default">
        <name>fetchGlobal</name>
        <full_name>\CodeIgniter\HTTP\Request::fetchGlobal()</full_name>
        <docblock line="299">
          <description>Fetches one or more items from a global, like cookies, get, post, etc.</description>
          <long-description>Can optionally filter the input when you retrieve it by passing in
a filter.

If $type is an array, it must conform to the input allowed by the
filter_input_array method.

http://php.net/manual/en/filter.filters.sanitize.php</long-description>
          <tag name="param" line="299" description="" type="" variable="$type"/>
          <tag name="param" line="299" description="" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="299" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="299" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Request</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Test/CIUnitTestCase.php" generated-path="Test.CIUnitTestCase.html" hash="a4301020e5b6542c8c59912ec41dc156" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="PHPUnit_Framework_TestCase">\PHPUnit_Framework_TestCase</namespace-alias>
    <namespace-alias name="TestLogger">\CodeIgniter\Log\TestLogger</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Test" line="45" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CIUnitTestCase</name>
      <full_name>\CodeIgniter\Test\CIUnitTestCase</full_name>
      <docblock line="45">
        <description>PHPunit test case.</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="56" package="Default">
        <name>assertLogged</name>
        <full_name>\CodeIgniter\Test\CIUnitTestCase::assertLogged()</full_name>
        <docblock line="56">
          <description>Custom function to hook into CodeIgniter's Logging mechanism
to check if certain messages were logged during code execution.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="string" variable="$level">
            <type>string</type>
          </tag>
          <tag name="param" line="56" description="" type="null" variable="$expectedMessage">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$expectedMessage</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="55" package="Default">
        <name>getPrivateMethodInvoker</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateMethodInvoker()</full_name>
        <docblock line="55">
          <description>Find a private method invoker.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;method name&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="CodeIgniter\Test" line="74" package="Default">
        <name>getAccessibleRefProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getAccessibleRefProperty()</full_name>
        <docblock line="74">
          <description>Find an accessible property.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$obj">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$property">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="return" line="74" description="" type="\CodeIgniter\Test\type">
            <type>\CodeIgniter\Test\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="98" package="Default">
        <name>setPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::setPrivateProperty()</full_name>
        <docblock line="98">
          <description>Set a private property.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="111" package="Default">
        <name>getPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateProperty()</full_name>
        <docblock line="111">
          <description>Retrieve a private property.</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="value" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJytVW1v4zYM/mz/CqIosKRwk9tt2IfeXs5NnEaYYwe2067AgINjK7FWxzIkub1iuP8+Unba9Ibt0xUFYlHkQz6U9PDn39qqhSY/cN3mBYeZLDnbN8Jw9WfGtfngutOLCxcuTndwSRa/AdnyBrTsFIbmbVuLIjdCNlDyR17L9sAbAzuF6E9SPcBOKlgv10N4VgkNhWwMOeGn4jXPNS+ha0quwFQcViyDUBS80RxGuBgPoTPZPiuxrwyMijG8f/f9j3BJPz95cK2EEbpCl7o7bEUOrNFGmM5wkDvIeFE1spb75wFpzdVBaE01YwkVV3z7DHuVY1Wlh6VzG1ZUudpzD4yEvHmGliuNAXJrctGIZg858mgJkpwN8dJyZ55yhV1pSsi1loXIERJKWXTUlb5NO1FzDSOiepYOEWdjm6fkeU2AorGdOO7CkzCV7Ax2SxslCoLx0Kmou5IqOW7X4iCGJBRum6UJD6E7jVSoYA8OshQ7+uWWX9tta2yeB6Ug9C12zQNNRnsGHrGZ4iFqXtviEEQgAUv6tUbrRolaaq4Z2qXJ8lTJw1s+wla161SDibkNKyW2z+b9ixeGLBSxk3Utn4gj3plSEDV99XKVsNFb+cgtrf5mNNKIou+/PZH29aSHLV3ldQ1bPrQPk4uG0Mh6ZKaoDG3wPoi8hlYqm/drxpNjHcsA0niR3flJACyFdRLfsnkwhzM/xfWZB3csW8abDNAj8aPsHuIF+NE9/M6iuQfBH+skSFOIE0Jjq3XIAjSzaBZu5iy6gWsMjWJ8FAxfA+Jmsc05oLEgJbxVkMyWuPSvWciye4+wFiyLCHkRJ+DD2k8yNtuEfgLrTbKO0wCLmCNyxKJFgomCVRBlE0yMNghucQHp0g9Dymaf/gZpJFQozOL1fcJulhks43AeoPE6wPr86zDosyG7WeizlQdzf+XfBDYqRiBLkjz7MuFuGZCVsvr4P8tYHBGfWRxlCS49pJtkL9F3LA088BOWUmcWSbyyTKm7GBRbHAyNgh6IOv/2gNCF1ps0eMGEeeCHCIenFX19oMdD/ohC+ZDvufNWEeFj3uHbU6dmmPNH1Jz8YPdf7qbzDfQLRpUx7dV0ui2EmRT5dGxzDC/VGTZJn3t5nki1nw67eoq3xzkR1yG0eTjGFchB9BwmhezL1/hMuHOLj5ne0A+Td5N31m5FzObA5dR1UV5I5TcY/Wlx1P5PNExmKO8f7P7pmAnl3o4a/N1z9TpwEKNDDzC4BwWGTix+UaOcwowR/hEU+GecIqX+n7zu365DmRO+q7mVzSWvW5vPoYQOjZVOG9SnXdcUvXJKqKR8QFnAr5OSv9NAxZIWHfBAcpSugwVAt6LiBUbgzOCKxgN6aI23RcMTDheoiSSOgU71SlZS7bzoKN+EMCwOXjEkAKTB6HVe0zQ93Wg6lCiAc/65RS68XPU5yGXqOlbFi1ca2C+sxba3HL3B9P4FAb9Y8LHrYL+cc5wyXW3Q+HpAV1elKPFz9F8QY2qpc06ie/lrnztTHR8NYLjtfKGmTy+/wZ/rfnH/ATfEweg=</source>
  </file>
  <file path="HTTP/Response.php" generated-path="HTTP.Response.html" hash="d5f0f0f22493c6b7cecf7109eb437997" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="App">\Config\App</namespace-alias>
    <namespace-alias name="ContentSecurityPolicy">\Config\ContentSecurityPolicy</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="46" package="Default">
      <extends>\Exception</extends>
      <name>RedirectException</name>
      <full_name>\CodeIgniter\HTTP\RedirectException</full_name>
      <docblock line="46">
        <description>Redirect exception</description>
        <long-description></long-description>
        <tag name="package" line="46" description="Default"/>
      </docblock>
    </class>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter\HTTP">
      <extends>\CodeIgniter\HTTP\Message</extends>
      <implements>\CodeIgniter\HTTP\ResponseInterface</implements>
      <name>Response</name>
      <full_name>\CodeIgniter\HTTP\Response</full_name>
      <docblock line="61">
        <description>Representation of an outgoing, getServer-side response.</description>
        <long-description>Per the HTTP specification, this interface includes properties for
each of the following:

- Protocol version
- Status code and reason phrase
- Headers
- Message body</long-description>
        <tag name="package" line="61" description="CodeIgniter\HTTP"/>
        <tag name="inherited_from" description="\CodeIgniter\HTTP\Message" refers="\CodeIgniter\HTTP\Message" link="/classes/CodeIgniter.HTTP.Message.html"/>
      </docblock>
      <property static="true" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter\HTTP">
        <name>$statusCodes</name>
        <full_name>\CodeIgniter\HTTP\Response::statusCodes</full_name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocols', 102 =&gt; 'Processing', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 207 =&gt; 'Multi-Status', 208 =&gt; 'Already Reported', 226 =&gt; 'IM Used', 300 =&gt; 'Multiple Choices', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 306 =&gt; 'Switch Proxy', 307 =&gt; 'Temporary Redirect', 308 =&gt; 'Permanent Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 413 =&gt; 'Request Entity Too Large', 414 =&gt; 'Request-URI Too Long', 415 =&gt; 'Unsupported Media Type', 416 =&gt; 'Requested Range Not Satisfiable', 417 =&gt; 'Expectation Failed', 418 =&gt; "I'm a teapot", 421 =&gt; 'Misdirected Request', 422 =&gt; 'Unprocessable Entity', 423 =&gt; 'Locked', 424 =&gt; 'Failed Dependency', 426 =&gt; 'Upgrade Required', 428 =&gt; 'Precondition Required', 429 =&gt; 'Too Many Requests', 431 =&gt; 'Request Header Fields Too Large', 451 =&gt; 'Unavailable For Legal Reasons', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported', 506 =&gt; 'Variant Also Negotiates', 507 =&gt; 'Insufficient Storage', 508 =&gt; 'Loop Detected', 510 =&gt; 'Not Extended', 511 =&gt; 'Network Authentication Required')</default>
        <docblock line="67">
          <description>HTTP status codes</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="147" package="CodeIgniter\HTTP">
        <name>$reason</name>
        <full_name>\CodeIgniter\HTTP\Response::reason</full_name>
        <default></default>
        <docblock line="147">
          <description>The current reason phrase for this response.</description>
          <long-description>If null, will use the default provided for the status code.</long-description>
          <tag name="var" line="147" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="154" package="CodeIgniter\HTTP">
        <name>$statusCode</name>
        <full_name>\CodeIgniter\HTTP\Response::statusCode</full_name>
        <default></default>
        <docblock line="154">
          <description>The current status code for this response.</description>
          <long-description></long-description>
          <tag name="var" line="154" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="160" package="CodeIgniter\HTTP">
        <name>$CSPEnabled</name>
        <full_name>\CodeIgniter\HTTP\Response::CSPEnabled</full_name>
        <default>false</default>
        <docblock line="160">
          <description>Whether Content Security Policy is being enforced.</description>
          <long-description></long-description>
          <tag name="var" line="160" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="167" package="CodeIgniter\HTTP">
        <name>$CSP</name>
        <full_name>\CodeIgniter\HTTP\Response::CSP</full_name>
        <default></default>
        <docblock line="167">
          <description>Content security policy handler</description>
          <long-description></long-description>
          <tag name="var" line="167" description="" type="\CodeIgniter\HTTP\ContentSecurityPolicy" variable="">
            <type>\CodeIgniter\HTTP\ContentSecurityPolicy</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="174" package="CodeIgniter\HTTP">
        <name>$cookiePrefix</name>
        <full_name>\CodeIgniter\HTTP\Response::cookiePrefix</full_name>
        <default>''</default>
        <docblock line="174">
          <description>Set a cookie name prefix if you need to avoid collisions</description>
          <long-description></long-description>
          <tag name="var" line="174" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter\HTTP">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\HTTP\Response::cookieDomain</full_name>
        <default>''</default>
        <docblock line="181">
          <description>Set to .your-domain.com for site-wide cookies</description>
          <long-description></long-description>
          <tag name="var" line="181" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="188" package="CodeIgniter\HTTP">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\HTTP\Response::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="188">
          <description>Typically will be a forward slash</description>
          <long-description></long-description>
          <tag name="var" line="188" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="195" package="CodeIgniter\HTTP">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\HTTP\Response::cookieSecure</full_name>
        <default>false</default>
        <docblock line="195">
          <description>Cookie will only be set if a secure HTTPS connection exists.</description>
          <long-description></long-description>
          <tag name="var" line="195" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter\HTTP">
        <name>$cookieHTTPOnly</name>
        <full_name>\CodeIgniter\HTTP\Response::cookieHTTPOnly</full_name>
        <default>false</default>
        <docblock line="202">
          <description>Cookie will only be accessible via HTTP(S) (no javascript)</description>
          <long-description></long-description>
          <tag name="var" line="202" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="211" package="CodeIgniter\HTTP">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Response::__construct()</full_name>
        <docblock line="211">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="211" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="241" package="CodeIgniter\HTTP">
        <name>getStatusCode</name>
        <full_name>\CodeIgniter\HTTP\Response::getStatusCode()</full_name>
        <docblock line="241">
          <description>Gets the response status code.</description>
          <long-description>The status code is a 3-digit integer result code of the getServer's attempt
to understand and satisfy the request.</long-description>
          <tag name="return" line="241" description="Status code." type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::getStatusCode()" refers="\CodeIgniter\HTTP\ResponseInterface::getStatusCode()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_getStatusCode"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="270" package="CodeIgniter\HTTP">
        <name>setStatusCode</name>
        <full_name>\CodeIgniter\HTTP\Response::setStatusCode()</full_name>
        <docblock line="270">
          <description>Return an instance with the specified status code and, optionally, reason phrase.</description>
          <long-description>If no reason phrase is specified, will default recommended reason phrase for
the response's status code.</long-description>
          <tag name="see" line="270" description="" link="http://tools.ietf.org/html/rfc7231#section-6"/>
          <tag name="see" line="270" description="" link="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml"/>
          <tag name="param" line="270" description="&lt;p&gt;The 3-digit integer result code to set.&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;The reason phrase to use with the&#10;                            provided status code; if none is provided, will&#10;                            default to the IANA name.&lt;/p&gt;" type="string" variable="$reason">
            <type>string</type>
          </tag>
          <tag name="return" line="270" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="throws" line="270" description="For invalid status code arguments." type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::setStatusCode()" refers="\CodeIgniter\HTTP\ResponseInterface::setStatusCode()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_setStatusCode"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reason</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter\HTTP">
        <name>getReason</name>
        <full_name>\CodeIgniter\HTTP\Response::getReason()</full_name>
        <docblock line="308">
          <description>Gets the response response phrase associated with the status code.</description>
          <long-description></long-description>
          <tag name="see" line="308" description="" link="http://tools.ietf.org/html/rfc7231#section-6"/>
          <tag name="see" line="308" description="" link="http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::getReason()" refers="\CodeIgniter\HTTP\ResponseInterface::getReason()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_getReason"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="333" package="CodeIgniter\HTTP">
        <name>setDate</name>
        <full_name>\CodeIgniter\HTTP\Response::setDate()</full_name>
        <docblock line="333">
          <description>Sets the date header</description>
          <long-description></long-description>
          <tag name="param" line="333" description="" type="\DateTime" variable="$date">
            <type>\DateTime</type>
          </tag>
          <tag name="return" line="333" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::setDate()" refers="\CodeIgniter\HTTP\ResponseInterface::setDate()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_setDate"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type>\DateTime</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="353" package="CodeIgniter\HTTP">
        <name>setContentType</name>
        <full_name>\CodeIgniter\HTTP\Response::setContentType()</full_name>
        <docblock line="353">
          <description>Sets the Content Type header for this response with the mime type
and, optionally, the charset.</description>
          <long-description></long-description>
          <tag name="param" line="353" description="" type="string" variable="$mime">
            <type>string</type>
          </tag>
          <tag name="param" line="353" description="" type="string" variable="$charset">
            <type>string</type>
          </tag>
          <tag name="return" line="353" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::setContentType()" refers="\CodeIgniter\HTTP\ResponseInterface::setContentType()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_setContentType"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$mime</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$charset</name>
          <default>'UTF-8'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="378" package="CodeIgniter\HTTP">
        <name>noCache</name>
        <full_name>\CodeIgniter\HTTP\Response::noCache()</full_name>
        <docblock line="378">
          <description>Sets the appropriate headers to ensure this response
is not cached by the browsers.</description>
          <long-description></long-description>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::noCache()" refers="\CodeIgniter\HTTP\ResponseInterface::noCache()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_noCache"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="417" package="CodeIgniter\HTTP">
        <name>setCache</name>
        <full_name>\CodeIgniter\HTTP\Response::setCache()</full_name>
        <docblock line="417">
          <description>A shortcut method that allows the developer to set all of the
cache-control headers in one method call.</description>
          <long-description>The options array is used to provide the cache-control directives
for the header. It might look something like:

     $options = [
         'max-age'  =&gt; 300,
         's-maxage' =&gt; 900
         'etag'     =&gt; 'abcde',
     ];

Typical options are:
 - etag
 - last-modified
 - max-age
 - s-maxage
 - private
 - public
 - must-revalidate
 - proxy-revalidate
 - no-transform</long-description>
          <tag name="param" line="417" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="return" line="417" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::setCache()" refers="\CodeIgniter\HTTP\ResponseInterface::setCache()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_setCache"/>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="457" package="CodeIgniter\HTTP">
        <name>setLastModified</name>
        <full_name>\CodeIgniter\HTTP\Response::setLastModified()</full_name>
        <docblock line="457">
          <description>Sets the Last-Modified date header.</description>
          <long-description>$date can be either a string representation of the date or,
preferably, an instance of DateTime.</long-description>
          <tag name="param" line="457" description="" type="" variable="$date"/>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::setLastModified()" refers="\CodeIgniter\HTTP\ResponseInterface::setLastModified()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_setLastModified"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$date</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="484" package="CodeIgniter\HTTP">
        <name>send</name>
        <full_name>\CodeIgniter\HTTP\Response::send()</full_name>
        <docblock line="484">
          <description>Sends the output to the browser.</description>
          <long-description></long-description>
          <tag name="return" line="484" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\ResponseInterface::send()" refers="\CodeIgniter\HTTP\ResponseInterface::send()" link="/classes/CodeIgniter.HTTP.ResponseInterface.html#method_send"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="506" package="CodeIgniter\HTTP">
        <name>sendHeaders</name>
        <full_name>\CodeIgniter\HTTP\Response::sendHeaders()</full_name>
        <docblock line="506">
          <description>Sends the headers of this HTTP request to the browser.</description>
          <long-description></long-description>
          <tag name="return" line="506" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="540" package="CodeIgniter\HTTP">
        <name>sendBody</name>
        <full_name>\CodeIgniter\HTTP\Response::sendBody()</full_name>
        <docblock line="540">
          <description>Sends the Body of the message to the browser.</description>
          <long-description></long-description>
          <tag name="return" line="540" description="" type="\CodeIgniter\HTTP\Response">
            <type>\CodeIgniter\HTTP\Response</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="556" package="CodeIgniter\HTTP">
        <name>redirect</name>
        <full_name>\CodeIgniter\HTTP\Response::redirect()</full_name>
        <docblock line="556">
          <description>Perform a redirect to a new URL, in two flavors: header or location.</description>
          <long-description></long-description>
          <tag name="param" line="556" description="&lt;p&gt;The URI to redirect to&lt;/p&gt;" type="string" variable="$uri">
            <type>string</type>
          </tag>
          <tag name="param" line="556" description="" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="param" line="556" description="&lt;p&gt;The type of redirection, defaults to 302&lt;/p&gt;" type="integer" variable="$code">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default>'auto'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="612" package="CodeIgniter\HTTP">
        <name>setCookie</name>
        <full_name>\CodeIgniter\HTTP\Response::setCookie()</full_name>
        <docblock line="612">
          <description>Set a cookie</description>
          <long-description>Accepts an arbitrary number of binds (up to 7) or an associateive
array in the first parameter containing all the values.</long-description>
          <tag name="param" line="612" description="&lt;p&gt;Cookie name or array containing binds&lt;/p&gt;" type="" variable="$name"/>
          <tag name="param" line="612" description="&lt;p&gt;Cookie value&lt;/p&gt;" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Cookie expiration time in seconds&lt;/p&gt;" type="string" variable="$expire">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Cookie domain (e.g.: '.yourdomain.com')&lt;/p&gt;" type="string" variable="$domain">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Cookie path (default: '/')&lt;/p&gt;" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Cookie name prefix&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Whether to only transfer cookies via SSL&lt;/p&gt;" type="boolean|false" variable="$secure">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="param" line="612" description="&lt;p&gt;Whether only make the cookie accessible via HTTP (no javascript)&lt;/p&gt;" type="boolean|false" variable="$httponly">
            <type>boolean</type>
            <type>false</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$expire</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$domain</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default>'/'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$secure</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$httponly</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzNO/tXGkm6P+NfUcm6C8wFVNA8dM0MUYycRfECJjc3yclpugvosenq7W5UZib/+/0eVf2AxsR7kpz1zG6gHt+7vlcV//w1mAXCt+YyCixbihPlyO7Ud2MZfjwfja6OtrZ2fvllS/ySnYGvONL2hQqkLyK1CGGrFQSea1uxq3zhyFvpqWAu/VhMQoB+p8IbMVGhuDq/0ttHMzcStvJjXAQfQ+lJK5KOWPiODEU8k+KiOxI915Z+JEUFvlT11hMVLEN3OotFxa6K5u7evqjjP89q4nXoxm40gyXeYj52LdH1o9iNF7EUaiJG0p75ylPTpYZ0JcO5G0VIM5Awk6EcL8U0tIAqpwakS9pmz6xwKmsiVsLylyKQYQQb1Di2XN/1p8ICPgIEiYtj5CtSk/jOCkEqviOsKFK2awFI4Sh7gVJhMU1cT0aigqw+HeodT6uEx5GWhwBdnyRhZsWdG8/UIgZpRXHo2gimBotsb+EgJWbac+euRoLbSVgRwgPQiwhYQYJrYq4cd4L/SuIvWIw9EF5NOC5CH4PUaiLCQdJBDbnZASVG0iPiAIgLDBDTKY20DBEFKNxYiyvCkbuZmuf5cYmqySL0AbGkbY4C8RHe36Ud4wjumCjPU3fII9iM4yJr0WFiSiDosbqVxBZbhq9i12b5k0aCVNN6KppZnifGUosPkLs+QsNRw1mIZEQx2INreSJQIeFd5bhh6DjviGH/bPSuPeiI7lBcDfpvu6edU/G0PYTvT2viXXd03r8eCVgxaF+O3ov+mWhfvhf/6l6e1kTnf64GneFQ9AcIrXtx1et2YLh7edK7Pu1evhGvYetlHw5FF04DwB31CaeG1u0MEd5FZ3ByDl/br7u97uh9DWGddUeXCPmsPxBtcdUejLon1732QFxdD676ww4QcQqQL7uXZwNA1LnoXI4agBjGROctfBHD83avh9jo6F8DGwMkVJz0r94Pum/OR+K83zvtwODrDtDXft3rMDbg7qTX7l7UxGn7ov2mQ7v6AIiYxJVMpnh33sFRxNqG/05G3f4l8nPSvxwN4GsN2B2Mkt3vusNOTbQH3SFK5mzQvyBOUbqwqU9wYOtlhwGh5PMKgiX4/XrYSWCK0067B+BAW5erCjVK/g0c5Y01laW8RxS/WQs4e2F2WJzKW/A51pzmE9ssfQf/JSqzOA4Od3bGths3bGunSjj0SS3pSfTP7J4bKpzu6NloB6ynlHGueqt/Y/bZwIPLPDRsxeRHcExk6S0cZjxDrcZuY5fGyYkRDvi6s7UF7gWo9yfu9GM7CI6y30/Y2w+lvQA2l1cKCFqmIWYgHTfEIy/vbRngScNRgmp74ESTBR0zDysBoBOJj+nQn18yAAPwk4m7BQFa8P+LeKrAj9TEVAIp4a0M65HrSHSpARzu5DRf6SiEcVBEgbTdiY5vNXYpLnATTjBsag8CXiYEkYOTgI8Q7RCKtOyZ8ReJDzOOqy6uQhUrW3nilgXLo0OgeIHR0WEPFkJkBAaCWWixturiXFoQJiP+ciGjCExSjJWzXDHTtZCekydznIjRwHHngScxTqVruobZrT+3SijfEiBh0aTERjT6260FklsGUuDXna0SSCUGtYGHxbWuLbZ5D5IWiWPxYatU2tkRe/f3h2DvILg5iRkiYKm0t7srjl+JMtqO6y9kuUaDezQ4hHhnzzAoGDlGer5J8zBqA0uwoFwT8AdItIXf3d01XMu36FxM1U44sZsHey+2mJImUjJc2LgZRpqahv6/CHpTYz8BtQBTeowxtm20w2SwRYOXyq+3yTtQUIY4leESKEPeG3u0YV9vEPqsaDgHNAy6kPHKzDNm1AopQuXnntPcxcKL3TqbFIsh//egUPZfglAQ1gtmzwOenSWeLIiFyOYjYB282G8irCbT3L0Q19E6iCwskMpRDqCMJwQQoOH/Ws3my0Z8H2u1tVBtxkngYSqVWlp1JAQwanEyU+D02ExaWpEXkDo4lAtaPkjPW+pZVumZgoy0gNEz0KAMvaXZP5JzEIoVurCftrPyh5BD9uH0h1kQicZbicZjcYHZmKttp6V1DiJC475fbtj+LHMQVhbCKjAkT/lT8GTghh3awEZhiF0m8sraYUurOxHJ+qoj0bkHV+dSNus9qKXnzdaLjJb2UUsnnotgZRiCmyyV9rWaXlsOoPr3ArJbksK+1tC1z9HV/UOLZ9+ccGs5Z/r+vQACzWRLay4cu44jfT2ailrrlEZZzhcS4DsCJ9vopRNQz5JNfLatsSf11HPjZO6XAs83EGIqoBV6XujzS5yJEUgNwpCee2n82wTCoR7cY3G8Ub7Gtcdy6El/Gs9WoO8ZZyeT1FicWRCWzXwrh70DVMZLMVJK9LCu0Yv2s4vq14Mur1DoO2mBtkc/WgR8+CFcOJChjMDT6yXPsjBgwcAC2yOZDkEs0cRNhbfHwkMjsnV8ztFMEnvaLc+huoqlFaj4aaGjAINqB3DmyhEoFfy/+F3dyAfNsdlq7pM5sjXuvRSVFeVp/VSxJrSgXPDrWAI4Vuhkgx0VW1Ct3vjqDtIKSOhc9Dj7Te1U3IiPjMyY9Lc7y+cH+7tiyH5MvGzsNZoEu6mVEHBkQ3lqheaBf4tT32+yYfSUffOAH/5maGxBrEVIfSH3hKNnL9cAfxs0tqXrAKpxkHXe4psv1i0+XfG4GPLs4MWBNof9Jp9FNPwLrPS13tbD5iPhtvZyJ5BzN3HmSg+SrsxBfBxcJGT/IHGQtyB4sgdwe6Inp5AODChvjFaTnxgPSgp4Fs89MrnnzQPtow8oAaLkOPHRB9pHUyYIyZmZ7+A86eVAe2s88F2TQmqdHWiHjR7+DaRNd9ZSj5swGd5iVZ5hRM+zWek9Od95oH03paGmMiFvY1yUXsa29BZiM1Ty4N8jJS7lVMXYlMko9xukDwmH0eqB9v9QoS0mUBpQQBvGEFVJlY+z9wMdInpKBXB2OF1+dLamM6wDHT5QFB1K7Tcc7xVgq7w+f24c5YGOP5cyplbepmj3FYip7X6Csi8pI7B/AyVhiALMlTrUMqRaKy3OcEN3IvyF59XABXsepjZUXjlyYkGah0XYrYv9HN4ts06b9qdVCra5/OlambLNVGyiMRsEiilMMUCRuA4+LX+yKN7NJOaJJokXpk4WXChjNBpLLHYkVg+2dBopmjEc6XU8J8Orjo9HyYEqa2J5UQ6fwRMZPAHjmUGs82RIa1IMH1cLyeJyvpCILNYhlDDYMFU3rqTOM+hLTtx74U7EUi2EL7kNaN0q14F1nufiuY6+TXEM94ohHotyeRU1QG4AmrDuqLnl+tjeIB1GwFf9DvsADOJR+E4J1ho+yIzghHhQIpCdjqGYR1x3lEhABT57FE8WZBuAYaec1yHJkeArHzABEiwSQZgWK5YbGENsm/o6nZD3LgS1FUMttiDGPWRAhTa0jt+iutnFUHQL+SGirwyrouIr8Ts498gO3SCufjt2BNBH2Fn8O/Xv8Jc/DCD/hR2rrOEHVmjNIcEMkBbsYRkaqSkuJgufJfr5s232VzKrgck/OU6DXzzV7gltm5JK2+LeRQABo8Fxl0KThIAC3gTcioVH5QSWyTrelITKEzPOHRIVlrbR+9Rf+YrWVapHOoS38bZAal/BtxQbHMuvsAHspaKJrr/Kuo3jYwFsSeAEWUnQwRJQhy/vRKEXqGyeqQKFOTiph0JEOPllK+Urd6AFLEqozM4crW7QJ7JgA8+sbaDjJQoxwMzacn0iCpbzzNqGjBGvbDAzsOXLj7DsNzKO+BbItPsK4+EoHyi59mnVHShrYmp1YhcBQKAJ0wLd1Ey6qFCBWXEs5wEFPLppwps8Kp2oixlRDbjUtFAqnPFBoYwXoY+Ysu3PxoYDh1iTIFqpHnKc/VNbMhKxrGj5p8G2mlhxPAvVHZnvR0hIufY/AU+dtJErnFQmHVKQBl0f0TnKiKlcTQxWM7CG9UfpdcD4LJQZCtnWFSllPNyulvmCFZRQEyrg3qq3rOWTrVQXmF6plUwMLzUNUJ13mXwLq7D5nLLM9fSNbSFjfWAmxflYJOXXCpRma+9vEQex+rO1XbmE2AJlTX3qYe/gfJ2R1qlNvT7SuEckKTHs+NEY4W+bpGf+8KA8dC7A8CECN7JwOLKbtDIDJy8uvpxNtEgQHvpLEt2MQI8w9EN0IY2ZBaywr8Jz0giFGuu2L9uUoa2f0kh6Ex6gkxSJj13/1vJcpx1O6YI7vY/BatTlybwx6pXRpiMe5Y44qoL0UFuVJmZd4ACYpD85+L0ldCG2nzLRDbD+U+CFwl9/aZ2+EgcvXxZ5hU3sMJhGGaXrKwzPzBl5CyOcQvcAVF3rXhE6Qzhgc75tMQQ+AZGE1vLzjVx+5vBeSRjGW5PDw+y1SVX84x9C+zkWRKF328hH2RCzeoeTWhXZYUpnhpc1H8dRjcsZzcwG2vTWRHdJqYWgSyUJ+d2mpUVi+EBoPxU64Z8XUJMP+iBnXnykLvk/3+kl9putQ9YDL3eVMOialYVxd1XzGnpiGWvRGReVft2g5tXVn2j1IVVchQE4savvawPfBxB6A0iPb6XvSgzcnIFEP8BYh8ZYHTBHXT2shrmPpzCHjTWxjavWDMJkQZsdNQKorIDJ+WQaAf3JGBf8AfGJSoRky//iSPl6dFKucgVjFC5j7pZWyri0XBMaEt+fwmhNOOJCvBfnh+5hVK6Ca35zMSozkJ/hDRIBm+oK70NMmbbWHUr9wRwFhbfkBGUtNcMl+O7MpBJF6QSCKBrX+/4fetQ8IAuVLJbaKuxj0NVZ/UUu8GIKkfP9ei26AJxDO6B0ilhvQNw+Egm4RgL6iFd/KbYCTWGdb50Y1g9X9vc991ink7VgPZ85+TSbcet3LXLqydMG6sk+23tm/q1DVNjbb6AP/xt/fPkj7dsK8HVL6KZ+hN70cbcib+W0UWdI2OWAODjmum+M2SLs3JT0JW2MFbtKnPpc3crEFrKdkfImv5FfVRMfyr6CMKhCtJ/y3LqvQ3JzvItfYILILX/6ef6jLaKZCmN7EUOiRXfQ3PfBS2jtufk1LT5HotKCXihy9U0Q7IIGEb5OElgFaJjYhszX+uxsIk46UVn4QoCebXL+xx4oB1o/rLjV73xMe50xNkQXOKBXbZ5SNyJSiBp9hufeyMMEN/1tG+z0+CdblhiFlAVeOLR2d2sr81EdVtACmH+5u7syLWNrWuZGzitRtsa2Q/dIZg1mikYI3J3NCIKpFKIuEIr57FlRXJ/rtxlmUFNpvhqizHc4Jrc6ktJXsvJk7wIAhpIS8+wifEdQMA5GGUMlE2HEW40ErDwjzTWHT4b7gLeno5aHcfzhUy5wZ9I6vWItozPHI1cbFJ3Uk/SkbljXGYH2khYmftMkuBHQm5DwgdX8aa2syBx7AlUTa1uo+7jwC8Fli7UeqD15krOBipxpFJODYAyUB3YSy2tkra9aKcA2e7lEWz8/EUKW64bnbN6ZOiBK4sC7+HhfIF269rJMjhGuPdtM8lcV8lnGKyMZWmPMlLINMFhrMsq1rCnJbYsPQ15RawkstRCIBoMMcCXpa6r4R+W5hYabE99jEt60gmZb/czy1Mw8cFQKMRY3Nv+TE6v+Ig4giv7IWgofyaIxKkalG2U6qVlvk3014fadymrrqjsRd7IcftPNTY233Mnk1nSKr0tdumGd0YmAsfHC9RwkGSbKkUkQGsao1y9iNt/5gBm6UKC4f0jelxhJJkdDrvTr5ErW0+P4a+UsKz/TJRmFmazI/EBH9+v4Pc53UGPC8EreCto5t25ljgZLP6IdS0mbY9MB1As+41jlK2EWAOMDdezJ18TF9XDEN79gI1Rh0rNzzV8Nq7JA8ZWsvmh8bJnRanCrKBsGWa2a6A9cnxfGwHx34PDQpofTZ6Gan2mndg1eJ4Y54DoXhElN3AWGAUZViSC78uMJX9Hs/D0S9B/6LcYYaE70i6Da+pVMLd8kwp9cgb0XLExSEbQkk3erRWh0CZNwSEnYRh5T41fBGIQViW164wDJ6DYkdqCORD6aG5pvlA9FubEKoedCsKB5oJCuvotJ/Im9z/RE4VE2sVl3iL96kB7OR417SA6PtGfKMIw/bfhpfgNOFoZb8KKh+U0K39pDKL8e9Gr0s7w7JSaedavC6NC0e6Ag8hS/idrYtAH/bW5/8JFtrLI4Crs8FM8euJZCUPRzC9BGmL5+r5n7HCrTW7vNDYI3WyoZCmsr2PGSxVrEqlwTyUUM3v8vPK+aRq7uEILWrRsqakFT3ectf8VX/gIC2gSSulmZqsaxjPHnUbaaByCssetBSDPhyCA8NijxokN7nM/DzuBtZ/ChzP9+Nr/NAreDq4BmcHMPLavhu1w7VPj7zDrQW66KJ4DorN0bdlLHlfJsqF5NrswS3JyyBiSYWgkFVMV7pidA+2d/MZeha+vh1EVmnOkqzVeD/qh/0u8hzenkoPPf153h6PNFZ3TeP9VsP7CXxUh+cq+xV6YWO2EuGRVWNgNn7t50RrwPe/Ot3RZqmrJvbFwfmkAi/cade+MG+CKcwgl+27lSUbxjfjqw8wZbkty1b+0+p+wXZWrufFYIA4NNlpB7i/g3Dkb2iRBtK2tfhwxkLccd6HmwgN2jRegdg7sFQ+ckvDQGH35DH/WZ2QSmp483RpuC7SvFWeb+klWfb1Hl8iQ+Q9lfD9IlO6CzZ5yzJD+LowtEee9iZzhz2bf28zjkOnVfZdHQZ9vQ8sPqwOSBX+IE+bcTERZrVjh2Y/rpCRyLMXrNiRi7GFYqiwAJfV5FR4orzTUaJLXcJedeFf+oeeKGkLuRR5TsTfzkB9kgOFzCEXfNFWf+ODrT30nmSSLiJ1wZoERjgYMmMIQpC4YGNq2W94FLr4fMahrQv9fG5riL8RDftm9E6JgHTgaEHqjIxrSByQQ+ckzfOJarmwAF5uGTAUQDFXMO8MHh5r3mWVZOeDya3YOv+/6iBEZsR+blVPLeFVROTwe5y0WapBeY9HpwOOxtgoSuhzYmkOjb3LrRzUumqeA5YtFbxE0XIgijgqcWecOCS+sanx3QV63M5LuTPgal70HycJO/pm9T6XuUe1tJQwljenCrVE2bEBBOyDR1Ypi4QXAelndnLSPhSaw4yjhdRkvCLpIIPMvGn+Zz8ubhM3N+lIquSygU352LCaazoDxuext80BwBJwnuhzJxji6UecZPzC1+Qj7pX2IQPzFr+MlwRE12pOsTpcaIIhOTMuEQF32gea4ozJISjeG7gcwKdsJfctGCorSRNcYxCs9FjwopypXT6J8oqGDxUQ680XQhdP0C8UkeeGIcBWvzwNlsjslw1knHySc8maGcLW1tZR6wMbhjbV1rwIfpgnwbIDHVguV5HKkFb8SSPIh8YpakiDIHoHBPDtlKisWmmSlDk/PJBaaoixfPDnZ3C1+cJGsNHPFK7FbFr2bvfyW++1DsJlSAxTJ9xuIa7Cx0WKiZTTX2tjXjvWvGG9ZSZ/a9w/KXrf8DU4opdQ==</source>
  </file>
  <file path="ComposerScripts.php" generated-path="ComposerScripts.html" hash="62dc9b704da78b843877189821ca30fc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter" line="50" package="CodeIgniter">
      <extends/>
      <name>ComposerScripts</name>
      <full_name>\CodeIgniter\ComposerScripts</full_name>
      <docblock line="50">
        <description>ComposerScripts</description>
        <long-description>These scripts are used by Composer during installs and updates
to move files to locations within the system folder so that end-users
do not need to use Composer to install a package, but can simply
download</long-description>
        <tag name="codeCoverageIgnore" line="50" description=""/>
        <tag name="package" line="50" description="CodeIgniter"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter" line="57" package="CodeIgniter">
        <name>postUpdate</name>
        <full_name>\CodeIgniter\ComposerScripts::postUpdate()</full_name>
        <docblock line="57">
          <description>After composer install/update, this is called to move
the bare-minimum required files for our dependencies
to appropriate locations.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="CodeIgniter" line="95" package="CodeIgniter">
        <name>moveFile</name>
        <full_name>\CodeIgniter\ComposerScripts::moveFile()</full_name>
        <docblock line="95">
          <description>Move a file.</description>
          <long-description></long-description>
          <tag name="param" line="95" description="" type="string" variable="$source">
            <type>string</type>
          </tag>
          <tag name="param" line="95" description="" type="string" variable="$destination">
            <type>string</type>
          </tag>
          <tag name="return" line="95" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$source</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$destination</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="CodeIgniter" line="120" package="CodeIgniter">
        <name>getClassFilePath</name>
        <full_name>\CodeIgniter\ComposerScripts::getClassFilePath()</full_name>
        <docblock line="120">
          <description>Determine file path of a class.</description>
          <long-description></long-description>
          <tag name="param" line="120" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="120" description="" type="\CodeIgniter\type">
            <type>\CodeIgniter\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/MySQLi/Connection.php" generated-path="Database.MySQLi.Connection.html" hash="2448ceb0a79cc00ff97c5712d90be5e8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConnection">\CodeIgniter\Database\BaseConnection</namespace-alias>
    <namespace-alias name="ConnectionInterface">\CodeIgniter\Database\ConnectionInterface</namespace-alias>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\MySQLi" line="46" package="Default">
      <extends>\CodeIgniter\Database\BaseConnection</extends>
      <implements>\CodeIgniter\Database\ConnectionInterface</implements>
      <name>Connection</name>
      <full_name>\CodeIgniter\Database\MySQLi\Connection</full_name>
      <docblock line="46">
        <description>Connection for MySQLi</description>
        <long-description></long-description>
        <tag name="package" line="46" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection" refers="\CodeIgniter\Database\BaseConnection" link="/classes/CodeIgniter.Database.BaseConnection.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="53" package="Default">
        <name>$DBDriver</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::DBDriver</full_name>
        <default>'MySQLi'</default>
        <docblock line="53">
          <description>Database driver</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::DBDriver" refers="\CodeIgniter\Database\BaseConnection::DBDriver" link="/classes/CodeIgniter.Database.BaseConnection.html#property_DBDriver"/>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="64" package="Default">
        <name>$deleteHack</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::deleteHack</full_name>
        <default>true</default>
        <docblock line="64">
          <description>DELETE hack flag</description>
          <long-description>Whether to use the MySQL "delete hack" which allows the number
of affected rows to be shown. Uses a preg_replace when enabled,
adding a bit more processing to all queries.</long-description>
          <tag name="var" line="64" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="73" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::escapeChar</full_name>
        <default>'`'</default>
        <docblock line="73">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::escapeChar" refers="\CodeIgniter\Database\BaseConnection::escapeChar" link="/classes/CodeIgniter.Database.BaseConnection.html#property_escapeChar"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="84" package="Default">
        <name>$mysqli</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::mysqli</full_name>
        <default></default>
        <docblock line="84">
          <description>MySQLi object</description>
          <long-description>Has to be preserved without being assigned to $conn_id.</long-description>
          <tag name="var" line="84" description="" type="\CodeIgniter\Database\MySQLi\MySQLi" variable="">
            <type>\CodeIgniter\Database\MySQLi\MySQLi</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="51" package="Default">
        <name>$DSN</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DSN</full_name>
        <default></default>
        <docblock line="51">
          <description>Data Source Name / Connect string</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="58" package="Default">
        <name>$port</name>
        <full_name>\CodeIgniter\Database\BaseConnection::port</full_name>
        <default>''</default>
        <docblock line="58">
          <description>Database port</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="65" package="Default">
        <name>$hostname</name>
        <full_name>\CodeIgniter\Database\BaseConnection::hostname</full_name>
        <default></default>
        <docblock line="65">
          <description>Hostname</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="72" package="Default">
        <name>$username</name>
        <full_name>\CodeIgniter\Database\BaseConnection::username</full_name>
        <default></default>
        <docblock line="72">
          <description>Username</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="79" package="Default">
        <name>$password</name>
        <full_name>\CodeIgniter\Database\BaseConnection::password</full_name>
        <default></default>
        <docblock line="79">
          <description>Password</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="86" package="Default">
        <name>$database</name>
        <full_name>\CodeIgniter\Database\BaseConnection::database</full_name>
        <default></default>
        <docblock line="86">
          <description>Database name</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="93" package="Default">
        <name>$DBDriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDriver</full_name>
        <default>'MySQLi'</default>
        <docblock line="93">
          <description>Database driver</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="101" package="Default">
        <name>$subdriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::subdriver</full_name>
        <default></default>
        <docblock line="101">
          <description>Sub-driver</description>
          <long-description></long-description>
          <tag name="used-by" line="101" description="CI_DB_pdo_driver"/>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="108" package="Default">
        <name>$DBPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBPrefix</full_name>
        <default>''</default>
        <docblock line="108">
          <description>Table prefix</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="115" package="Default">
        <name>$pConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::pConnect</full_name>
        <default>false</default>
        <docblock line="115">
          <description>Persistent connection flag</description>
          <long-description></long-description>
          <tag name="var" line="115" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="124" package="Default">
        <name>$DBDebug</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDebug</full_name>
        <default>false</default>
        <docblock line="124">
          <description>Debug flag</description>
          <long-description>Whether to display error messages.</long-description>
          <tag name="var" line="124" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="131" package="Default">
        <name>$cacheOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheOn</full_name>
        <default>false</default>
        <docblock line="131">
          <description>Should we cache results?</description>
          <long-description></long-description>
          <tag name="var" line="131" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="138" package="Default">
        <name>$cacheDir</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheDir</full_name>
        <default></default>
        <docblock line="138">
          <description>Path to store cache files.</description>
          <long-description></long-description>
          <tag name="var" line="138" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="145" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\BaseConnection::charset</full_name>
        <default>'utf8'</default>
        <docblock line="145">
          <description>Character set</description>
          <long-description></long-description>
          <tag name="var" line="145" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="152" package="Default">
        <name>$DBCollat</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBCollat</full_name>
        <default>'utf8_general_ci'</default>
        <docblock line="152">
          <description>Collation</description>
          <long-description></long-description>
          <tag name="var" line="152" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="159" package="Default">
        <name>$swapPre</name>
        <full_name>\CodeIgniter\Database\BaseConnection::swapPre</full_name>
        <default>''</default>
        <docblock line="159">
          <description>Swap Prefix</description>
          <long-description></long-description>
          <tag name="var" line="159" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="166" package="Default">
        <name>$encrypt</name>
        <full_name>\CodeIgniter\Database\BaseConnection::encrypt</full_name>
        <default>false</default>
        <docblock line="166">
          <description>Encryption flag/data</description>
          <long-description></long-description>
          <tag name="var" line="166" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="173" package="Default">
        <name>$compress</name>
        <full_name>\CodeIgniter\Database\BaseConnection::compress</full_name>
        <default>false</default>
        <docblock line="173">
          <description>Compression flag</description>
          <long-description></long-description>
          <tag name="var" line="173" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="182" package="Default">
        <name>$strictOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::strictOn</full_name>
        <default></default>
        <docblock line="182">
          <description>Strict ON flag</description>
          <long-description>Whether we're running in strict SQL mode.</long-description>
          <tag name="var" line="182" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="189" package="Default">
        <name>$failover</name>
        <full_name>\CodeIgniter\Database\BaseConnection::failover</full_name>
        <default>array()</default>
        <docblock line="189">
          <description>Settings for a failover connection.</description>
          <long-description></long-description>
          <tag name="var" line="189" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="197" package="Default">
        <name>$saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries</full_name>
        <default>false</default>
        <docblock line="197">
          <description>Whether to keep an in-memory history of queries
for debugging and timeline purposes.</description>
          <long-description></long-description>
          <tag name="var" line="197" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="207" package="Default">
        <name>$queries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::queries</full_name>
        <default>array()</default>
        <docblock line="207">
          <description>Array of query objects that have executed
on this connection.</description>
          <long-description></long-description>
          <tag name="var" line="207" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="214" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connID</full_name>
        <default>false</default>
        <docblock line="214">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="214" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="221" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::resultID</full_name>
        <default>false</default>
        <docblock line="221">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="221" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="228" package="Default">
        <name>$protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers</full_name>
        <default>true</default>
        <docblock line="228">
          <description>Protect identifiers flag</description>
          <long-description></long-description>
          <tag name="var" line="228" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="237" package="Default">
        <name>$reservedIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reservedIdentifiers</full_name>
        <default>array('*')</default>
        <docblock line="237">
          <description>List of reserved identifiers</description>
          <long-description>Identifiers that must NOT be escaped.</long-description>
          <tag name="var" line="237" description="" type="array&lt;mixed,string&gt;" variable="">
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="244" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeChar</full_name>
        <default>'"'</default>
        <docblock line="244">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="244" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="251" package="Default">
        <name>$likeEscapeStr</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeStr</full_name>
        <default>" ESCAPE '%s' "</default>
        <docblock line="251">
          <description>ESCAPE statement string</description>
          <long-description></long-description>
          <tag name="var" line="251" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="258" package="Default">
        <name>$likeEscapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeChar</full_name>
        <default>'!'</default>
        <docblock line="258">
          <description>ESCAPE character</description>
          <long-description></long-description>
          <tag name="var" line="258" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="266" package="Default">
        <name>$dataCache</name>
        <full_name>\CodeIgniter\Database\BaseConnection::dataCache</full_name>
        <default>array()</default>
        <docblock line="266">
          <description>Holds previously looked up data
for performance reasons.</description>
          <long-description></long-description>
          <tag name="var" line="266" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="272" package="Default">
        <name>$connectTime</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectTime</full_name>
        <default></default>
        <docblock line="272">
          <description>Microtime when connection was made</description>
          <long-description></long-description>
          <tag name="var" line="272" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="279" package="Default">
        <name>$connectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectDuration</full_name>
        <default></default>
        <docblock line="279">
          <description>How long it took to establish connection.</description>
          <long-description></long-description>
          <tag name="var" line="279" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="94" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::connect()</full_name>
        <docblock line="94">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="94" description="" type="boolean" variable="$persistent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="94" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::connect()" refers="\CodeIgniter\Database\BaseConnection::connect()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_connect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="230" package="Default">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::reconnect()</full_name>
        <docblock line="230">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="230" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::reconnect()" refers="\CodeIgniter\Database\BaseConnection::reconnect()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_reconnect"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="247" package="Default">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::setDatabase()</full_name>
        <docblock line="247">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="247" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="247" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::setDatabase()" refers="\CodeIgniter\Database\BaseConnection::setDatabase()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_setDatabase"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="271" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::getVersion()</full_name>
        <docblock line="271">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="271" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::getVersion()" refers="\CodeIgniter\Database\BaseConnection::getVersion()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_getVersion"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="290" package="Default">
        <name>execute</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::execute()</full_name>
        <docblock line="290">
          <description>Executes the query against the database.</description>
          <long-description></long-description>
          <tag name="param" line="290" description="" type="" variable="$sql"/>
          <tag name="return" line="290" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::execute()" refers="\CodeIgniter\Database\BaseConnection::execute()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="306" package="Default">
        <name>prepQuery</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::prepQuery()</full_name>
        <docblock line="306">
          <description>Prep the query</description>
          <long-description>If needed, each database adapter can prep the query string</long-description>
          <tag name="param" line="306" description="&lt;p&gt;an SQL query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="306" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="325" package="Default">
        <name>affectedRows</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::affectedRows()</full_name>
        <docblock line="325">
          <description>Returns the total number of rows affected by this query.</description>
          <long-description></long-description>
          <tag name="return" line="325" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::affectedRows()" refers="\CodeIgniter\Database\BaseConnection::affectedRows()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_affectedRows"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="338" package="Default">
        <name>_escapeString</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::_escapeString()</full_name>
        <docblock line="338">
          <description>Platform-dependant string escape</description>
          <long-description>Will likely be overridden in child classes.</long-description>
          <tag name="param" line="338" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_escapeString()" refers="\CodeIgniter\Database\BaseConnection::_escapeString()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__escapeString"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="352" package="Default">
        <name>_listTables</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::_listTables()</full_name>
        <docblock line="352">
          <description>Generates the SQL for listing tables in a platform-dependent manner.</description>
          <long-description></long-description>
          <tag name="param" line="352" description="" type="boolean" variable="$prefixLimit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="352" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_listTables()" refers="\CodeIgniter\Database\BaseConnection::_listTables()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__listTables"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefixLimit</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="373" package="Default">
        <name>_listColumns</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::_listColumns()</full_name>
        <docblock line="373">
          <description>Generates a platform-specific query string so that the column names can be fetched.</description>
          <long-description></long-description>
          <tag name="param" line="373" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="373" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_listColumns()" refers="\CodeIgniter\Database\BaseConnection::_listColumns()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__listColumns"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="386" package="Default">
        <name>fieldData</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::fieldData()</full_name>
        <docblock line="386">
          <description>Returns an object with field data</description>
          <long-description></long-description>
          <tag name="param" line="386" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="386" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="423" package="Default">
        <name>error</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::error()</full_name>
        <docblock line="423">
          <description>Returns the last error code and message.</description>
          <long-description>Must return an array with keys 'code' and 'message':

 return ['code' =&gt; null, 'message' =&gt; null);</long-description>
          <tag name="return" line="423" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::error()" refers="\CodeIgniter\Database\BaseConnection::error()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_error"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="443" package="Default">
        <name>insertID</name>
        <full_name>\CodeIgniter\Database\MySQLi\Connection::insertID()</full_name>
        <docblock line="443">
          <description>Insert ID</description>
          <long-description></long-description>
          <tag name="return" line="443" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::insertID()" refers="\CodeIgniter\Database\BaseConnection::insertID()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_insertID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="288" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseConnection::__construct()</full_name>
        <docblock line="288">
          <description>Saves our connection settings.</description>
          <long-description></long-description>
          <tag name="param" line="288" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="304" package="Default">
        <name>initialize</name>
        <full_name>\CodeIgniter\Database\BaseConnection::initialize()</full_name>
        <docblock line="304">
          <description>Initializes the database connection/settings.</description>
          <long-description></long-description>
          <tag name="return" line="304" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::initialize()" refers="\CodeIgniter\Database\ConnectionInterface::initialize()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_initialize"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="368" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connect()</full_name>
        <docblock line="368">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="368" description="" type="boolean" variable="$persistent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="368" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::connect()" refers="\CodeIgniter\Database\ConnectionInterface::connect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_connect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="377" package="Default">
        <name>persistentConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::persistentConnect()</full_name>
        <docblock line="377">
          <description>Create a persistent database connection.</description>
          <long-description></long-description>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" refers="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_persistentConnect"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="390" package="Default">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reconnect()</full_name>
        <docblock line="390">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="390" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::reconnect()" refers="\CodeIgniter\Database\ConnectionInterface::reconnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_reconnect"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="404" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnection()</full_name>
        <docblock line="404">
          <description>Returns the actual connection object. If both a 'read' and 'write'
connection has been specified, you can pass either term in to
get that connection. If you pass either alias in and only a single
connection is present, it must return the sole connection.</description>
          <long-description></long-description>
          <tag name="param" line="404" description="" type="string|null" variable="$alias">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="404" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getConnection()" refers="\CodeIgniter\Database\ConnectionInterface::getConnection()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getConnection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="419" package="Default">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setDatabase()</full_name>
        <docblock line="419">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::setDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::setDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_setDatabase"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="428" package="Default">
        <name>getDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getDatabase()</full_name>
        <docblock line="428">
          <description>Returns the name of the current database being used.</description>
          <long-description></long-description>
          <tag name="return" line="428" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::getDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getDatabase"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="440" package="Default">
        <name>getError</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getError()</full_name>
        <docblock line="440">
          <description>Returns the last error encountered by this connection.</description>
          <long-description></long-description>
          <tag name="return" line="440" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getError()" refers="\CodeIgniter\Database\ConnectionInterface::getError()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getError"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="451" package="Default">
        <name>getPlatform</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getPlatform()</full_name>
        <docblock line="451">
          <description>The name of the platform in use (MySQLi, mssql, etc)</description>
          <long-description></long-description>
          <tag name="return" line="451" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getPlatform()" refers="\CodeIgniter\Database\ConnectionInterface::getPlatform()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getPlatform"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="463" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getVersion()</full_name>
        <docblock line="463">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="463" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getVersion()" refers="\CodeIgniter\Database\ConnectionInterface::getVersion()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getVersion"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="472" package="Default">
        <name>saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries()</full_name>
        <docblock line="472">
          <description>Specifies whether this connection should keep queries objects or not.</description>
          <long-description></long-description>
          <tag name="param" line="472" description="" type="boolean" variable="$save">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::saveQueries()" refers="\CodeIgniter\Database\ConnectionInterface::saveQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_saveQueries"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="488" package="Default">
        <name>execute</name>
        <full_name>\CodeIgniter\Database\BaseConnection::execute()</full_name>
        <docblock line="488">
          <description>Executes the query against the database.</description>
          <long-description></long-description>
          <tag name="param" line="488" description="" type="" variable="$sql"/>
          <tag name="return" line="488" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="506" package="Default">
        <name>query</name>
        <full_name>\CodeIgniter\Database\BaseConnection::query()</full_name>
        <docblock line="506">
          <description>Orchestrates a query against the database. Queries must use
Database\Statement objects to store the query and build it.</description>
          <long-description>This method works with the cache.

Should automatically handle different connections for read/write
queries if needed.</long-description>
          <tag name="param" line="506" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="506" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="param" line="506" description="" type="" variable="$queryClass"/>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::query()" refers="\CodeIgniter\Database\ConnectionInterface::query()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_query"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryClass</name>
          <default>'CodeIgniter\\Database\\Query'</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="562" package="Default">
        <name>simpleQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::simpleQuery()</full_name>
        <docblock line="562">
          <description>Performs a basic query against the database. No binding or caching
is performed, nor are transactions handled. Simply takes a raw
query string and returns the database-specific result id.</description>
          <long-description></long-description>
          <tag name="param" line="562" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="562" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" refers="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_simpleQuery"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="582" package="Default">
        <name>table</name>
        <full_name>\CodeIgniter\Database\BaseConnection::table()</full_name>
        <docblock line="582">
          <description>Returns an instance of the query builder for this connection.</description>
          <long-description></long-description>
          <tag name="param" line="582" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="582" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
          <tag name="throws" line="582" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::table()" refers="\CodeIgniter\Database\ConnectionInterface::table()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_table"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="601" package="Default">
        <name>getQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueries()</full_name>
        <docblock line="601">
          <description>Returns an array containing all of the</description>
          <long-description></long-description>
          <tag name="return" line="601" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueries()" refers="\CodeIgniter\Database\ConnectionInterface::getQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueries"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="614" package="Default">
        <name>getQueryCount</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueryCount()</full_name>
        <docblock line="614">
          <description>Returns the total number of queries that have been performed
on this connection.</description>
          <long-description></long-description>
          <tag name="return" line="614" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" refers="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueryCount"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="626" package="Default">
        <name>getLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getLastQuery()</full_name>
        <docblock line="626">
          <description>Returns the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="626" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" refers="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getLastQuery"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="638" package="Default">
        <name>showLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::showLastQuery()</full_name>
        <docblock line="638">
          <description>Returns a string representation of the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="638" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="655" package="Default">
        <name>getConnectStart</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectStart()</full_name>
        <docblock line="655">
          <description>Returns the time we started to connect to this database in
seconds with microseconds.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="return" line="655" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="672" package="Default">
        <name>getConnectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectDuration()</full_name>
        <docblock line="672">
          <description>Returns the number of seconds with microseconds that it took
to connect to the database.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="param" line="672" description="" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="672" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="706" package="Default">
        <name>protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers()</full_name>
        <docblock line="706">
          <description>Protect Identifiers</description>
          <long-description>This function is used extensively by the Query Builder class, and by
a couple functions in this class.
It takes a column or table name (optionally with an alias) and inserts
the table prefix onto it. Some logic is necessary in order to deal with
column names that include the path. Consider a query like this:

SELECT hostname.database.table.column AS c FROM hostname.database.table

Or a query with aliasing:

SELECT m.member_id, m.member_name FROM members AS m

Since the column name can include up to four segments (host, DB, table, column)
or also have an alias prefix, we need to do a bit of work to figure this out and
insert the table prefix (if it exists) in the proper position, and escape only
the correct identifiers.</long-description>
          <tag name="param" line="706" description="" type="string|array" variable="$item">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$prefixSingle">
            <type>boolean</type>
          </tag>
          <tag name="param" line="706" description="" type="mixed" variable="$protectIdentifiers">
            <type>mixed</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$fieldExists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="706" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefixSingle</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$protectIdentifiers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fieldExists</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="879" package="Default">
        <name>escapeIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeIdentifiers()</full_name>
        <docblock line="879">
          <description>Escape the SQL Identifiers</description>
          <long-description>This function escapes column and table names</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$item">
            <type>mixed</type>
          </tag>
          <tag name="return" line="879" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="946" package="Default">
        <name>prefixTable</name>
        <full_name>\CodeIgniter\Database\BaseConnection::prefixTable()</full_name>
        <docblock line="946">
          <description>DB Prefix</description>
          <long-description>Prepends a database prefix if one exists in configuration</long-description>
          <tag name="param" line="946" description="&lt;p&gt;the table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="946" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="967" package="Default">
        <name>setPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setPrefix()</full_name>
        <docblock line="967">
          <description>Set DB Prefix</description>
          <long-description>Set's the DB Prefix to something new without needing to reconnect</long-description>
          <tag name="param" line="967" description="&lt;p&gt;the prefix&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="967" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="979" package="Default">
        <name>affectedRows</name>
        <full_name>\CodeIgniter\Database\BaseConnection::affectedRows()</full_name>
        <docblock line="979">
          <description>Returns the total number of rows affected by this query.</description>
          <long-description></long-description>
          <tag name="return" line="979" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="993" package="Default">
        <name>escape</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escape()</full_name>
        <docblock line="993">
          <description>"Smart" Escape String</description>
          <long-description>Escapes data based on type.
Sets boolean and null types</long-description>
          <tag name="param" line="993" description="" type="" variable="$str"/>
          <tag name="return" line="993" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::escape()" refers="\CodeIgniter\Database\ConnectionInterface::escape()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_escape"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1026" package="Default">
        <name>escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeString()</full_name>
        <docblock line="1026">
          <description>Escape String</description>
          <long-description></long-description>
          <tag name="param" line="1026" description="&lt;p&gt;Input string&lt;/p&gt;" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="param" line="1026" description="&lt;p&gt;Whether or not the string will be used in a LIKE condition&lt;/p&gt;" type="boolean" variable="$like">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1026" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string|array&lt;mixed,string&gt;</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$like</name>
          <default>FALSE</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1064" package="Default">
        <name>escapeLikeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeLikeString()</full_name>
        <docblock line="1064">
          <description>Escape LIKE String</description>
          <long-description>Calls the individual driver for platform
specific escaping for LIKE conditions</long-description>
          <tag name="param" line="1064" description="" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="return" line="1064" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1081" package="Default">
        <name>_escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_escapeString()</full_name>
        <docblock line="1081">
          <description>Platform independent string escape.</description>
          <long-description>Will likely be overridden in child classes.</long-description>
          <tag name="param" line="1081" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="1081" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1098" package="Default">
        <name>callFunction</name>
        <full_name>\CodeIgniter\Database\BaseConnection::callFunction()</full_name>
        <docblock line="1098">
          <description>This function enables you to call PHP database functions that are not natively included
in CodeIgniter, in a platform independent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1098" description="" type="string" variable="$functionName">
            <type>string</type>
          </tag>
          <tag name="param" line="1098" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="1098" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="1098" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::callFunction()" refers="\CodeIgniter\Database\ConnectionInterface::callFunction()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_callFunction"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$functionName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1132" package="Default">
        <name>listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::listTables()</full_name>
        <docblock line="1132">
          <description>Returns an array of table names</description>
          <long-description></long-description>
          <tag name="param" line="1132" description="&lt;p&gt;= FALSE&lt;/p&gt;" type="string" variable="$constrain_by_prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="1132" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrain_by_prefix</name>
          <default>FALSE</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1191" package="Default">
        <name>tableExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::tableExists()</full_name>
        <docblock line="1191">
          <description>Determine if a particular table exists</description>
          <long-description></long-description>
          <tag name="param" line="1191" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="1191" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1206" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldNames()</full_name>
        <docblock line="1206">
          <description>Fetch Field Names</description>
          <long-description></long-description>
          <tag name="param" line="1206" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="1206" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1261" package="Default">
        <name>fieldExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::fieldExists()</full_name>
        <docblock line="1261">
          <description>Determine if a particular field exists</description>
          <long-description></long-description>
          <tag name="param" line="1261" description="" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="1261" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="1261" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1274" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldData()</full_name>
        <docblock line="1274">
          <description>Returns an object with field data</description>
          <long-description></long-description>
          <tag name="param" line="1274" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1274" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1291" package="Default">
        <name>error</name>
        <full_name>\CodeIgniter\Database\BaseConnection::error()</full_name>
        <docblock line="1291">
          <description>Returns the last error code and message.</description>
          <long-description>Must return an array with keys 'code' and 'message':

 return ['code' =&gt; null, 'message' =&gt; null);</long-description>
          <tag name="return" line="1291" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\MySQLi" line="1300" package="Default">
        <name>insertID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::insertID()</full_name>
        <docblock line="1300">
          <description>Insert ID</description>
          <long-description></long-description>
          <tag name="return" line="1300" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1311" package="Default">
        <name>_listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listTables()</full_name>
        <docblock line="1311">
          <description>Generates the SQL for listing tables in a platform-dependent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1311" description="" type="boolean" variable="$constrainByPrefix">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1311" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrainByPrefix</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\MySQLi" line="1322" package="Default">
        <name>_listColumns</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listColumns()</full_name>
        <docblock line="1322">
          <description>Generates a platform-specific query string so that the column names can be fetched.</description>
          <long-description></long-description>
          <tag name="param" line="1322" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1322" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Autoloader/FileLocator.php" generated-path="Autoloader.FileLocator.html" hash="fd6954e8f323265eb1d536ddb2bb1f55" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Autoload">\Config\Autoload</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Autoloader" line="51" package="CodeIgniter">
      <extends/>
      <name>FileLocator</name>
      <full_name>\CodeIgniter\Autoloader\FileLocator</full_name>
      <docblock line="51">
        <description>Class Loader</description>
        <long-description>Allows loading non-class files in a namespaced manner.
Works with Helpers, Views, etc.</long-description>
        <tag name="todo" line="51" description="sanitize filenames prior to checking them..."/>
        <tag name="package" line="51" description="CodeIgniter"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="58" package="CodeIgniter">
        <name>$namespaces</name>
        <full_name>\CodeIgniter\Autoloader\FileLocator::namespaces</full_name>
        <default></default>
        <docblock line="58">
          <description>Stores our namespaces</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="67" package="CodeIgniter">
        <name>__construct</name>
        <full_name>\CodeIgniter\Autoloader\FileLocator::__construct()</full_name>
        <docblock line="67">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="67" description="" type="\Config\Autoload" variable="$autoload">
            <type>\Config\Autoload</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$autoload</name>
          <default></default>
          <type>\Config\Autoload</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="89" package="CodeIgniter">
        <name>locateFile</name>
        <full_name>\CodeIgniter\Autoloader\FileLocator::locateFile()</full_name>
        <docblock line="89">
          <description>Attempts to locate a file by examining the name for a namespace
and looking through the PSR-4 namespaced files that we know about.</description>
          <long-description></long-description>
          <tag name="param" line="89" description="&lt;p&gt;The namespaced file to locate&lt;/p&gt;" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="&lt;p&gt;The folder within the namespace that we should look for the file.&lt;/p&gt;" type="string" variable="$folder">
            <type>string</type>
          </tag>
          <tag name="param" line="89" description="&lt;p&gt;The file extension the file should have.&lt;/p&gt;" type="string" variable="$ext">
            <type>string</type>
          </tag>
          <tag name="return" line="89" description="The path to the file if found, or an empty string." type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ext</name>
          <default>'php'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="167" package="CodeIgniter">
        <name>legacyLocate</name>
        <full_name>\CodeIgniter\Autoloader\FileLocator::legacyLocate()</full_name>
        <docblock line="167">
          <description>Checks the application folder to see if the file can be found.</description>
          <long-description>Only for use with filenames that DO NOT include namespacing.</long-description>
          <tag name="param" line="167" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="param" line="167" description="" type="string|null" variable="$folder">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="param" line="167" description="" type="string" variable="$ext">
            <type>string</type>
          </tag>
          <tag name="return" line="167" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$folder</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="197" package="CodeIgniter">
        <name>requireFile</name>
        <full_name>\CodeIgniter\Autoloader\FileLocator::requireFile()</full_name>
        <docblock line="197">
          <description>Checks to see if a file exists on the file system. This is split
out to it's own method to make testing simpler.</description>
          <long-description></long-description>
          <tag name="codeCoverageIgnore" line="197" description=""/>
          <tag name="param" line="197" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="51">sanitize filenames prior to checking them...</todo>
    </markers>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <notice line="167" code="PPC:ERR-50013">Parameter $ext could not be found in legacyLocate()</notice>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Config.php" generated-path="Database.Config.html" hash="1073851edb88aaa283fceeedaea2b9ef" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <namespace-alias name="Database">\Config\Database</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="45" package="Default">
      <extends>\CodeIgniter\Config\BaseConfig</extends>
      <name>Config</name>
      <full_name>\CodeIgniter\Database\Config</full_name>
      <docblock line="45">
        <description>Class Config</description>
        <long-description>Not intended to be used on its own, this class will attempt to
automatically populate the child class' properties with values
from the environment.

These can be set within the .env file.</long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Config\BaseConfig" refers="\CodeIgniter\Config\BaseConfig" link="/classes/CodeIgniter.Config.BaseConfig.html"/>
      </docblock>
      <property static="true" visibility="protected" namespace="CodeIgniter\Database" line="53" package="Default">
        <name>$instances</name>
        <full_name>\CodeIgniter\Database\Config::instances</full_name>
        <default>array()</default>
        <docblock line="53">
          <description>Cache for instance of any connections that
have been requested as a "shared" instance.</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\Database" line="61" package="Default">
        <name>$factory</name>
        <full_name>\CodeIgniter\Database\Config::factory</full_name>
        <default></default>
        <docblock line="61">
          <description>The main instance used to manage all of
our open database connections.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\Database\Database" variable="">
            <type>\CodeIgniter\Database\Database</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Database" line="74" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\Config::connect()</full_name>
        <docblock line="74">
          <description>Creates the default</description>
          <long-description></long-description>
          <tag name="param" line="74" description="&lt;p&gt;The name of the connection group to use,&#10;                                or an array of configuration settings.&lt;/p&gt;" type="string|array" variable="$group">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="74" description="&lt;p&gt;Whether to return a shared instance of the connection.&lt;/p&gt;" type="boolean" variable="$getShared">
            <type>boolean</type>
          </tag>
          <tag name="return" line="74" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>null</default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$getShared</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Database" line="120" package="Default">
        <name>getConnections</name>
        <full_name>\CodeIgniter\Database\Config::getConnections()</full_name>
        <docblock line="120">
          <description>Returns an array of all db connections currently made.</description>
          <long-description></long-description>
          <tag name="return" line="120" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Database" line="133" package="Default">
        <name>forge</name>
        <full_name>\CodeIgniter\Database\Config::forge()</full_name>
        <docblock line="133">
          <description>Loads and returns an instance of the Forge for the specified
database group, and loads the group if it hasn't been loaded yet.</description>
          <long-description></long-description>
          <tag name="param" line="133" description="" type="string|null" variable="$group">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Database" line="170" package="Default">
        <name>utils</name>
        <full_name>\CodeIgniter\Database\Config::utils()</full_name>
        <docblock line="170">
          <description>Returns a new instance of the Database Utilities class.</description>
          <long-description></long-description>
          <tag name="param" line="170" description="" type="string|null" variable="$group">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="170" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Database" line="207" package="Default">
        <name>seeder</name>
        <full_name>\CodeIgniter\Database\Config::seeder()</full_name>
        <docblock line="207">
          <description>Returns a new instance of the Database Seeder.</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="string|null" variable="$group">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="207" description="" type="\CodeIgniter\Database\Seeder">
            <type>\CodeIgniter\Database\Seeder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="CodeIgniter\Database" line="221" package="Default">
        <name>ensureFactory</name>
        <full_name>\CodeIgniter\Database\Config::ensureFactory()</full_name>
        <docblock line="221">
          <description>Ensures the database Connection Manager/Factory is loaded and ready to use.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="54" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Config\BaseConfig::__construct()</full_name>
        <docblock line="54">
          <description>Will attempt to get environment variables with names
that match the properties of the child class.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\Config\BaseConfig</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="101" package="Default">
        <name>getEnvValue</name>
        <full_name>\CodeIgniter\Config\BaseConfig::getEnvValue()</full_name>
        <docblock line="101">
          <description>Retrieve an environment-specific configuration setting</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="param" line="101" description="" type="string" variable="$shortPrefix">
            <type>string</type>
          </tag>
          <tag name="return" line="101" description="" type="\CodeIgniter\Config\type">
            <type>\CodeIgniter\Config\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$shortPrefix</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Config\BaseConfig</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Autoloader/Autoloader.php" generated-path="Autoloader.Autoloader.html" hash="776cc4756d2b4ac373f83ff95d6fb81d" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Autoloader" line="77" package="CodeIgniter\Autoloader">
      <extends/>
      <name>Autoloader</name>
      <full_name>\CodeIgniter\Autoloader\Autoloader</full_name>
      <docblock line="77">
        <description>CodeIgniter Autoloader</description>
        <long-description>An autoloader that uses both PSR4 autoloading, and traditional classmaps.

Given a foo-bar package of classes in the file system at the following paths:

     /path/to/packages/foo-bar/
         /src
             Baz.php         # Foo\Bar\Baz
             Qux/
                 Quux.php    # Foo\Bar\Qux\Quux

you can add the path to the configuration array that is passed in the constructor.
The Config array consists of 2 primary keys, both of which are associative arrays:
'psr4', and 'classmap'.

     $Config = [
         'psr4' =&gt; [
             'Foo\Bar'   =&gt; '/path/to/packages/foo-bar'
         ],
         'classmap' =&gt; [
             'MyClass'   =&gt; '/path/to/class/file.php'
         ]
     ];

Example:

     &lt;?php
     // our configuration array
     $Config = [ ... ];
     $loader = new \CodeIgniter\Autoloader\Autoloader($Config);

     // register the autoloader
     $loader-&gt;register();</long-description>
        <tag name="package" line="77" description="CodeIgniter\Autoloader"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="85" package="CodeIgniter\Autoloader">
        <name>$prefixes</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::prefixes</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>Stores namespaces as key, and path as values.</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="92" package="CodeIgniter\Autoloader">
        <name>$classmap</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::classmap</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>Stores class name as key, and path as values.</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="102" package="CodeIgniter\Autoloader">
        <name>initialize</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::initialize()</full_name>
        <docblock line="102">
          <description>Reads in the configuration array (described above) and stores
the valid parts that we'll need.</description>
          <long-description></long-description>
          <tag name="param" line="102" description="" type="" variable="$config"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="131" package="CodeIgniter\Autoloader">
        <name>register</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::register()</full_name>
        <docblock line="131">
          <description>Register the loader with the SPL autoloader stack.</description>
          <long-description></long-description>
          <tag name="codeCoverageIgnore" line="131" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="170" package="CodeIgniter\Autoloader">
        <name>addNamespace</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::addNamespace()</full_name>
        <docblock line="170">
          <description>Registers a namespace with the autoloader.</description>
          <long-description></long-description>
          <tag name="param" line="170" description="" type="" variable="$namespace"/>
          <tag name="param" line="170" description="" type="" variable="$path"/>
          <tag name="return" line="170" description="" type="\CodeIgniter\Autoloader\Autoloader">
            <type>\CodeIgniter\Autoloader\Autoloader</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="199" package="CodeIgniter\Autoloader">
        <name>removeNamespace</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::removeNamespace()</full_name>
        <docblock line="199">
          <description>Removes a single namespace from the psr4 settings.</description>
          <long-description></long-description>
          <tag name="param" line="199" description="" type="" variable="$namespace"/>
          <tag name="return" line="199" description="" type="\CodeIgniter\Autoloader\Autoloader">
            <type>\CodeIgniter\Autoloader\Autoloader</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$namespace</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="216" package="CodeIgniter\Autoloader">
        <name>loadClass</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::loadClass()</full_name>
        <docblock line="216">
          <description>Loads the class file for a given class name.</description>
          <long-description></long-description>
          <tag name="param" line="216" description="&lt;p&gt;The fully qualified class name.&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="216" description="The mapped file on success, or boolean false&#10;                         on failure." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="242" package="CodeIgniter\Autoloader">
        <name>loadInNamespace</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::loadInNamespace()</full_name>
        <docblock line="242">
          <description>Loads the class file for a given class name.</description>
          <long-description></long-description>
          <tag name="param" line="242" description="&lt;p&gt;The fully-qualified class name&lt;/p&gt;" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="242" description="The mapped file name on success, or boolean false on fail" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="284" package="CodeIgniter\Autoloader">
        <name>loadLegacy</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::loadLegacy()</full_name>
        <docblock line="284">
          <description>Attempts to load the class from common locations in previous
version of CodeIgniter, namely 'application/libraries', and
'application/Models'.</description>
          <long-description></long-description>
          <tag name="param" line="284" description="&lt;p&gt;The class name. This typically should NOT have a namespace.&lt;/p&gt;" type="" variable="$class"/>
          <tag name="return" line="284" description="The mapped file name on success, or boolean false on failure" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Autoloader" line="324" package="CodeIgniter\Autoloader">
        <name>requireFile</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::requireFile()</full_name>
        <docblock line="324">
          <description>A central way to require a file is loaded. Split out primarily
for testing purposes.</description>
          <long-description></long-description>
          <tag name="codeCoverageIgnore" line="324" description=""/>
          <tag name="param" line="324" description="" type="" variable="$file"/>
          <tag name="return" line="324" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Autoloader" line="353" package="CodeIgniter\Autoloader">
        <name>sanitizeFilename</name>
        <full_name>\CodeIgniter\Autoloader\Autoloader::sanitizeFilename()</full_name>
        <docblock line="353">
          <description>Sanitizes a filename, replacing spaces with dashes.</description>
          <long-description>Removes special characters that are illegal in filenames on certain
operating systems and special characters requiring special escaping
to manipulate at the command line. Replaces spaces and consecutive
dashes with a single dash. Trim period, dash and underscore from beginning
and end of filename.</long-description>
          <tag name="param" line="353" description="" type="string" variable="$filename">
            <type>string</type>
          </tag>
          <tag name="return" line="353" description="The sanitized filename" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$filename</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Router/RouteCollectionInterface.php" generated-path="Router.RouteCollectionInterface.html" hash="689507dffaa6b3db2ca26e272eff61ae" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Router" line="51" package="CodeIgniter\Router">
      <name>RouteCollectionInterface</name>
      <full_name>\CodeIgniter\Router\RouteCollectionInterface</full_name>
      <docblock line="51">
        <description>Interface RouteCollectionInterface</description>
        <long-description>A Route Collection's sole job is to hold a series of routes. The required
number of methods is kept very small on purpose, but implementors may
add a number of additional methods to customize how the routes are defined.

The RouteCollection provides the Router with the routes so that it can determine
which controller should be ran.</long-description>
        <tag name="package" line="51" description="CodeIgniter\Router"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="62" package="CodeIgniter\Router">
        <name>add</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::add()</full_name>
        <docblock line="62">
          <description>Adds a single route to the collection.</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="param" line="62" description="" type="array|string" variable="$to">
            <type>array</type>
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$to</name>
          <default></default>
          <type>array|string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="79" package="CodeIgniter\Router">
        <name>addPlaceholder</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::addPlaceholder()</full_name>
        <docblock line="79">
          <description>Registers a new constraint with the system. Constraints are used
by the routes as placeholders for regular expressions to make defining
the routes more human-friendly.</description>
          <long-description>You can pass an associative array as $placeholder, and have
multiple placeholders added at once.</long-description>
          <tag name="param" line="79" description="" type="string|array" variable="$placeholder">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="79" description="" type="string" variable="$pattern">
            <type>string</type>
          </tag>
          <tag name="return" line="79" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$placeholder</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pattern</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="91" package="CodeIgniter\Router">
        <name>setDefaultNamespace</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::setDefaultNamespace()</full_name>
        <docblock line="91">
          <description>Sets the default namespace to use for Controllers when no other
namespace has been specified.</description>
          <long-description></long-description>
          <tag name="param" line="91" description="" type="" variable="$value"/>
          <tag name="return" line="91" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="103" package="CodeIgniter\Router">
        <name>setDefaultController</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::setDefaultController()</full_name>
        <docblock line="103">
          <description>Sets the default controller to use when no other controller has been
specified.</description>
          <long-description></long-description>
          <tag name="param" line="103" description="" type="" variable="$value"/>
          <tag name="return" line="103" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="115" package="CodeIgniter\Router">
        <name>setDefaultMethod</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::setDefaultMethod()</full_name>
        <docblock line="115">
          <description>Sets the default method to call on the controller when no other
method has been set in the route.</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="" variable="$value"/>
          <tag name="return" line="115" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="130" package="CodeIgniter\Router">
        <name>setTranslateURIDashes</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::setTranslateURIDashes()</full_name>
        <docblock line="130">
          <description>Tells the system whether to convert dashes in URI strings into
underscores. In some search engines, including Google, dashes
create more meaning and make it easier for the search engine to
find words and meaning in the URI for better SEO. But it
doesn't work well with PHP method names.</description>
          <long-description>...</long-description>
          <tag name="param" line="130" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="return" line="130" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="146" package="CodeIgniter\Router">
        <name>setAutoRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::setAutoRoute()</full_name>
        <docblock line="146">
          <description>If TRUE, the system will attempt to match the URI against
Controllers by matching each segment against folders/files
in APPPATH/Controllers, when a match wasn't found against
defined routes.</description>
          <long-description>If FALSE, will stop searching and do NO automatic routing.</long-description>
          <tag name="param" line="146" description="" type="boolean" variable="$value">
            <type>boolean</type>
          </tag>
          <tag name="return" line="146" description="" type="\CodeIgniter\Router\RouteCollection">
            <type>\CodeIgniter\Router\RouteCollection</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="161" package="CodeIgniter\Router">
        <name>set404Override</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::set404Override()</full_name>
        <docblock line="161">
          <description>Sets the class/method that should be called if routing doesn't
find a match. It can be either a closure or the controller/method
name exactly like a route is defined: Users::index</description>
          <long-description>This setting is passed to the Router class and handled there.</long-description>
          <tag name="param" line="161" description="" type="callable|null" variable="$callable">
            <type>callable</type>
            <type>null</type>
          </tag>
          <tag name="return" line="161" description="" type="\CodeIgniter\Router\RouteCollectionInterface">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$callable</name>
          <default>null</default>
          <type>callable|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="171" package="CodeIgniter\Router">
        <name>get404Override</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::get404Override()</full_name>
        <docblock line="171">
          <description>Returns the 404 Override setting, which can be null, a closure
or the controller/string.</description>
          <long-description></long-description>
          <tag name="return" line="171" description="" type="string|\Closure|null">
            <type>string</type>
            <type>\Closure</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="182" package="CodeIgniter\Router">
        <name>getDefaultController</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::getDefaultController()</full_name>
        <docblock line="182">
          <description>Returns the name of the default controller. With Namespace.</description>
          <long-description></long-description>
          <tag name="return" line="182" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="191" package="CodeIgniter\Router">
        <name>getDefaultMethod</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::getDefaultMethod()</full_name>
        <docblock line="191">
          <description>Returns the name of the default method to use within the controller.</description>
          <long-description></long-description>
          <tag name="return" line="191" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="202" package="CodeIgniter\Router">
        <name>shouldTranslateURIDashes</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::shouldTranslateURIDashes()</full_name>
        <docblock line="202">
          <description>Returns the current value of the translateURIDashses setting.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="boolean|false" variable="$val">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="202" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="211" package="CodeIgniter\Router">
        <name>shouldAutoRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::shouldAutoRoute()</full_name>
        <docblock line="211">
          <description>Returns the flag that tells whether to autoRoute URI against Controllers.</description>
          <long-description></long-description>
          <tag name="return" line="211" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="220" package="CodeIgniter\Router">
        <name>getRoutes</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::getRoutes()</full_name>
        <docblock line="220">
          <description>Returns the raw array of available routes.</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="229" package="CodeIgniter\Router">
        <name>getHTTPVerb</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::getHTTPVerb()</full_name>
        <docblock line="229">
          <description>Returns the current HTTP Verb being used.</description>
          <long-description></long-description>
          <tag name="return" line="229" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="250" package="CodeIgniter\Router">
        <name>reverseRoute</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::reverseRoute()</full_name>
        <docblock line="250">
          <description>Attempts to look up a route based on it's destination.</description>
          <long-description>If a route exists:

     'path/(:any)/(:any)' =&gt; 'Controller::method/$1/$2'

This method allows you to know the Controller and method
and get the route that leads to it.

     // Equals 'path/$param1/$param2'
     reverseRoute('Controller::method', $param1, $param2);</long-description>
          <tag name="param" line="250" description="" type="string" variable="$search">
            <type>string</type>
          </tag>
          <tag name="param" line="250" description="" type="\CodeIgniter\Router\...$params" variable="$params">
            <type>\CodeIgniter\Router\...$params</type>
          </tag>
          <tag name="return" line="250" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$search</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="261" package="CodeIgniter\Router">
        <name>isRedirect</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::isRedirect()</full_name>
        <docblock line="261">
          <description>Determines if the route is a redirecting route.</description>
          <long-description></long-description>
          <tag name="param" line="261" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="return" line="261" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="272" package="CodeIgniter\Router">
        <name>getRedirectCode</name>
        <full_name>\CodeIgniter\Router\RouteCollectionInterface::getRedirectCode()</full_name>
        <docblock line="272">
          <description>Grabs the HTTP status code from a redirecting Route.</description>
          <long-description></long-description>
          <tag name="param" line="272" description="" type="string" variable="$from">
            <type>string</type>
          </tag>
          <tag name="return" line="272" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/Postgre/Builder.php" generated-path="Database.Postgre.Builder.html" hash="024de8aab18399a47e03ac4259729029" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseBuilder">\CodeIgniter\Database\BaseBuilder</namespace-alias>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\Postgre" line="45" package="Default">
      <extends>\CodeIgniter\Database\BaseBuilder</extends>
      <name>Builder</name>
      <full_name>\CodeIgniter\Database\Postgre\Builder</full_name>
      <docblock line="45">
        <description>Builder for Postgre</description>
        <long-description>Provides the core Query Builder methods.
Database-specific Builders might need to override
certain methods to make them work.</long-description>
        <tag name="package" line="45" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder" refers="\CodeIgniter\Database\BaseBuilder" link="/classes/CodeIgniter.Database.BaseBuilder.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="52" package="Default">
        <name>$randomKeyword</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::randomKeyword</full_name>
        <default>array('RANDOM()', 'RANDOM()')</default>
        <docblock line="52">
          <description>ORDER BY random keyword</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="array" variable="">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::randomKeyword" refers="\CodeIgniter\Database\BaseBuilder::randomKeyword" link="/classes/CodeIgniter.Database.BaseBuilder.html#property_randomKeyword"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="57" package="CodeIgniter\Database">
        <name>$resetDeleteData</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetDeleteData</full_name>
        <default>false</default>
        <docblock line="57">
          <description>Reset DELETE data flag</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="64" package="CodeIgniter\Database">
        <name>$QBSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSelect</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>QB SELECT data</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="71" package="CodeIgniter\Database">
        <name>$QBDistinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBDistinct</full_name>
        <default>false</default>
        <docblock line="71">
          <description>QB DISTINCT flag</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="78" package="CodeIgniter\Database">
        <name>$QBFrom</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBFrom</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>QB FROM data</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="85" package="CodeIgniter\Database">
        <name>$QBJoin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBJoin</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>QB JOIN data</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="92" package="CodeIgniter\Database">
        <name>$QBWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhere</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>QB WHERE data</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="99" package="CodeIgniter\Database">
        <name>$QBGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBGroupBy</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>QB GROUP BY data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="106" package="CodeIgniter\Database">
        <name>$QBHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBHaving</full_name>
        <default>array()</default>
        <docblock line="106">
          <description>QB HAVING data</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="113" package="CodeIgniter\Database">
        <name>$QBKeys</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBKeys</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>QB keys</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="120" package="CodeIgniter\Database">
        <name>$QBLimit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBLimit</full_name>
        <default>false</default>
        <docblock line="120">
          <description>QB LIMIT data</description>
          <long-description></long-description>
          <tag name="var" line="120" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="127" package="CodeIgniter\Database">
        <name>$QBOffset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOffset</full_name>
        <default>false</default>
        <docblock line="127">
          <description>QB OFFSET data</description>
          <long-description></long-description>
          <tag name="var" line="127" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="134" package="CodeIgniter\Database">
        <name>$QBOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOrderBy</full_name>
        <default>array()</default>
        <docblock line="134">
          <description>QB ORDER BY data</description>
          <long-description></long-description>
          <tag name="var" line="134" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="141" package="CodeIgniter\Database">
        <name>$QBSet</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSet</full_name>
        <default>array()</default>
        <docblock line="141">
          <description>QB data sets</description>
          <long-description></long-description>
          <tag name="var" line="141" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="148" package="CodeIgniter\Database">
        <name>$QBAliasedTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBAliasedTables</full_name>
        <default>array()</default>
        <docblock line="148">
          <description>QB aliased tables list</description>
          <long-description></long-description>
          <tag name="var" line="148" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="155" package="CodeIgniter\Database">
        <name>$QBWhereGroupStarted</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupStarted</full_name>
        <default>false</default>
        <docblock line="155">
          <description>QB WHERE group started flag</description>
          <long-description></long-description>
          <tag name="var" line="155" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="162" package="CodeIgniter\Database">
        <name>$QBWhereGroupCount</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupCount</full_name>
        <default>0</default>
        <docblock line="162">
          <description>QB WHERE group count</description>
          <long-description></long-description>
          <tag name="var" line="162" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="169" package="CodeIgniter\Database">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::db</full_name>
        <default></default>
        <docblock line="169">
          <description>A reference to the database connection.</description>
          <long-description></long-description>
          <tag name="var" line="169" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="176" package="CodeIgniter\Database">
        <name>$randomKeyword</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::randomKeyword</full_name>
        <default>array('RAND()', 'RAND(%d)')</default>
        <docblock line="176">
          <description>ORDER BY random keyword</description>
          <long-description></long-description>
          <tag name="var" line="176" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="186" package="CodeIgniter\Database">
        <name>$countString</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countString</full_name>
        <default>'SELECT COUNT(*) AS '</default>
        <docblock line="186">
          <description>COUNT string</description>
          <long-description></long-description>
          <tag name="used-by" line="186" description="CI_DB_driver::count_all()"/>
          <tag name="used-by" line="186" description="BaseBuilder::count_all_results()"/>
          <tag name="var" line="186" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="195" package="CodeIgniter\Database">
        <name>$binds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::binds</full_name>
        <default>array()</default>
        <docblock line="195">
          <description>Collects the named parameters and
their values for later binding
in the Query object.</description>
          <long-description></long-description>
          <tag name="var" line="195" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="65" package="Default">
        <name>orderBy</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::orderBy()</full_name>
        <docblock line="65">
          <description>ORDER BY</description>
          <long-description></long-description>
          <tag name="param" line="65" description="" type="string" variable="$orderby">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="&lt;p&gt;ASC, DESC or RANDOM&lt;/p&gt;" type="string" variable="$direction">
            <type>string</type>
          </tag>
          <tag name="param" line="65" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="65" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::orderBy()" refers="\CodeIgniter\Database\BaseBuilder::orderBy()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method_orderBy"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orderby</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$direction</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="98" package="Default">
        <name>increment</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::increment()</full_name>
        <docblock line="98">
          <description>Increments a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="98" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::increment()" refers="\CodeIgniter\Database\BaseBuilder::increment()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method_increment"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="117" package="Default">
        <name>decrement</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::decrement()</full_name>
        <docblock line="117">
          <description>Decrements a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="117" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="117" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="117" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::decrement()" refers="\CodeIgniter\Database\BaseBuilder::decrement()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method_decrement"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="225" package="Default">
        <name>_limit</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::_limit()</full_name>
        <docblock line="225">
          <description>LIMIT string</description>
          <long-description>Generates a platform-specific LIMIT clause.</long-description>
          <tag name="param" line="225" description="&lt;p&gt;SQL Query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="225" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::_limit()" refers="\CodeIgniter\Database\BaseBuilder::_limit()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method__limit"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="270" package="Default">
        <name>_updateBatch</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::_updateBatch()</full_name>
        <docblock line="270">
          <description>Update_Batch statement</description>
          <long-description>Generates a platform-specific batch update string from the supplied data</long-description>
          <tag name="param" line="270" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;Update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="270" description="&lt;p&gt;WHERE key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="270" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::_updateBatch()" refers="\CodeIgniter\Database\BaseBuilder::_updateBatch()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method__updateBatch"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="310" package="Default">
        <name>_delete</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::_delete()</full_name>
        <docblock line="310">
          <description>Delete statement</description>
          <long-description>Generates a platform-specific delete string from the supplied data</long-description>
          <tag name="param" line="310" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="310" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::_delete()" refers="\CodeIgniter\Database\BaseBuilder::_delete()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method__delete"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="330" package="Default">
        <name>_truncate</name>
        <full_name>\CodeIgniter\Database\Postgre\Builder::_truncate()</full_name>
        <docblock line="330">
          <description>Truncate statement</description>
          <long-description>Generates a platform-specific truncate string from the supplied data

If the database does not support the truncate() command,
then this method maps to 'DELETE FROM table'</long-description>
          <tag name="param" line="330" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="330" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseBuilder::_truncate()" refers="\CodeIgniter\Database\BaseBuilder::_truncate()" link="/classes/CodeIgniter.Database.BaseBuilder.html#method__truncate"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="207" package="CodeIgniter\Database">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::__construct()</full_name>
        <docblock line="207">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\type" variable="$tableName">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="param" line="207" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="throws" line="207" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="236" package="CodeIgniter\Database">
        <name>getBinds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getBinds()</full_name>
        <docblock line="236">
          <description>Returns an array of bind values and their
named parameters for binding in the Query object later.</description>
          <long-description></long-description>
          <tag name="return" line="236" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="253" package="CodeIgniter\Database">
        <name>select</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::select()</full_name>
        <docblock line="253">
          <description>Select</description>
          <long-description>Generates the SELECT portion of the query</long-description>
          <tag name="param" line="253" description="" type="string|array" variable="$select">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="253" description="" type="mixed" variable="$escape">
            <type>mixed</type>
          </tag>
          <tag name="return" line="253" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="289" package="CodeIgniter\Database">
        <name>selectMax</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMax()</full_name>
        <docblock line="289">
          <description>Select Max</description>
          <long-description>Generates a SELECT MAX(field) portion of a query</long-description>
          <tag name="param" line="289" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="289" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="289" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="306" package="CodeIgniter\Database">
        <name>selectMin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMin()</full_name>
        <docblock line="306">
          <description>Select Min</description>
          <long-description>Generates a SELECT MIN(field) portion of a query</long-description>
          <tag name="param" line="306" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="306" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="306" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="323" package="CodeIgniter\Database">
        <name>selectAvg</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectAvg()</full_name>
        <docblock line="323">
          <description>Select Average</description>
          <long-description>Generates a SELECT AVG(field) portion of a query</long-description>
          <tag name="param" line="323" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="323" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="340" package="CodeIgniter\Database">
        <name>selectSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectSum()</full_name>
        <docblock line="340">
          <description>Select Sum</description>
          <long-description>Generates a SELECT SUM(field) portion of a query</long-description>
          <tag name="param" line="340" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="340" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="340" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="361" package="CodeIgniter\Database">
        <name>maxMinAvgSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::maxMinAvgSum()</full_name>
        <docblock line="361">
          <description>SELECT [MAX|MIN|AVG|SUM]()</description>
          <long-description></long-description>
          <tag name="used-by" line="361" description="selectMax()"/>
          <tag name="used-by" line="361" description="selectMin()"/>
          <tag name="used-by" line="361" description="selectAvg()"/>
          <tag name="used-by" line="361" description="selectSum()"/>
          <tag name="param" line="361" description="&lt;p&gt;Field name&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="361" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'MAX'</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="397" package="CodeIgniter\Database">
        <name>createAliasFromTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::createAliasFromTable()</full_name>
        <docblock line="397">
          <description>Determines the alias name based on the table</description>
          <long-description></long-description>
          <tag name="param" line="397" description="" type="string" variable="$item">
            <type>string</type>
          </tag>
          <tag name="return" line="397" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="420" package="CodeIgniter\Database">
        <name>distinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::distinct()</full_name>
        <docblock line="420">
          <description>DISTINCT</description>
          <long-description>Sets a flag which tells the query string compiler to add DISTINCT</long-description>
          <tag name="param" line="420" description="" type="boolean" variable="$val">
            <type>boolean</type>
          </tag>
          <tag name="return" line="420" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="439" package="CodeIgniter\Database">
        <name>from</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::from()</full_name>
        <docblock line="439">
          <description>From</description>
          <long-description>Generates the FROM portion of the query</long-description>
          <tag name="param" line="439" description="&lt;p&gt;can be a string or array&lt;/p&gt;" type="mixed" variable="$from">
            <type>mixed</type>
          </tag>
          <tag name="param" line="439" description="&lt;p&gt;Should we remove the first table existing?&lt;/p&gt;" type="boolean" variable="$overwrite">
            <type>boolean</type>
          </tag>
          <tag name="return" line="439" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overwrite</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="488" package="CodeIgniter\Database">
        <name>join</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::join()</full_name>
        <docblock line="488">
          <description>JOIN</description>
          <long-description>Generates the JOIN portion of the query</long-description>
          <tag name="param" line="488" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the join condition&lt;/p&gt;" type="string" variable="$cond">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the type of join&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;whether not to try to escape identifiers&lt;/p&gt;" type="string" variable="$escape">
            <type>string</type>
          </tag>
          <tag name="return" line="488" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$cond</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="578" package="CodeIgniter\Database">
        <name>where</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::where()</full_name>
        <docblock line="578">
          <description>WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="578" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="578" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="597" package="CodeIgniter\Database">
        <name>orWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhere()</full_name>
        <docblock line="597">
          <description>OR WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="597" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="597" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="620" package="CodeIgniter\Database">
        <name>whereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereHaving()</full_name>
        <docblock line="620">
          <description>WHERE, HAVING</description>
          <long-description></long-description>
          <tag name="used-by" line="620" description="where()"/>
          <tag name="used-by" line="620" description="orWhere()"/>
          <tag name="used-by" line="620" description="having()"/>
          <tag name="used-by" line="620" description="orHaving()"/>
          <tag name="param" line="620" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="620" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="684" package="CodeIgniter\Database">
        <name>whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereIn()</full_name>
        <docblock line="684">
          <description>WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="684" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="684" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="684" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="684" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="703" package="CodeIgniter\Database">
        <name>orWhereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereIn()</full_name>
        <docblock line="703">
          <description>OR WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="703" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="703" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="703" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="703" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="722" package="CodeIgniter\Database">
        <name>whereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereNotIn()</full_name>
        <docblock line="722">
          <description>WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="722" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="722" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="722" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="741" package="CodeIgniter\Database">
        <name>orWhereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereNotIn()</full_name>
        <docblock line="741">
          <description>OR WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="741" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="741" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="741" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="741" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="764" package="CodeIgniter\Database">
        <name>_whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_whereIn()</full_name>
        <docblock line="764">
          <description>Internal WHERE IN</description>
          <long-description></long-description>
          <tag name="used-by" line="764" description="WhereIn()"/>
          <tag name="used-by" line="764" description="orWhereIn()"/>
          <tag name="used-by" line="764" description="whereNotIn()"/>
          <tag name="used-by" line="764" description="orWhereNotIn()"/>
          <tag name="param" line="764" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;If the statement would be IN or NOT IN&lt;/p&gt;" type="boolean" variable="$not">
            <type>boolean</type>
          </tag>
          <tag name="param" line="764" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="764" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="819" package="CodeIgniter\Database">
        <name>like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::like()</full_name>
        <docblock line="819">
          <description>LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="819" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="819" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="839" package="CodeIgniter\Database">
        <name>notLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notLike()</full_name>
        <docblock line="839">
          <description>NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="839" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="839" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="859" package="CodeIgniter\Database">
        <name>orLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orLike()</full_name>
        <docblock line="859">
          <description>OR LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="859" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="859" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="879" package="CodeIgniter\Database">
        <name>orNotLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotLike()</full_name>
        <docblock line="879">
          <description>OR NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="879" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="903" package="CodeIgniter\Database">
        <name>_like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_like()</full_name>
        <docblock line="903">
          <description>Internal LIKE</description>
          <long-description></long-description>
          <tag name="used-by" line="903" description="like()"/>
          <tag name="used-by" line="903" description="orLike()"/>
          <tag name="used-by" line="903" description="notLike()"/>
          <tag name="used-by" line="903" description="orNotLike()"/>
          <tag name="param" line="903" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="903" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="961" package="CodeIgniter\Database">
        <name>groupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupStart()</full_name>
        <docblock line="961">
          <description>Starts a query group.</description>
          <long-description></long-description>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="961" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="985" package="CodeIgniter\Database">
        <name>orGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orGroupStart()</full_name>
        <docblock line="985">
          <description>Starts a query group, but ORs the group</description>
          <long-description></long-description>
          <tag name="return" line="985" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="997" package="CodeIgniter\Database">
        <name>notGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notGroupStart()</full_name>
        <docblock line="997">
          <description>Starts a query group, but NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="997" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1009" package="CodeIgniter\Database">
        <name>orNotGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotGroupStart()</full_name>
        <docblock line="1009">
          <description>Starts a query group, but OR NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="1009" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1021" package="CodeIgniter\Database">
        <name>groupEnd</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupEnd()</full_name>
        <docblock line="1021">
          <description>Ends a query group</description>
          <long-description></long-description>
          <tag name="return" line="1021" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1048" package="CodeIgniter\Database">
        <name>groupGetType</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupGetType()</full_name>
        <docblock line="1048">
          <description>Group_get_type</description>
          <long-description></long-description>
          <tag name="used-by" line="1048" description="groupStart()"/>
          <tag name="used-by" line="1048" description="_like()"/>
          <tag name="used-by" line="1048" description="whereHaving()"/>
          <tag name="used-by" line="1048" description="_whereIn()"/>
          <tag name="param" line="1048" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="1048" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1069" package="CodeIgniter\Database">
        <name>groupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupBy()</full_name>
        <docblock line="1069">
          <description>GROUP BY</description>
          <long-description></long-description>
          <tag name="param" line="1069" description="" type="string" variable="$by">
            <type>string</type>
          </tag>
          <tag name="param" line="1069" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1069" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$by</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1108" package="CodeIgniter\Database">
        <name>having</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::having()</full_name>
        <docblock line="1108">
          <description>HAVING</description>
          <long-description>Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="1108" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1108" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1126" package="CodeIgniter\Database">
        <name>orHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orHaving()</full_name>
        <docblock line="1126">
          <description>OR HAVING</description>
          <long-description>Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="1126" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1126" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1142" package="CodeIgniter\Database">
        <name>orderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orderBy()</full_name>
        <docblock line="1142">
          <description>ORDER BY</description>
          <long-description></long-description>
          <tag name="param" line="1142" description="" type="string" variable="$orderby">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="&lt;p&gt;ASC, DESC or RANDOM&lt;/p&gt;" type="string" variable="$direction">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1142" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orderby</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$direction</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1201" package="CodeIgniter\Database">
        <name>limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::limit()</full_name>
        <docblock line="1201">
          <description>LIMIT</description>
          <long-description></long-description>
          <tag name="param" line="1201" description="&lt;p&gt;LIMIT value&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="param" line="1201" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1201" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1225" package="CodeIgniter\Database">
        <name>offset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::offset()</full_name>
        <docblock line="1225">
          <description>Sets the OFFSET value</description>
          <long-description></long-description>
          <tag name="param" line="1225" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1225" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1246" package="CodeIgniter\Database">
        <name>_limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_limit()</full_name>
        <docblock line="1246">
          <description>LIMIT string</description>
          <long-description>Generates a platform-specific LIMIT clause.</long-description>
          <tag name="param" line="1246" description="&lt;p&gt;SQL Query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="1246" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1264" package="CodeIgniter\Database">
        <name>set</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::set()</full_name>
        <docblock line="1264">
          <description>The "set" function.</description>
          <long-description>Allows key/value pairs to be set for inserting or updating</long-description>
          <tag name="param" line="1264" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1264" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1264" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1264" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1295" package="CodeIgniter\Database">
        <name>getCompiledSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledSelect()</full_name>
        <docblock line="1295">
          <description>Get SELECT query string</description>
          <long-description>Compiles a SELECT query string and returns the sql.</long-description>
          <tag name="param" line="1295" description="&lt;p&gt;TRUE: resets QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1295" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1321" package="CodeIgniter\Database">
        <name>get</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::get()</full_name>
        <docblock line="1321">
          <description>Get</description>
          <long-description>Compiles the select statement based on the other functions called
and runs the query</long-description>
          <tag name="param" line="1321" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="string" variable="$limit">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;the offset clause&lt;/p&gt;" type="string" variable="$offset">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;If true, returns the generate SQL, otherwise executes the query.&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1321" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1348" package="CodeIgniter\Database">
        <name>countAll</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAll()</full_name>
        <docblock line="1348">
          <description>"Count All" query</description>
          <long-description>Generates a platform-specific query string that counts all records in
the specified database</long-description>
          <tag name="param" line="1348" description="&lt;p&gt;Are we running automated tests?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1348" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1385" package="CodeIgniter\Database">
        <name>countAllResults</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAllResults()</full_name>
        <docblock line="1385">
          <description>"Count All Results" query</description>
          <long-description>Generates a platform-specific query string that counts all records
returned by an Query Builder query.</long-description>
          <tag name="param" line="1385" description="" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="1385" description="&lt;p&gt;the reset clause&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1385" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1441" package="CodeIgniter\Database">
        <name>getWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getWhere()</full_name>
        <docblock line="1441">
          <description>Get_Where</description>
          <long-description>Allows the where clause, limit and offset to be added directly</long-description>
          <tag name="param" line="1441" description="" type="string" variable="$where">
            <type>string</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1441" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1475" package="CodeIgniter\Database">
        <name>insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insertBatch()</full_name>
        <docblock line="1475">
          <description>Insert_Batch</description>
          <long-description>Compiles batch insert strings and runs the queries</long-description>
          <tag name="param" line="1475" description="&lt;p&gt;An associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1475" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1475" description="" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1475" description="" type="boolean" variable="$testing">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1475" description="Number of rows inserted or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="1475" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testing</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1545" package="CodeIgniter\Database">
        <name>_insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insertBatch()</full_name>
        <docblock line="1545">
          <description>Insert batch statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data.</long-description>
          <tag name="param" line="1545" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1545" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1561" package="CodeIgniter\Database">
        <name>setInsertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setInsertBatch()</full_name>
        <docblock line="1561">
          <description>The "setInsertBatch" function.  Allows key/value pairs to be set for batch inserts</description>
          <long-description></long-description>
          <tag name="param" line="1561" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1561" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1561" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1561" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1618" package="CodeIgniter\Database">
        <name>getCompiledInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledInsert()</full_name>
        <docblock line="1618">
          <description>Get INSERT query string</description>
          <long-description>Compiles an insert query and returns the sql</long-description>
          <tag name="param" line="1618" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1618" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1654" package="CodeIgniter\Database">
        <name>insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insert()</full_name>
        <docblock line="1654">
          <description>Insert</description>
          <long-description>Compiles an insert string and runs the query</long-description>
          <tag name="param" line="1654" description="&lt;p&gt;an associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Used when running tests&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1654" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1695" package="CodeIgniter\Database">
        <name>validateInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateInsert()</full_name>
        <docblock line="1695">
          <description>Validate Insert</description>
          <long-description>This method is used by both insert() and getCompiledInsert() to
validate that the there data is actually being set and that table
has been chosen to be inserted into.</long-description>
          <tag name="param" line="1695" description="&lt;p&gt;the table to insert data into&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="return" line="1695" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1723" package="CodeIgniter\Database">
        <name>_insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insert()</full_name>
        <docblock line="1723">
          <description>Insert statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data</long-description>
          <tag name="param" line="1723" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$unescapedKeys">
            <type>array</type>
          </tag>
          <tag name="return" line="1723" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$unescapedKeys</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1782" package="CodeIgniter\Database">
        <name>_replace</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_replace()</full_name>
        <docblock line="1782">
          <description>Replace statement</description>
          <long-description>Generates a platform-specific replace string from the supplied data</long-description>
          <tag name="param" line="1782" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1782" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1799" package="CodeIgniter\Database">
        <name>_fromTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_fromTables()</full_name>
        <docblock line="1799">
          <description>FROM tables</description>
          <long-description>Groups tables in FROM clauses if needed, so there is no confusion
about operator precedence.

Note: This is only used (and overridden) by MySQL and CUBRID.</long-description>
          <tag name="return" line="1799" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1815" package="CodeIgniter\Database">
        <name>getCompiledUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledUpdate()</full_name>
        <docblock line="1815">
          <description>Get UPDATE query string</description>
          <long-description>Compiles an update query and returns the sql</long-description>
          <tag name="param" line="1815" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1815" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1846" package="CodeIgniter\Database">
        <name>update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::update()</full_name>
        <docblock line="1846">
          <description>UPDATE</description>
          <long-description>Compiles an update string and runs the query.</long-description>
          <tag name="param" line="1846" description="&lt;p&gt;An associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1846" description="" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1846" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1846" description="&lt;p&gt;Are we testing the code?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1846" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1893" package="CodeIgniter\Database">
        <name>_update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_update()</full_name>
        <docblock line="1893">
          <description>Update statement</description>
          <long-description>Generates a platform-specific update string from the supplied data</long-description>
          <tag name="param" line="1893" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1893" description="&lt;p&gt;the update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1893" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1918" package="CodeIgniter\Database">
        <name>validateUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateUpdate()</full_name>
        <docblock line="1918">
          <description>Validate Update</description>
          <long-description>This method is used by both update() and getCompiledUpdate() to
validate that data is actually being set and that a table has been
chosen to be update.</long-description>
          <tag name="return" line="1918" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1947" package="CodeIgniter\Database">
        <name>updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::updateBatch()</full_name>
        <docblock line="1947">
          <description>Update_Batch</description>
          <long-description>Compiles an update string and runs the query</long-description>
          <tag name="param" line="1947" description="&lt;p&gt;an associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;the where key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;The size of the batch to run&lt;/p&gt;" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;true means SQL is returned, false will execute the query&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1947" description="number of rows affected or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2027" package="CodeIgniter\Database">
        <name>_updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_updateBatch()</full_name>
        <docblock line="2027">
          <description>Update_Batch statement</description>
          <long-description>Generates a platform-specific batch update string from the supplied data</long-description>
          <tag name="param" line="2027" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;Update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;WHERE key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="2027" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2067" package="CodeIgniter\Database">
        <name>setUpdateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setUpdateBatch()</full_name>
        <docblock line="2067">
          <description>The "setUpdateBatch" function.  Allows key/value pairs to be set for batch updating</description>
          <long-description></long-description>
          <tag name="param" line="2067" description="" type="array" variable="$key">
            <type>array</type>
          </tag>
          <tag name="param" line="2067" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="2067" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2067" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2115" package="CodeIgniter\Database">
        <name>emptyTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::emptyTable()</full_name>
        <docblock line="2115">
          <description>Empty Table</description>
          <long-description>Compiles a delete string and runs "DELETE FROM table"</long-description>
          <tag name="param" line="2115" description="" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2115" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2144" package="CodeIgniter\Database">
        <name>truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::truncate()</full_name>
        <docblock line="2144">
          <description>Truncate</description>
          <long-description>Compiles a truncate string and runs the query
If the database does not support the truncate() command
This function maps to "DELETE FROM table"</long-description>
          <tag name="param" line="2144" description="&lt;p&gt;Whether we're in test mode or not.&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2144" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2174" package="CodeIgniter\Database">
        <name>_truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_truncate()</full_name>
        <docblock line="2174">
          <description>Truncate statement</description>
          <long-description>Generates a platform-specific truncate string from the supplied data

If the database does not support the truncate() command,
then this method maps to 'DELETE FROM table'</long-description>
          <tag name="param" line="2174" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2174" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2191" package="CodeIgniter\Database">
        <name>getCompiledDelete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledDelete()</full_name>
        <docblock line="2191">
          <description>Get DELETE query string</description>
          <long-description>Compiles a delete query string and returns the sql</long-description>
          <tag name="param" line="2191" description="&lt;p&gt;the table to delete from&lt;/p&gt;" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="2191" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2191" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2216" package="CodeIgniter\Database">
        <name>delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::delete()</full_name>
        <docblock line="2216">
          <description>Delete</description>
          <long-description>Compiles a delete string and runs the query</long-description>
          <tag name="param" line="2216" description="&lt;p&gt;the where clause&lt;/p&gt;" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="mixed" variable="$limit">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$reset_data">
            <type>boolean</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2216" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>''</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reset_data</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2265" package="CodeIgniter\Database">
        <name>increment</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::increment()</full_name>
        <docblock line="2265">
          <description>Increments a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2265" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2265" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2265" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2284" package="CodeIgniter\Database">
        <name>decrement</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::decrement()</full_name>
        <docblock line="2284">
          <description>Decrements a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2284" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2284" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2284" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2304" package="CodeIgniter\Database">
        <name>_delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_delete()</full_name>
        <docblock line="2304">
          <description>Delete statement</description>
          <long-description>Generates a platform-specific delete string from the supplied data</long-description>
          <tag name="param" line="2304" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2304" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2321" package="CodeIgniter\Database">
        <name>trackAliases</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::trackAliases()</full_name>
        <docblock line="2321">
          <description>Track Aliases</description>
          <long-description>Used to track SQL statements written with aliased tables.</long-description>
          <tag name="param" line="2321" description="&lt;p&gt;The table to inspect&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2321" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2369" package="CodeIgniter\Database">
        <name>compileSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileSelect()</full_name>
        <docblock line="2369">
          <description>Compile the SELECT statement</description>
          <long-description>Generates a query string based on which functions were used.
Should not be called directly.</long-description>
          <tag name="param" line="2369" description="" type="boolean" variable="$select_override">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2369" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select_override</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2440" package="CodeIgniter\Database">
        <name>compileWhereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileWhereHaving()</full_name>
        <docblock line="2440">
          <description>Compile WHERE, HAVING statements</description>
          <long-description>Escapes identifiers in WHERE and HAVING statements at execution time.

Required so that aliases are tracked properly, regardless of whether
where(), orWhere(), having(), orHaving are called prior to from(),
join() and prefixTable is added only if needed.</long-description>
          <tag name="param" line="2440" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="return" line="2440" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2518" package="CodeIgniter\Database">
        <name>compileGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileGroupBy()</full_name>
        <docblock line="2518">
          <description>Compile GROUP BY</description>
          <long-description>Escapes identifiers in GROUP BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
groupBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2518" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2555" package="CodeIgniter\Database">
        <name>compileOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileOrderBy()</full_name>
        <docblock line="2555">
          <description>Compile ORDER BY</description>
          <long-description>Escapes identifiers in ORDER BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
orderBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2555" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2590" package="CodeIgniter\Database">
        <name>objectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::objectToArray()</full_name>
        <docblock line="2590">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2590" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2590" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2621" package="CodeIgniter\Database">
        <name>batchObjectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::batchObjectToArray()</full_name>
        <docblock line="2621">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2621" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2621" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2659" package="CodeIgniter\Database">
        <name>isLiteral</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::isLiteral()</full_name>
        <docblock line="2659">
          <description>Is literal</description>
          <long-description>Determines if a string represents a literal value or a field name</long-description>
          <tag name="param" line="2659" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2659" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="2690" package="CodeIgniter\Database">
        <name>resetQuery</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetQuery()</full_name>
        <docblock line="2690">
          <description>Reset Query Builder values.</description>
          <long-description>Publicly-visible method to reset the QB values.</long-description>
          <tag name="return" line="2690" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2707" package="CodeIgniter\Database">
        <name>resetRun</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetRun()</full_name>
        <docblock line="2707">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="param" line="2707" description="&lt;p&gt;An array of fields to reset&lt;/p&gt;" type="array" variable="$qb_reset_items">
            <type>array</type>
          </tag>
          <tag name="return" line="2707" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_reset_items</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2722" package="CodeIgniter\Database">
        <name>resetSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetSelect()</full_name>
        <docblock line="2722">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="return" line="2722" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2748" package="CodeIgniter\Database">
        <name>resetWrite</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetWrite()</full_name>
        <docblock line="2748">
          <description>Resets the query builder "write" values.</description>
          <long-description>Called by the insert() update() insertBatch() updateBatch() and delete() functions</long-description>
          <tag name="return" line="2748" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2769" package="CodeIgniter\Database">
        <name>hasOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::hasOperator()</full_name>
        <docblock line="2769">
          <description>Tests whether the string has an SQL operator</description>
          <long-description></long-description>
          <tag name="param" line="2769" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2769" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2784" package="CodeIgniter\Database">
        <name>getOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getOperator()</full_name>
        <docblock line="2784">
          <description>Returns the SQL string operator</description>
          <long-description></long-description>
          <tag name="param" line="2784" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2784" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="2823" package="CodeIgniter\Database">
        <name>setBind</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setBind()</full_name>
        <docblock line="2823">
          <description>Stores a bind value after ensuring that it's unique.</description>
          <long-description></long-description>
          <tag name="param" line="2823" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2823" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="2823" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseBuilder</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Controller.php" generated-path="Controller.html" hash="0711df681d338424fc1ce5024d2b0bab" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RequestInterface">\CodeIgniter\HTTP\RequestInterface</namespace-alias>
    <namespace-alias name="ResponseInterface">\CodeIgniter\HTTP\ResponseInterface</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <namespace-alias name="Logger">\CodeIgniter\Log\Logger</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter" line="49" package="CodeIgniter">
      <extends/>
      <name>Controller</name>
      <full_name>\CodeIgniter\Controller</full_name>
      <docblock line="49">
        <description>Class Controller</description>
        <long-description></long-description>
        <tag name="package" line="49" description="CodeIgniter"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="57" package="CodeIgniter">
        <name>$helpers</name>
        <full_name>\CodeIgniter\Controller::helpers</full_name>
        <default>array()</default>
        <docblock line="57">
          <description>An array of helpers to be automatically loaded
upon class instantiation.</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="66" package="CodeIgniter">
        <name>$request</name>
        <full_name>\CodeIgniter\Controller::request</full_name>
        <default></default>
        <docblock line="66">
          <description>Instance of the main Request object.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="73" package="CodeIgniter">
        <name>$response</name>
        <full_name>\CodeIgniter\Controller::response</full_name>
        <default></default>
        <docblock line="73">
          <description>Instance of the main response object.</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="79" package="CodeIgniter">
        <name>$logger</name>
        <full_name>\CodeIgniter\Controller::logger</full_name>
        <default></default>
        <docblock line="79">
          <description>Instance of logger to use.</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="\CodeIgniter\Log\Logger" variable="">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="87" package="CodeIgniter">
        <name>$forceHTTPS</name>
        <full_name>\CodeIgniter\Controller::forceHTTPS</full_name>
        <default>0</default>
        <docblock line="87">
          <description>Whether HTTPS access should be enforced
for all methods in this controller.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="&lt;p&gt;Number of seconds to set HSTS header&lt;/p&gt;" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="98" package="CodeIgniter">
        <name>__construct</name>
        <full_name>\CodeIgniter\Controller::__construct()</full_name>
        <docblock line="98">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
          <tag name="param" line="98" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
            <type>\CodeIgniter\HTTP\ResponseInterface</type>
          </tag>
          <tag name="param" line="98" description="" type="\CodeIgniter\Log\Logger" variable="$logger">
            <type>\CodeIgniter\Log\Logger</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default>null</default>
          <type>\CodeIgniter\Log\Logger</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="128" package="CodeIgniter">
        <name>forceHTTPS</name>
        <full_name>\CodeIgniter\Controller::forceHTTPS()</full_name>
        <docblock line="128">
          <description>A convenience method to use when you need to ensure that a single
method is reached only via HTTPS. If it isn't, then a redirect
will happen back to this method and HSTS header will be sent
to have modern browsers transform requests automatically.</description>
          <long-description></long-description>
          <tag name="param" line="128" description="&lt;p&gt;The number of seconds this link should be&#10;                     considered secure for. Only with HSTS header.&#10;                     Default value is 1 year.&lt;/p&gt;" type="integer" variable="$duration">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$duration</name>
          <default>31536000</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="138" package="CodeIgniter">
        <name>loadHelpers</name>
        <full_name>\CodeIgniter\Controller::loadHelpers()</full_name>
        <docblock line="138">
          <description>Handles "auto-loading" helper files.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Toolbar.php" generated-path="Debug.Toolbar.html" hash="c69fcbd7a50411aad0bf5ce619f384d0" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug" line="14" package="CodeIgniter\Debug">
      <extends/>
      <name>Toolbar</name>
      <full_name>\CodeIgniter\Debug\Toolbar</full_name>
      <docblock line="14">
        <description>Debug Toolbar</description>
        <long-description>Displays a toolbar with bits of stats to aid a developer in debugging.

Inspiration: http://prophiler.fabfuel.de</long-description>
        <tag name="package" line="14" description="CodeIgniter\Debug"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="21" package="CodeIgniter\Debug">
        <name>$collectors</name>
        <full_name>\CodeIgniter\Debug\Toolbar::collectors</full_name>
        <default>array()</default>
        <docblock line="21">
          <description>Collectors to be used and displayed.</description>
          <long-description></long-description>
          <tag name="var" line="21" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="26" package="CodeIgniter\Debug">
        <name>$startTime</name>
        <full_name>\CodeIgniter\Debug\Toolbar::startTime</full_name>
        <default></default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag name="var" line="26" description="&lt;p&gt;App start time&lt;/p&gt;" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="35" package="CodeIgniter\Debug">
        <name>__construct</name>
        <full_name>\CodeIgniter\Debug\Toolbar::__construct()</full_name>
        <docblock line="35">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="35" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="61" package="CodeIgniter\Debug">
        <name>run</name>
        <full_name>\CodeIgniter\Debug\Toolbar::run()</full_name>
        <docblock line="61">
          <description>Run</description>
          <long-description></long-description>
          <tag name="param" line="61" description="" type="\CodeIgniter\Debug\type" variable="$startTime">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
          <tag name="param" line="61" description="" type="\CodeIgniter\Debug\type" variable="$totalTime">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
          <tag name="param" line="61" description="" type="\CodeIgniter\Debug\type" variable="$startMemory">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
          <tag name="param" line="61" description="" type="\CodeIgniter\Debug\type" variable="$request">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
          <tag name="param" line="61" description="" type="\CodeIgniter\Debug\type" variable="$response">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
          <tag name="return" line="61" description="" type="\CodeIgniter\Debug\type">
            <type>\CodeIgniter\Debug\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$startTime</name>
          <default></default>
          <type>\CodeIgniter\Debug\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$totalTime</name>
          <default></default>
          <type>\CodeIgniter\Debug\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$startMemory</name>
          <default></default>
          <type>\CodeIgniter\Debug\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\Debug\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$response</name>
          <default></default>
          <type>\CodeIgniter\Debug\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="91" package="CodeIgniter\Debug">
        <name>renderTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar::renderTimeline()</full_name>
        <docblock line="91">
          <description>Called within the view to display the timeline itself.</description>
          <long-description></long-description>
          <tag name="param" line="91" description="" type="integer" variable="$segmentCount">
            <type>integer</type>
          </tag>
          <tag name="param" line="91" description="" type="integer" variable="$segmentDuration">
            <type>integer</type>
          </tag>
          <tag name="return" line="91" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$segmentCount</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$segmentDuration</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="128" package="CodeIgniter\Debug">
        <name>collectTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar::collectTimelineData()</full_name>
        <docblock line="128">
          <description>Returns a sorted array of timeline data arrays from the collectors.</description>
          <long-description></long-description>
          <tag name="return" line="128" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="157" package="CodeIgniter\Debug">
        <name>collectVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar::collectVarData()</full_name>
        <docblock line="157">
          <description>Returns an array of data from all of the modules
that should be displayed in the 'Vars' tab.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug" line="184" package="CodeIgniter\Debug">
        <name>roundTo</name>
        <full_name>\CodeIgniter\Debug\Toolbar::roundTo()</full_name>
        <docblock line="184">
          <description>Rounds a number to the nearest incremental value.</description>
          <long-description></long-description>
          <tag name="param" line="184" description="" type="" variable="$number"/>
          <tag name="param" line="184" description="" type="integer" variable="$increments">
            <type>integer</type>
          </tag>
          <tag name="return" line="184" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$number</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$increments</name>
          <default>5</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9F9tO40b0OfmKAbGyg5KYbUu34pLuFl6Q2heK9oVF1sQ+TkY7nnFnxrAI5d975hJfcOChguYB7HO/n+Oz36t1RQQtQVc0A3Ihc7haCWZAfbuEZb06HY9r3YdfSFGw1bc/qAb/iDTJ4eGYHBLHQm6k5EuqEOBgTFecPmpCifEI8sDMmiyZ0UQWRBuKD0YSynKkyeEeuKxAESbwBeWtmFjNg7AroSumqGFSnJC1MdVJklRKVmvGQc0Luixq4PMcAvlndOo7Xe3wC7HJOONU68bcp/HIujFCvgvJOWRGKmfYEgjGAI0TOcm9N5DPLaEj/nyPLlGl6KN9TcYjNMggN3IcZK2gc3J7h5FqdDi2gktqyJeqsmFQhhhWwlCKw90gyvEnszf4jbvOCm1Uba107966iipakjbJ1hf7f2tdveQsI0UtMpsMkqbZVkw8ZJqMRxjdUSEV0GxN4gCeLUJFdOJNdSdqyOcYR6wgMdkjLmEp/GDa6LhDZuk8IYaHfDYyl+RPuSJmzfSeA6NCw0SNEcSXzdj+PbDY2aJN0e0dJknAQ8eAeGIZNmPH8uaRv67FIOLmsYJOxocoIw3lu1GO6y8opXocIhX8U4M2uxC6wtwFeQpMrYRDvZBqVYu4NXDasWjaM2Ha6Jy2SiYnWOkKO9pXRMhBIw0T0K92m89LaijB1i2170M7PnA4mDWQewYPcyun12iDzDpJrZ3E/847pqPrH4+Ojk4bOu9DoBN1uQSVYv2W1MRx6XDpCkxaAf2e1hpnTDwhs57/E5KgzF9+O/7065T87ArpQMOqBGEuaz/DWluVrEV+I+OORQn5NCXHPb4LpDLepJgJM8mA8T7Lcw2eHUeNCyLpeN4N0VePt9WO5HKZOjd88TOR8TqHOE0vr67TdB4lYWAmXzH4Sejguan4HHdJ5BXK2lS1QT0oy4bJth9apb1IBILI04wDFUFnKLvAePpODXdB0d1BAdkZH+a6g9khzJkArDkNvOhMet82GHnSy8hLyG0Sep21Lf9nQ75tLwwNqJtgQzxQNt2p4nlfBX+anurWz+GA2/eHkg/D7tka0qmPNrtR5ADtXHci7AjHh2Z4b+nn52T/zKjF/ukQmi+eLM9tZG+R6G5zliDoVcJMljhR0IlXqTEqjxzOIwM/zIxytsK7QbHV2kSL/Xm/rb3YPIQkugsjYUp+msz3SalfUYKxwvtJnEdPvUhvoq16eQ8Kd/0DHi0sz0FEVpCXVBQabCzjOFjgeg/Vz8jz6TgJJuFkcUutl+bJyCG9fRzECm8sK/UFt+x06rGTwD7wz3rmNy+GESlV4xWHwpyQp+DD5sMpdlZu1hbkDUBQhO1kLPEg3J7Eh/dDtDhLrKI2Lh0LQuB3wEMxbf6/EXLttNhrVktlG9ddfvaQbcZGbketA2tSKFm6odIuo848CSbvPh6bibCzE0+2XL7drcrthWl3ZriocIT1+vP5Ynzl3NrrIGaLNdV9/Z2Ta9dtFQxyNqZYM7gfHWzak2r6IptUogN/Y3St9d3MWgHvnlfRZtQ54TKIe8OlGBNZyrzmoB2TWeP1rtey5rn9Smg+DkjYLhEuVo0dQJf/NenNZsaQvJbyt0lxo+1NsouLvxU4aNN3Taa9pmyP+pFjF7xNhwCKdyiWlcgU2ClNObmnvIbBire/A888WO4Ntx7k1H3OvbLat0eelzztysJwHofPpD70ox3ULaR7LcX+/gtOHnbJJn2uyRtHejP+F2PSs2c=</source>
  </file>
  <file path="Log/InvalidArgumentException.php" generated-path="Log.InvalidArgumentException.html" hash="49c1367786a2c7765aec1ec3ad8f720a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Psr\Log" line="41" package="Default">
      <extends>\InvalidArgumentException</extends>
      <name>InvalidArgumentException</name>
      <full_name>\Psr\Log\InvalidArgumentException</full_name>
      <docblock line="41">
        <description>Marker class, in Psr namespace.</description>
        <long-description></long-description>
        <tag name="package" line="41" description="Default"/>
      </docblock>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydVMFu4zYQPdtfMcgpCVS73ePuAo1i0zFRWRIkedMAe6ElWmIjiwJJxWsU/fedoWVvs0AvBQzIHM57896QnM+/900/nXbiIG0vSgmpNV8jXX+aTuf391O4h4WuJK875aTBJUXCDnQvO7B6MIgQfd+qUjilO6jkm2x1f5Cdg71B0qM2r7DXBtJ1OsKLRlkodecoCf8a2UphZQVDV0kDrpGw4QVEqpSdlXCLi7sRutD9yai6cXBb3sGHX3/7QLywulbiyGpQnBE71Sp3giejh35Ep9IclLWkE8s20sjdCWojEFMFKFdK0HsoG2FqGYDTILoTIJdFgN45oTrV1SBQe38iPkx25MXqvTsKg53oKhDW6lIJpIRKlwN14tyavWqlhVuyd5OPiJs7X6eSoiVC1Xn3l104KtfowWGHrDOqJJoAk8p2qEjJZbtVBzUWIbhvkCU+pB4sWiHBARx0pfb0ld5fP+xaZZsAKkXsu8Fh0FLQ9z0gN3M8OCtbLw5JFBrwpn9o9GlUqKfmurFdliLHRh/e+1Fe1X4wHRaWHlZpbJ+v+5csHUUIsddtq4/kEe9Jpcia/Xi9PtjonX6T3tb5NnTaqfLcf38i/Y+THrdsI9oWdnJsHxZXHbFR9OLMkAzr8D4o0UKvja/7s+PZRceaQZ6siucwY8BzSLPkC1+yJdyEOa5vAnjmxTrZFoAZWRgXL5CsIIxf4A8eLwNgf6YZy3NIMmLjmzTiDMM8XkTbJY+f4BGhcYIPgeMLQN4i8TVHNs5y4tuwbLHGZfjII168BMS14kVMzKskgxDSMCv4YhuFGaTbLE1yhiKWyBzzeJVhIbZhcTHDwhgD9gUXkK/DKKJq/rlv0UZGQmGRpC8Zf1oXsE6iJcPgI0N94WPEztXQ3SIK+SaAZbgJn5hHJUjkTVLmWSY8rxlFqWqIv0XBk5j8LJK4yHAZoN2suKKfec4CCDOeU2dWWbLxTqm7CEo8D0Jjdiaizr8/IEyh9TZnV05YsjBCOjyt+OcDvRzyA87EV1HLyfspCA/Xuzf5/zMJHsa3Nmmc6z/O5zRVz0N1pk09H3ftHM9/8q+ROEK71wtu/ByPxxlO81/2qvZ4zJtfx/hGmFecrmWLA4qGCA16uI79mc/1m6j3TbSqCk3tpxf7VsreDxf5DUd2ZeHrf2VM/55Opv9MvwP48QCx</source>
  </file>
  <file path="Model.php" generated-path="Model.html" hash="a07a138a4b43ac3d151d212d26cdd26f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="Database">\Config\Database</namespace-alias>
    <namespace-alias name="BaseBuilder">\CodeIgniter\Database\BaseBuilder</namespace-alias>
    <namespace-alias name="BaseConnection">\CodeIgniter\Database\BaseConnection</namespace-alias>
    <namespace-alias name="ConnectionInterface">\CodeIgniter\Database\ConnectionInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter" line="61" package="CodeIgniter">
      <extends/>
      <name>Model</name>
      <full_name>\CodeIgniter\Model</full_name>
      <docblock line="61">
        <description>Class Model</description>
        <long-description>The Model class provides a number of convenient features that
makes working with a database table less painful.

It will:
     - automatically connect to database
     - allow intermingling calls between db connection, the builder,
         and methods in this class.
     - simplifies pagination
     - removes the need to use Result object directly in most cases
     - allow specifying the return type (array, object, etc) with each call
     - ensure validation is run against objects when saving items</long-description>
        <tag name="package" line="61" description="CodeIgniter"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="68" package="CodeIgniter">
        <name>$table</name>
        <full_name>\CodeIgniter\Model::table</full_name>
        <default></default>
        <docblock line="68">
          <description>Name of database table</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="75" package="CodeIgniter">
        <name>$primaryKey</name>
        <full_name>\CodeIgniter\Model::primaryKey</full_name>
        <default>'id'</default>
        <docblock line="75">
          <description>The table's primary key.</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="83" package="CodeIgniter">
        <name>$DBGroup</name>
        <full_name>\CodeIgniter\Model::DBGroup</full_name>
        <default></default>
        <docblock line="83">
          <description>The Database connection group that
should be instantiated.</description>
          <long-description></long-description>
          <tag name="var" line="83" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="91" package="CodeIgniter">
        <name>$returnType</name>
        <full_name>\CodeIgniter\Model::returnType</full_name>
        <default>'array'</default>
        <docblock line="91">
          <description>The format that the results should be returned as.</description>
          <long-description>Will be overridden if the as* methods are used.</long-description>
          <tag name="var" line="91" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="100" package="CodeIgniter">
        <name>$useSoftDeletes</name>
        <full_name>\CodeIgniter\Model::useSoftDeletes</full_name>
        <default>false</default>
        <docblock line="100">
          <description>If this model should use "softDeletes" and
simply set a flag when rows are deleted, or
do hard deletes.</description>
          <long-description></long-description>
          <tag name="var" line="100" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="108" package="CodeIgniter">
        <name>$allowedFields</name>
        <full_name>\CodeIgniter\Model::allowedFields</full_name>
        <default>array()</default>
        <docblock line="108">
          <description>An array of field names that are allowed
to be set by the user in inserts/updates.</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="116" package="CodeIgniter">
        <name>$useTimestamps</name>
        <full_name>\CodeIgniter\Model::useTimestamps</full_name>
        <default>false</default>
        <docblock line="116">
          <description>If true, will set created_at, and updated_at
values during insert and update routines.</description>
          <long-description></long-description>
          <tag name="var" line="116" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="126" package="CodeIgniter">
        <name>$dateFormat</name>
        <full_name>\CodeIgniter\Model::dateFormat</full_name>
        <default>'datetime'</default>
        <docblock line="126">
          <description>The type of column that created_at and updated_at
are expected to.</description>
          <long-description>Allowed: 'datetime', 'date', 'int'</long-description>
          <tag name="var" line="126" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="135" package="CodeIgniter">
        <name>$createdField</name>
        <full_name>\CodeIgniter\Model::createdField</full_name>
        <default>'created_at'</default>
        <docblock line="135">
          <description>The column used for insert timestampes</description>
          <long-description></long-description>
          <tag name="var" line="135" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="142" package="CodeIgniter">
        <name>$updatedField</name>
        <full_name>\CodeIgniter\Model::updatedField</full_name>
        <default>'updated_at'</default>
        <docblock line="142">
          <description>The column used for update timestamps</description>
          <long-description></long-description>
          <tag name="var" line="142" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="150" package="CodeIgniter">
        <name>$tempUseSoftDeletes</name>
        <full_name>\CodeIgniter\Model::tempUseSoftDeletes</full_name>
        <default></default>
        <docblock line="150">
          <description>Used by withDeleted to override the
model's softDelete setting.</description>
          <long-description></long-description>
          <tag name="var" line="150" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="158" package="CodeIgniter">
        <name>$tempReturnType</name>
        <full_name>\CodeIgniter\Model::tempReturnType</full_name>
        <default></default>
        <docblock line="158">
          <description>Used by asArray and asObject to provide
temporary overrides of model default.</description>
          <long-description></long-description>
          <tag name="var" line="158" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="166" package="CodeIgniter">
        <name>$protectFields</name>
        <full_name>\CodeIgniter\Model::protectFields</full_name>
        <default>true</default>
        <docblock line="166">
          <description>Whether we should limit fields in inserts
and updates to those available in $allowedFields or not.</description>
          <long-description></long-description>
          <tag name="var" line="166" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="173" package="CodeIgniter">
        <name>$db</name>
        <full_name>\CodeIgniter\Model::db</full_name>
        <default></default>
        <docblock line="173">
          <description>Database Connection</description>
          <long-description></long-description>
          <tag name="var" line="173" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter" line="180" package="CodeIgniter">
        <name>$builder</name>
        <full_name>\CodeIgniter\Model::builder</full_name>
        <default></default>
        <docblock line="180">
          <description>Query Builder object</description>
          <long-description></long-description>
          <tag name="var" line="180" description="" type="\CodeIgniter\Database\BaseBuilder" variable="">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="189" package="CodeIgniter">
        <name>__construct</name>
        <full_name>\CodeIgniter\Model::__construct()</full_name>
        <docblock line="189">
          <description>Model constructor.</description>
          <long-description></long-description>
          <tag name="param" line="189" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default>null</default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="218" package="CodeIgniter">
        <name>find</name>
        <full_name>\CodeIgniter\Model::find()</full_name>
        <docblock line="218">
          <description>Fetches the row of database from $this-&gt;table with a primary key
matching $id.</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;One primary key or an array of primary keys&lt;/p&gt;" type="mixed|array" variable="$id">
            <type>mixed</type>
            <type>array</type>
          </tag>
          <tag name="return" line="218" description="The resulting row of data, or null." type="array|object|null">
            <type>array</type>
            <type>object</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="257" package="CodeIgniter">
        <name>findWhere</name>
        <full_name>\CodeIgniter\Model::findWhere()</full_name>
        <docblock line="257">
          <description>Extract a subset of data</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="" variable="$key"/>
          <tag name="param" line="257" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="257" description="The rows of data." type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="288" package="CodeIgniter">
        <name>findAll</name>
        <full_name>\CodeIgniter\Model::findAll()</full_name>
        <docblock line="288">
          <description>Works with the current Query Builder instance to return
all results, while optionally limiting them.</description>
          <long-description></long-description>
          <tag name="param" line="288" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="288" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="288" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="316" package="CodeIgniter">
        <name>first</name>
        <full_name>\CodeIgniter\Model::first()</full_name>
        <docblock line="316">
          <description>Returns the first row of the result set. Will take any previous
Query Builder calls into account when determing the result set.</description>
          <long-description></long-description>
          <tag name="return" line="316" description="" type="array|object|null">
            <type>array</type>
            <type>object</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="354" package="CodeIgniter">
        <name>findByHashedID</name>
        <full_name>\CodeIgniter\Model::findByHashedID()</full_name>
        <docblock line="354">
          <description>Finds a single record by a "hashed" primary key. Used in conjunction
with $this-&gt;getIDHash().</description>
          <long-description>THIS IS NOT VALID TO USE FOR SECURITY!</long-description>
          <tag name="param" line="354" description="" type="string" variable="$hashedID">
            <type>string</type>
          </tag>
          <tag name="return" line="354" description="" type="array|null|object">
            <type>array</type>
            <type>null</type>
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hashedID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="379" package="CodeIgniter">
        <name>encodeID</name>
        <full_name>\CodeIgniter\Model::encodeID()</full_name>
        <docblock line="379">
          <description>Returns a "hashed id", which isn't really hashed, but that's
become a fairly common term for this. Essentially creates
an obfuscated id, intended to be used to disguise the
ID from incrementing IDs to get access to things they shouldn't.</description>
          <long-description>THIS IS NOT VALID TO USE FOR SECURITY!

Note, at some point we might want to move to something more
complex. The hashid library is good, but only works on integers.</long-description>
          <tag name="see" line="379" description="" link="http://hashids.org/php/"/>
          <tag name="see" line="379" description="" link="http://raymorgan.net/web-development/how-to-obfuscate-integer-ids/"/>
          <tag name="param" line="379" description="" type="" variable="$id"/>
          <tag name="return" line="379" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="418" package="CodeIgniter">
        <name>decodeID</name>
        <full_name>\CodeIgniter\Model::decodeID()</full_name>
        <docblock line="418">
          <description>Decodes our hashed id.</description>
          <long-description></long-description>
          <tag name="see" line="418" description="" link="http://raymorgan.net/web-development/how-to-obfuscate-integer-ids/"/>
          <tag name="param" line="418" description="" type="" variable="$hash"/>
          <tag name="return" line="418" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$hash</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="456" package="CodeIgniter">
        <name>getHash</name>
        <full_name>\CodeIgniter\Model::getHash()</full_name>
        <docblock line="456">
          <description>Used for our hashed IDs. Requires a CRYPT_KEY to be defined,
which is handled the first time application/Config/App has been loaded.</description>
          <long-description></long-description>
          <tag name="param" line="456" description="" type="" variable="$str"/>
          <tag name="param" line="456" description="" type="" variable="$len"/>
          <tag name="return" line="456" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$len</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="474" package="CodeIgniter">
        <name>save</name>
        <full_name>\CodeIgniter\Model::save()</full_name>
        <docblock line="474">
          <description>A convenience method that will attempt to determine whether the
data should be inserted or updated. Will work with either
an array or object. When using with custom class objects,
you must ensure that the class will provide access to the class
variables, even if through a magic method.</description>
          <long-description></long-description>
          <tag name="param" line="474" description="" type="" variable="$data"/>
          <tag name="return" line="474" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="498" package="CodeIgniter">
        <name>insert</name>
        <full_name>\CodeIgniter\Model::insert()</full_name>
        <docblock line="498">
          <description>Inserts data into the current table. If an object is provided,
it will attempt to convert it to an array.</description>
          <long-description></long-description>
          <tag name="param" line="498" description="" type="" variable="$data"/>
          <tag name="return" line="498" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="535" package="CodeIgniter">
        <name>update</name>
        <full_name>\CodeIgniter\Model::update()</full_name>
        <docblock line="535">
          <description>Updates a single record in $this-&gt;table. If an object is provided,
it will attempt to convert it into an array.</description>
          <long-description></long-description>
          <tag name="param" line="535" description="" type="" variable="$id"/>
          <tag name="param" line="535" description="" type="" variable="$data"/>
          <tag name="return" line="535" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="570" package="CodeIgniter">
        <name>delete</name>
        <full_name>\CodeIgniter\Model::delete()</full_name>
        <docblock line="570">
          <description>Deletes a single record from $this-&gt;table where $id matches
the table's primaryKey</description>
          <long-description></long-description>
          <tag name="param" line="570" description="&lt;p&gt;The rows primary key&lt;/p&gt;" type="mixed" variable="$id">
            <type>mixed</type>
          </tag>
          <tag name="param" line="570" description="&lt;p&gt;Allows overriding the soft deletes setting.&lt;/p&gt;" type="boolean" variable="$purge">
            <type>boolean</type>
          </tag>
          <tag name="return" line="570" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="570" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$id</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$purge</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="597" package="CodeIgniter">
        <name>deleteWhere</name>
        <full_name>\CodeIgniter\Model::deleteWhere()</full_name>
        <docblock line="597">
          <description>Deletes multiple records from $this-&gt;table where the specified
key/value matches.</description>
          <long-description></long-description>
          <tag name="param" line="597" description="" type="" variable="$key"/>
          <tag name="param" line="597" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="param" line="597" description="&lt;p&gt;Allows overriding the soft deletes setting.&lt;/p&gt;" type="boolean" variable="$purge">
            <type>boolean</type>
          </tag>
          <tag name="return" line="597" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="597" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$purge</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="626" package="CodeIgniter">
        <name>purgeDeleted</name>
        <full_name>\CodeIgniter\Model::purgeDeleted()</full_name>
        <docblock line="626">
          <description>Permanently deletes all rows that have been marked as deleted
through soft deletes (deleted = 1)</description>
          <long-description></long-description>
          <tag name="return" line="626" description="" type="boolean|mixed">
            <type>boolean</type>
            <type>mixed</type>
          </tag>
          <tag name="throws" line="626" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="648" package="CodeIgniter">
        <name>withDeleted</name>
        <full_name>\CodeIgniter\Model::withDeleted()</full_name>
        <docblock line="648">
          <description>Sets $useSoftDeletes value so that we can temporarily override
the softdeletes settings. Can be used for all find* methods.</description>
          <long-description></long-description>
          <tag name="param" line="648" description="" type="boolean" variable="$val">
            <type>boolean</type>
          </tag>
          <tag name="return" line="648" description="" type="\CodeIgniter\Model">
            <type>\CodeIgniter\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="663" package="CodeIgniter">
        <name>onlyDeleted</name>
        <full_name>\CodeIgniter\Model::onlyDeleted()</full_name>
        <docblock line="663">
          <description>Works with the find* methods to return only the rows that
have been deleted.</description>
          <long-description></long-description>
          <tag name="return" line="663" description="" type="\CodeIgniter\Model">
            <type>\CodeIgniter\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="682" package="CodeIgniter">
        <name>asArray</name>
        <full_name>\CodeIgniter\Model::asArray()</full_name>
        <docblock line="682">
          <description>Sets the return type of the results to be as an associative array.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="701" package="CodeIgniter">
        <name>asObject</name>
        <full_name>\CodeIgniter\Model::asObject()</full_name>
        <docblock line="701">
          <description>Sets the return type to be of the specified type of object.</description>
          <long-description>Defaults to a simple object, but can be any class that has
class vars with the same name as the table columns, or at least
allows them to be created.</long-description>
          <tag name="param" line="701" description="" type="string" variable="$class">
            <type>string</type>
          </tag>
          <tag name="return" line="701" description="" type="\CodeIgniter\Model">
            <type>\CodeIgniter\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$class</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="720" package="CodeIgniter">
        <name>chunk</name>
        <full_name>\CodeIgniter\Model::chunk()</full_name>
        <docblock line="720">
          <description>Loops over records in batches, allowing you to operate on them.</description>
          <long-description>Works with $this-&gt;builder to get the Compiled select to
determine the rows to operate on.</long-description>
          <tag name="param" line="720" description="" type="integer" variable="$size">
            <type>integer</type>
          </tag>
          <tag name="param" line="720" description="" type="\Closure" variable="$userFunc">
            <type>\Closure</type>
          </tag>
          <tag name="throws" line="720" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$size</name>
          <default>100</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$userFunc</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="768" package="CodeIgniter">
        <name>paginate</name>
        <full_name>\CodeIgniter\Model::paginate()</full_name>
        <docblock line="768">
          <description>Works with $this-&gt;builder to get the Compiled Select to operate on.</description>
          <long-description>Expects a GET variable (?page=2) that specifies the page of results
to display.</long-description>
          <tag name="param" line="768" description="" type="integer" variable="$perPage">
            <type>integer</type>
          </tag>
          <tag name="return" line="768" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$perPage</name>
          <default>20</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="787" package="CodeIgniter">
        <name>protect</name>
        <full_name>\CodeIgniter\Model::protect()</full_name>
        <docblock line="787">
          <description>Sets whether or not we should whitelist data set during
updates or inserts against $this-&gt;availableFields.</description>
          <long-description></long-description>
          <tag name="param" line="787" description="" type="boolean" variable="$protect">
            <type>boolean</type>
          </tag>
          <tag name="return" line="787" description="" type="\CodeIgniter\Model">
            <type>\CodeIgniter\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$protect</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="804" package="CodeIgniter">
        <name>builder</name>
        <full_name>\CodeIgniter\Model::builder()</full_name>
        <docblock line="804">
          <description>Provides a shared instance of the Query Builder.</description>
          <long-description></long-description>
          <tag name="param" line="804" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="804" description="" type="\CodeIgniter\Database\BaseBuilder|\Config\Database\QueryBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
            <type>\Config\Database\QueryBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="838" package="CodeIgniter">
        <name>doProtectFields</name>
        <full_name>\CodeIgniter\Model::doProtectFields()</full_name>
        <docblock line="838">
          <description>Ensures that only the fields that are allowed to be updated
are in the data array.</description>
          <long-description>Used by insert() and update() to protect against mass assignment
vulnerabilities.</long-description>
          <tag name="param" line="838" description="" type="" variable="$data"/>
          <tag name="return" line="838" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="838" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter" line="875" package="CodeIgniter">
        <name>setDate</name>
        <full_name>\CodeIgniter\Model::setDate()</full_name>
        <docblock line="875">
          <description>A utility function to allow child models to use the type of
date/time format that they prefer. This is primarily used for
setting created_at and updated_at values, but can be used
by inheriting classes.</description>
          <long-description>The available time formats are:
 - 'int'      - Stores the date as an integer timestamp
 - 'datetime' - Stores the data in the SQL datetime format
 - 'date'     - Stores the date (only) in the SQL date format.</long-description>
          <tag name="param" line="875" description="&lt;p&gt;An optional PHP timestamp to be converted.&lt;/p&gt;" type="integer" variable="$userData">
            <type>integer</type>
          </tag>
          <tag name="return" line="875" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$userData</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="902" package="CodeIgniter">
        <name>setTable</name>
        <full_name>\CodeIgniter\Model::setTable()</full_name>
        <docblock line="902">
          <description>Specify the table associated with a model</description>
          <long-description></long-description>
          <tag name="param" line="902" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="902" description="" type="\CodeIgniter\Model">
            <type>\CodeIgniter\Model</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="923" package="CodeIgniter">
        <name>__get</name>
        <full_name>\CodeIgniter\Model::__get()</full_name>
        <docblock line="923">
          <description>Provides/instantiates the builder/db connection.</description>
          <long-description></long-description>
          <tag name="param" line="923" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="923" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter" line="948" package="CodeIgniter">
        <name>__call</name>
        <full_name>\CodeIgniter\Model::__call()</full_name>
        <docblock line="948">
          <description>Provides direct access to method in the builder (if available)
and the database connection.</description>
          <long-description></long-description>
          <tag name="param" line="948" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="948" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="948" description="" type="$this|null">
            <type>\CodeIgniter\Model</type>
            <type>null</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/BaseResult.php" generated-path="Database.BaseResult.html" hash="c7cddd3b325e9c1b0ffe91c3b6529348" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="CodeIgniter\Database" line="42" package="Default">
      <extends/>
      <implements>\CodeIgniter\Database\ResultInterface</implements>
      <name>BaseResult</name>
      <full_name>\CodeIgniter\Database\BaseResult</full_name>
      <docblock line="42">
        <description>Class BaseResult</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="50" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseResult::connID</full_name>
        <default></default>
        <docblock line="50">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="57" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultID</full_name>
        <default></default>
        <docblock line="57">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="resource|object" variable="">
            <type>resource</type>
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="64" package="Default">
        <name>$resultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultArray</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>Result Array</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array&lt;mixed,array&gt;" variable="">
            <type>array&lt;mixed,array&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="71" package="Default">
        <name>$resultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::resultObject</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>Result Object</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="78" package="Default">
        <name>$customResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::customResultObject</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>Custom Result Object</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array&lt;mixed,object&gt;" variable="">
            <type>array&lt;mixed,object&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="85" package="Default">
        <name>$currentRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::currentRow</full_name>
        <default>0</default>
        <docblock line="85">
          <description>Current Row index</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="92" package="Default">
        <name>$numRows</name>
        <full_name>\CodeIgniter\Database\BaseResult::numRows</full_name>
        <default></default>
        <docblock line="92">
          <description>Number of rows</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="99" package="Default">
        <name>$rowData</name>
        <full_name>\CodeIgniter\Database\BaseResult::rowData</full_name>
        <default></default>
        <docblock line="99">
          <description>Row data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="109" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseResult::__construct()</full_name>
        <docblock line="109">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$connID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="109" description="" type="\CodeIgniter\Database\type" variable="$resultID">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$connID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$resultID</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="126" package="Default">
        <name>getResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResult()</full_name>
        <docblock line="126">
          <description>Retrieve the results of the query. Typically an array of
individual data rows, which can be either an 'array', an
'object', or a custom class name.</description>
          <long-description></long-description>
          <tag name="param" line="126" description="&lt;p&gt;The row type. Either 'array', 'object', or a class name to use&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="126" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResult()" refers="\CodeIgniter\Database\ResultInterface::getResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResult"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="149" package="Default">
        <name>getCustomResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomResultObject()</full_name>
        <docblock line="149">
          <description>Returns the results as an array of custom objects.</description>
          <long-description></long-description>
          <tag name="param" line="149" description="&lt;p&gt;The name of the class to use.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="149" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomResultObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="206" package="Default">
        <name>getResultArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultArray()</full_name>
        <docblock line="206">
          <description>Returns the results as an array of arrays.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultArray()" refers="\CodeIgniter\Database\ResultInterface::getResultArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultArray"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="249" package="Default">
        <name>getResultObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getResultObject()</full_name>
        <docblock line="249">
          <description>Returns the results as an array of objects.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="249" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getResultObject()" refers="\CodeIgniter\Database\ResultInterface::getResultObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getResultObject"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="296" package="Default">
        <name>getRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRow()</full_name>
        <docblock line="296">
          <description>Wrapper object to return a row as either an array, an object, or
a custom class.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="296" description="&lt;p&gt;The index of the results to return&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="296" description="&lt;p&gt;The type of result object. 'array', 'object' or class name.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="296" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRow()" refers="\CodeIgniter\Database\ResultInterface::getRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="338" package="Default">
        <name>getCustomRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getCustomRowObject()</full_name>
        <docblock line="338">
          <description>Returns a row as a custom class instance.</description>
          <long-description>If row doesn't exists, returns null.</long-description>
          <tag name="param" line="338" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="338" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="338" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" refers="\CodeIgniter\Database\ResultInterface::getCustomRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getCustomRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="366" package="Default">
        <name>getRowArray</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowArray()</full_name>
        <docblock line="366">
          <description>Returns a single row from the results as an array.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="366" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="366" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowArray()" refers="\CodeIgniter\Database\ResultInterface::getRowArray()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowArray"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="393" package="Default">
        <name>getRowObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::getRowObject()</full_name>
        <docblock line="393">
          <description>Returns a single row from the results as an object.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="393" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="393" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getRowObject()" refers="\CodeIgniter\Database\ResultInterface::getRowObject()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getRowObject"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="419" package="Default">
        <name>setRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::setRow()</full_name>
        <docblock line="419">
          <description>Assigns an item into a particular column slot.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="" variable="$key"/>
          <tag name="param" line="419" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::setRow()" refers="\CodeIgniter\Database\ResultInterface::setRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_setRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="452" package="Default">
        <name>getFirstRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFirstRow()</full_name>
        <docblock line="452">
          <description>Returns the "first" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="452" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="452" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFirstRow()" refers="\CodeIgniter\Database\ResultInterface::getFirstRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFirstRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="468" package="Default">
        <name>getLastRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getLastRow()</full_name>
        <docblock line="468">
          <description>Returns the "last" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="468" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="468" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getLastRow()" refers="\CodeIgniter\Database\ResultInterface::getLastRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getLastRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="484" package="Default">
        <name>getNextRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getNextRow()</full_name>
        <docblock line="484">
          <description>Returns the "next" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="484" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="484" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getNextRow()" refers="\CodeIgniter\Database\ResultInterface::getNextRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getNextRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="506" package="Default">
        <name>getPreviousRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getPreviousRow()</full_name>
        <docblock line="506">
          <description>Returns the "previous" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="506" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getPreviousRow()" refers="\CodeIgniter\Database\ResultInterface::getPreviousRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getPreviousRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="531" package="Default">
        <name>getUnbufferedRow</name>
        <full_name>\CodeIgniter\Database\BaseResult::getUnbufferedRow()</full_name>
        <docblock line="531">
          <description>Returns an unbuffered row and move the pointer to the next row.</description>
          <long-description></long-description>
          <tag name="param" line="531" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="531" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" refers="\CodeIgniter\Database\ResultInterface::getUnbufferedRow()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getUnbufferedRow"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="552" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldCount()</full_name>
        <docblock line="552">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="552" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldCount()" refers="\CodeIgniter\Database\ResultInterface::getFieldCount()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldCount"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="561" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldNames()</full_name>
        <docblock line="561">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="561" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldNames()" refers="\CodeIgniter\Database\ResultInterface::getFieldNames()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldNames"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="570" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseResult::getFieldData()</full_name>
        <docblock line="570">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="570" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::getFieldData()" refers="\CodeIgniter\Database\ResultInterface::getFieldData()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_getFieldData"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="579" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\BaseResult::freeResult()</full_name>
        <docblock line="579">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="579" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::freeResult()" refers="\CodeIgniter\Database\ResultInterface::freeResult()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_freeResult"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="592" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\BaseResult::dataSeek()</full_name>
        <docblock line="592">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="592" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="592" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ResultInterface::dataSeek()" refers="\CodeIgniter\Database\ResultInterface::dataSeek()" link="/classes/CodeIgniter.Database.ResultInterface.html#method_dataSeek"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database" line="603" package="Default">
        <name>fetchAssoc</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchAssoc()</full_name>
        <docblock line="603">
          <description>Returns the result set as an array.</description>
          <long-description>Overridden by driver classes.</long-description>
          <tag name="return" line="603" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database" line="616" package="Default">
        <name>fetchObject</name>
        <full_name>\CodeIgniter\Database\BaseResult::fetchObject()</full_name>
        <docblock line="616">
          <description>Returns the result set as an object.</description>
          <long-description>Overridden by child classes.</long-description>
          <tag name="param" line="616" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="616" description="" type="object">
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default>'stdClass'</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzlG2tT20jys/kVvSkq2Btj2Lur+5As2XWwCaozNmWbzaU4ipKlMZ5FlnwzIxxfLv/9umdGD1syYBaTuzpqN0Gj6fdjuluTn3+ZTWYQulMmZ67H4DjymXMTcsXEP1quckeuZO92dg5+/HEHfsy/xUdaaYYQzVgIMooFgruzWcA9V/EoBJ/dsSCaTVmoYCyQwjwStzCOBJyfnlvw4YRL8KJQ0Sb8VbCAIUUf4tBnAtSEwZkzhA73WCgZVPGhZkGPo9lC8JuJgqpXgz8d/vQX2Ke//lqHD4IrLie4JYinI+6CE0rFVawYRGMYMm8SRkF0s7CYzpmYcimJZ2RhwgQbLeBGuMiVX0fWmQbzJq64YXVQEbjhAmZMSASIRsrlIQ9vwEU5ZoSSNiuSS0ZjNXcFaiX0wZUy8riLKMGPvJi0YtQ05gGTUCVRXw0sxKuapuMzNyCEPNSaSN7CnKtJFCvUllSCe4Smjpu8IPaJk+R1wKfcEiFwrSxJ+BB1LFEUYrgO08jnY/qbaflm8ShA5dXB54R9hFqrg6RFbYM6SXOARpQs0MwhEo4CaKEzHvU2IjQj5SqrLkkr80k0XZaHa67GsQiRMNNgfoTq03R/Z56iFYIYR0EQzUlG9Bmfk2jybepKqOhRdMe0WMYzwkhxz+hfW2SWWdq+khM3CGDErPqQOA8JG60mkgliQyr0B+4GMIuEprsqcSPh47QNg97J8FOz3wZnAOf93m9Oq92CV80BPr+qwydneNq7GALu6De7w8/QO4Fm9zP8zem26tD++3m/PRhAr0/YnLPzjtPGZad73LloOd2P8AFBuz0MCgejAfEOe5qmxea0B4TvrN0/PsXH5gen4ww/1wnXiTPsEuaTXh+acN7sD53ji06zD+cX/fPeoI1MtBBz1+me9JFQ+6zdHTaQMK5B+zd8gMFps9Mhajr0L1CMPjEKx73zz33n4+kQTnudVhsXP7SRv+aHTttQQ+mOO03nrA6t5lnzY1tD9RCRFpJ2Gjbh02mbVolqE/87Hjq9Lslz3OsO+/hYR3H7wxT6kzNo16HZdwakmZN+70xLStpFoJ7Gg6DdtkFEml82EG6h54tBO8UJrXazg+jQWt1VgyZG/hWT5a17wyrLGRF+dWOMPZFfhha7w5zjTvX71Dcrz5C/oDpRavb24GDkcdXw3IOapmEjtWJfUn426bkRiZsD+1YeoPdUcsnVgoa3CZyHMnAjQ8OLDPsSw4RVfsNgphj6c+OwcajXdRLTNPDxIDsvAkx78AEzep/JOFD6pYuxJFwMam/lLfDpLGCUGSWYFQdTsBjjubTzdWenQkgrOvOHIdNZD5wWrejVX+9cAfgjLCP/jnTqoHcHOxWd1TzYxbwROq13OWyW9saYhOGwDFdTCHdRQOfS6uVVKRoNAUdweVWCrpeSX8JnuFqD0MAUMB7HUmH2fRJiT8P270cvBJ3k/WiOedRnXwq4eViwiIEhkCM4zGProvNj/KDLi2guH4EqjKeIRi6pENH6WMeUW2NVddGcah4Nf7D/DD/LTotuH3sqEvrZMDNzsTACtZixxDWL64mjLTM7jkMTAtfXXoK6+toiqcPrFKy2U/m6U6ns0gG4/968R/mPslhIXyYg9DJz78q3beijz7C4wArRlCaaWHqk/jNmYtGA4WKGtWQQLPAAN/bCDRoYfYvfcT/G45iMq/2jjoUF9ybg4WY8zxkWQeg8+LCnQfeoItHAe8a/cQFPdqzaTEiYZESFcCPzFWMGKoOw5NjV5qAyA8lp2zSgbaikJFZxp0htzZWhFkxhvQNT/oX5ayx7w5SJtqohfZSir71N/JdMy8eQ7Dg6SnhBs+uXFUvImjjFqTNOtUbW/4b/s0CyFTwJrQcQmVSQYNop2XdcSByGTG2LvoUcyCXXcmXeixKrGxnlWpNrA3bJfmR3bUjro8a0xqqNTc1aopECxVpmXCxZGenMRHAB9jIDuqqtMdf9UKteAD/AakrA6sgu2SyrneRwldzlVeoHBwfQisI9bP6YwrjMjIGtgwL3BvsmQGJzrM8DwVx/ARMX8wFXlJCudVwfQRgHwTurhuquhyteFIepMnKnZ60G73P8pBj2zJ5rExarkq7FaZT0EFIbI6nMOoTMph+ODPcpMHW+1V2uTznAv39GY9Mvb97QFrOn8ihzXe7yK9INm+f8hSJQo0A6zEWFJ/J8NQx901AYBru3DEuN97B75wYx07Qt8cdT339vsFgk7zQ46dWo4QnOR8qT16Sw1A7mNK7lXI/kGDB2Wz2s5Y6t+9GnRUoFz4eAoVqELjUssHbOJCtlwZeZ/FEqudJHZjRfkwQfVMD3SoP6l1z6c8bYGCeb6cQENp2phQXQAxrCyfxiyispqIonmT11CsfX2qBeCr9lpea25XOOY6YdWFpgIaomrjLlBNYF3oQyLApB45JMKdfcBywKuTsKmEEx59j9h5GiOsLFdwHuSJoBkBGmrD3cIKldWUAivlWVwaDFa1jhniWbbp6sNsk3OV3a5FLVItRKyNCGd+tCvcwoG8f1+kBt0hStWojOPPsPhOIyg98r7gp1x7YDL6nSHhN51pseDD2z7/899sqKj81DLwstij3jHrXy4Hwg9las8ozBl/hQefRZCR4VfimPW4m/T8KdzWhwkM6OEz/RnRuGYtYcamfR8WZ2U+OmkSw3hkuBSkj8iEmqbdkXLhFI2JAnVReaCY7BgD+7If1JfYQejSSNRJIhUjbvbT31LzQRMZW0YbpRbECp/yxtaR/Zd0bzKvKL/luHQvOZJQ+MLu1fUya4hwCZa2AcfmI67m2Hb+cw+vsPjdMZZgbUC3ZPkvYjGi3CPX6KS0n5netBo7mpKQ5t+ZskgGusT6+1dWS1hhqXClsM0pxppmr6Ow59TdAcdS86HdClrOEGZdMZpYydH4oEdsM6rOzMBbpVedLKlMeuAbvcDZfTzkb9eDRPCtnwvsb+wQFBotMVNGsBbDubI2+9JgHf6jGbRvXKLIds7oYeuz925SOCd7c0JtMC/ond/5K61rb/G7T+uVgp7sw3N+8S71o6zh7CXnpKJk6dOWyoO98UZzrcff0aNhCGAqGkCdPYru3RFD6p27ossLb1BszFeiW8CUwWHAv7+bOkNPzDx4zx1A0zfRLsYOyrp8X2fFlKtatzw5wHme3P6CMG4X1e0F/nBAnof6WZ7YH9XeycpptHGTo/1302Sxe+IP1vWhzbUH4TaoNyxbRJsJoAtI/iXhy4WHvRp9sQZBCpggH1D83P8oukOjtN28i00hZriK5u4SEdPH7d2bgSy8q60nqsUPs/WJTlvCFDitzW8t2SHVjSTFFPKM18sqRZSsqkW91n3BXqqWXvI3zkf3t75GhWO4XBbAE3W1wtjTa3XcHouz9jLqR6pc2TfGKwX1NtBrn3u9Sm6eCEqGnHKa/u1+eF9NtNFoDluQF+MU79Ng3QwxcZdb7Co/7lFNlxX16PK9v24aeXUWzIvrycYrtI7I8p9onnll1bOZYKJ9Eb1LpOUL+kdnnzpngE0Y63CYHtm2gm2B2PYvliZjq3BL+LqXIfR9faiaIjO2v29ws7vn85kRaQIcThKB6PmWC+6WpDH6aRvSUxizjdh0ouQ1I00qZnNedFSv8eg24yT8iP7Z982WBp/Lim61v6kLfV6wUfmTLRFqYXlMacBb5MLupmn7mLg7fs1lJ6D670eEZ8xzocam8JZit3kj6ykAlXsZWrEaZ01XfCHyNR/vvDgzJRCy7TzxAvKJX94oKSYIqUGNAUItpsMGXK3aci9g/KRtXjdkU7EYzJkpR+/3x3LeN0td0m4tpW+D3D1GX41Zkr1Nenl5KYzySnZBeNx+Rc5h8E0L8JcIPACJCCBgsYMeoVzIUSsl9udj51bxm2M4Kt+KtGIRV2ZugPCv7FRPSUjnqtDtOvJ7at3ooei18UzR2asslR744JwX2fhTBagC84PpuJKJOPdXARKQwWNEvmKktp/KVFXJ2aLMuIvoBRXBTxsePapeu9DyqhME6l81EqX9913ntW5Xzb+Q84DMvs</source>
  </file>
  <file path="Database/ResultInterface.php" generated-path="Database.ResultInterface.html" hash="815667a16fc148b71115f922bae7aabe" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Database" line="42" package="Default">
      <name>ResultInterface</name>
      <full_name>\CodeIgniter\Database\ResultInterface</full_name>
      <docblock line="42">
        <description>Interface ResultInterface</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="53" package="Default">
        <name>getResult</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getResult()</full_name>
        <docblock line="53">
          <description>Retrieve the results of the query. Typically an array of
individual data rows, which can be either an 'array', an
'object', or a custom class name.</description>
          <long-description></long-description>
          <tag name="param" line="53" description="&lt;p&gt;The row type. Either 'array', 'object', or a class name to use&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="53" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="64" package="Default">
        <name>getCustomResultObject</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getCustomResultObject()</full_name>
        <docblock line="64">
          <description>Returns the results as an array of custom objects.</description>
          <long-description></long-description>
          <tag name="param" line="64" description="&lt;p&gt;The name of the class to use.&lt;/p&gt;" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="64" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="75" package="Default">
        <name>getResultArray</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getResultArray()</full_name>
        <docblock line="75">
          <description>Returns the results as an array of arrays.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="75" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="86" package="Default">
        <name>getResultObject</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getResultObject()</full_name>
        <docblock line="86">
          <description>Returns the results as an array of objects.</description>
          <long-description>If no results, an empty array is returned.</long-description>
          <tag name="return" line="86" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="101" package="Default">
        <name>getRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getRow()</full_name>
        <docblock line="101">
          <description>Wrapper object to return a row as either an array, an object, or
a custom class.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="101" description="&lt;p&gt;The index of the results to return&lt;/p&gt;" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="101" description="&lt;p&gt;The type of result object. 'array', 'object' or class name.&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="101" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="115" package="Default">
        <name>getCustomRowObject</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getCustomRowObject()</full_name>
        <docblock line="115">
          <description>Returns a row as a custom class instance.</description>
          <long-description>If row doesn't exists, returns null.</long-description>
          <tag name="param" line="115" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="param" line="115" description="" type="string" variable="$className">
            <type>string</type>
          </tag>
          <tag name="return" line="115" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$className</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="128" package="Default">
        <name>getRowArray</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getRowArray()</full_name>
        <docblock line="128">
          <description>Returns a single row from the results as an array.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="128" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="128" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="141" package="Default">
        <name>getRowObject</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getRowObject()</full_name>
        <docblock line="141">
          <description>Returns a single row from the results as an object.</description>
          <long-description>If row doesn't exist, returns null.</long-description>
          <tag name="param" line="141" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="141" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="153" package="Default">
        <name>setRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::setRow()</full_name>
        <docblock line="153">
          <description>Assigns an item into a particular column slot.</description>
          <long-description></long-description>
          <tag name="param" line="153" description="" type="" variable="$key"/>
          <tag name="param" line="153" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="153" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="164" package="Default">
        <name>getFirstRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getFirstRow()</full_name>
        <docblock line="164">
          <description>Returns the "first" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="164" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="175" package="Default">
        <name>getLastRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getLastRow()</full_name>
        <docblock line="175">
          <description>Returns the "last" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="175" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="175" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="186" package="Default">
        <name>getNextRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getNextRow()</full_name>
        <docblock line="186">
          <description>Returns the "next" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="186" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="186" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="197" package="Default">
        <name>getPreviousRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getPreviousRow()</full_name>
        <docblock line="197">
          <description>Returns the "previous" row of the current results.</description>
          <long-description></long-description>
          <tag name="param" line="197" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="197" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="208" package="Default">
        <name>getUnbufferedRow</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getUnbufferedRow()</full_name>
        <docblock line="208">
          <description>Returns an unbuffered row and move the pointer to the next row.</description>
          <long-description></long-description>
          <tag name="param" line="208" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="208" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'object'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="217" package="Default">
        <name>getFieldCount</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getFieldCount()</full_name>
        <docblock line="217">
          <description>Gets the number of fields in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="217" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="226" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getFieldNames()</full_name>
        <docblock line="226">
          <description>Generates an array of column names in the result set.</description>
          <long-description></long-description>
          <tag name="return" line="226" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="235" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\ResultInterface::getFieldData()</full_name>
        <docblock line="235">
          <description>Generates an array of objects representing field meta-data.</description>
          <long-description></long-description>
          <tag name="return" line="235" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="244" package="Default">
        <name>freeResult</name>
        <full_name>\CodeIgniter\Database\ResultInterface::freeResult()</full_name>
        <docblock line="244">
          <description>Frees the current result.</description>
          <long-description></long-description>
          <tag name="return" line="244" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="257" package="Default">
        <name>dataSeek</name>
        <full_name>\CodeIgniter\Database\ResultInterface::dataSeek()</full_name>
        <docblock line="257">
          <description>Moves the internal pointer to the desired offset. This is called
internally before fetching results to make sure the result set
starts at zero.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="integer" variable="$n">
            <type>integer</type>
          </tag>
          <tag name="return" line="257" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$n</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Test/CIDatabaseTestCase.php" generated-path="Test.CIDatabaseTestCase.html" hash="ebe31115beb69488938e4b11e2b50a7e" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ConfigException">\CodeIgniter\ConfigException</namespace-alias>
    <namespace-alias name="BaseConnection">\CodeIgniter\Database\BaseConnection</namespace-alias>
    <namespace-alias name="MigrationRunner">\CodeIgniter\Database\MigrationRunner</namespace-alias>
    <namespace-alias name="Services">\Config\Services</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Test" line="47" package="Default">
      <extends>\CodeIgniter\Test\CIUnitTestCase</extends>
      <name>CIDatabaseTestCase</name>
      <full_name>\CodeIgniter\Test\CIDatabaseTestCase</full_name>
      <docblock line="47">
        <description>CIDatabaseTestCase</description>
        <long-description></long-description>
        <tag name="package" line="47" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Test\CIUnitTestCase" refers="\CodeIgniter\Test\CIUnitTestCase" link="/classes/CodeIgniter.Test.CIUnitTestCase.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="55" package="Default">
        <name>$refresh</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::refresh</full_name>
        <default>true</default>
        <docblock line="55">
          <description>Should the db be refreshed before
each test?</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="63" package="Default">
        <name>$seed</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::seed</full_name>
        <default>''</default>
        <docblock line="63">
          <description>The name of the fixture used for all tests
within this test case.</description>
          <long-description></long-description>
          <tag name="var" line="63" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="72" package="Default">
        <name>$basePath</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::basePath</full_name>
        <default>APPPATH . '../tests/_support/_database'</default>
        <docblock line="72">
          <description>The path to where we can find the migrations
and seeds directories. Allows overriding
the default application directories.</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="80" package="Default">
        <name>$DBGroup</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::DBGroup</full_name>
        <default>'tests'</default>
        <docblock line="80">
          <description>The name of the database group to connect to.</description>
          <long-description>If not present, will use the defaultGroup.</long-description>
          <tag name="var" line="80" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="87" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::db</full_name>
        <default></default>
        <docblock line="87">
          <description>Our database connection.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="\CodeIgniter\Database\BaseConnection" variable="">
            <type>\CodeIgniter\Database\BaseConnection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="94" package="Default">
        <name>$migrations</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::migrations</full_name>
        <default></default>
        <docblock line="94">
          <description>Migration Runner instance.</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Database\MigrationRunner|mixed" variable="">
            <type>\CodeIgniter\Database\MigrationRunner</type>
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="101" package="Default">
        <name>$seeder</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::seeder</full_name>
        <default></default>
        <docblock line="101">
          <description>Seeder instance</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\Database\Seeder" variable="">
            <type>\CodeIgniter\Database\Seeder</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Test" line="109" package="Default">
        <name>$insertCache</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::insertCache</full_name>
        <default>array()</default>
        <docblock line="109">
          <description>Stores information needed to remove any
rows inserted via $this-&gt;hasInDatabase();</description>
          <long-description></long-description>
          <tag name="var" line="109" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="113" package="Default">
        <name>loadDependencies</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::loadDependencies()</full_name>
        <docblock line="113">
          <description></description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="146" package="Default">
        <name>setUp</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::setUp()</full_name>
        <docblock line="146">
          <description>Ensures that the database is cleaned up to a known state
before each test runs.</description>
          <long-description></long-description>
          <tag name="throws" line="146" description="" type="\CodeIgniter\ConfigException">
            <type>\CodeIgniter\ConfigException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="179" package="Default">
        <name>tearDown</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::tearDown()</full_name>
        <docblock line="179">
          <description>Takes care of any required cleanup after the test, like
removing any rows inserted via $this-&gt;hasInDatabase()</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="200" package="Default">
        <name>seed</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::seed()</full_name>
        <docblock line="200">
          <description>Seeds that database with a specific seeder.</description>
          <long-description></long-description>
          <tag name="param" line="200" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="220" package="Default">
        <name>dontSeeInDatabase</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::dontSeeInDatabase()</full_name>
        <docblock line="220">
          <description>Asserts that records that match the conditions in $where do
not exist in the database.</description>
          <long-description></long-description>
          <tag name="param" line="220" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="220" description="" type="array" variable="$where">
            <type>array</type>
          </tag>
          <tag name="return" line="220" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="241" package="Default">
        <name>seeInDatabase</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::seeInDatabase()</full_name>
        <docblock line="241">
          <description>Asserts that records that match the conditions in $where DO
exist in the database.</description>
          <long-description></long-description>
          <tag name="param" line="241" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="241" description="" type="array" variable="$where">
            <type>array</type>
          </tag>
          <tag name="return" line="241" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="241" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="263" package="Default">
        <name>grabFromDatabase</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::grabFromDatabase()</full_name>
        <docblock line="263">
          <description>Fetches a single column from a database row with criteria
matching $where.</description>
          <long-description></long-description>
          <tag name="param" line="263" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="263" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="263" description="" type="array" variable="$where">
            <type>array</type>
          </tag>
          <tag name="return" line="263" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="263" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="286" package="Default">
        <name>hasInDatabase</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::hasInDatabase()</full_name>
        <docblock line="286">
          <description>Inserts a row into to the database. This row will be removed
after the test has run.</description>
          <long-description></long-description>
          <tag name="param" line="286" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="286" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="throws" line="286" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="309" package="Default">
        <name>seeNumRecords</name>
        <full_name>\CodeIgniter\Test\CIDatabaseTestCase::seeNumRecords()</full_name>
        <docblock line="309">
          <description>Asserts that the number of rows in the database that match $where
is equal to $expected.</description>
          <long-description></long-description>
          <tag name="param" line="309" description="" type="integer" variable="$expected">
            <type>integer</type>
          </tag>
          <tag name="param" line="309" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="309" description="" type="array" variable="$where">
            <type>array</type>
          </tag>
          <tag name="return" line="309" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="309" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$expected</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Test" line="56" package="Default">
        <name>assertLogged</name>
        <full_name>\CodeIgniter\Test\CIUnitTestCase::assertLogged()</full_name>
        <docblock line="56">
          <description>Custom function to hook into CodeIgniter's Logging mechanism
to check if certain messages were logged during code execution.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="string" variable="$level">
            <type>string</type>
          </tag>
          <tag name="param" line="56" description="" type="null" variable="$expectedMessage">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$expectedMessage</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\CIUnitTestCase</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="55" package="Default">
        <name>getPrivateMethodInvoker</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateMethodInvoker()</full_name>
        <docblock line="55">
          <description>Find a private method invoker.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;method name&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="CodeIgniter\Test" line="74" package="Default">
        <name>getAccessibleRefProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getAccessibleRefProperty()</full_name>
        <docblock line="74">
          <description>Find an accessible property.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$obj">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$property">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="return" line="74" description="" type="\CodeIgniter\Test\type">
            <type>\CodeIgniter\Test\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="98" package="Default">
        <name>setPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::setPrivateProperty()</full_name>
        <docblock line="98">
          <description>Set a private property.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="111" package="Default">
        <name>getPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateProperty()</full_name>
        <docblock line="111">
          <description>Retrieve a private property.</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="value" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Test\ReflectionHelper</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <error line="113" code="PPC:ERR-50008">No summary for method loadDependencies()</error>
    </parse_markers>
    <source>eJzNWetz27gR/yz9FXuZzFjO0FKuvekHp3YiS3TMqSxpJDlpJsncQCQksaYAHgD60Tb/e3cBkiL1uOSuTnuajCUCi33+9gHmr6/TVQqCrblOWcihJyMeLEVsuPo049q8ajY7L1404UV1Bx9ppStAplyAlpnCoyxNkzhkJpYCIn7HE5muuTCwUMj9XqpbWEgF46txfny2ijWEUhgiwp+KJ5xpHkEmIq7ArDhcBzMYxCEXmkMLH47zoz2ZPqp4uTLQCo/hTy9//AlO6OsvHlyo2MR6hSRJtp7HDAKhTWwyw0EuYMbDlZCJXD7mnMZcrWOtSWdUYcUVnz/CUjHUKvJQdW6PhSumltwDI4GJR0i50nhAzg2LRSyWwNCOlFgSsSG7tFyYe6bQKyICprUMY4YsIZJhRl5xblrECdfQIlOfTfMTz46tnIizhBjGwnqi2IX72KxkZtBb2qg4JDYeEoVJFpEmxXYSr+NcCB23ztLED1lnGk0hhT1Yyyhe0De39qXZPEHneRDFxH2OXvNA06KNgUfWdDCImidWOWQSowHW6I2OlowEpeRck7tL08r9Sq7r9sRWq0WmBArm9lgk0X1W7j94aGiFTixkksh7shExE8Vkmj4toYSOnss7bs1yyBDSxKHzv41Iuol0vqVXLElgznP3ofBYEDdaLSxTpIY2iIeYJZBKZeVuW9wu9LjyYTq6nL3vTnwIpjCejN4Ffb8Pz7pTfH7mwftgdjW6mQFSTLrD2QcYXUJ3+AH+Fgz7Hvh/H0/86RRGE+IWXI8HgY/LwbA3uOkHw7dwgUeHI0yKALMB+c5GVmbOLfCnxO/an/Su8LF7EQyC2QePeF0GsyFxvhxNoAvj7mQW9G4G3QmMbybj0dRHJfrIeRgMLycoyL/2h7M2CsY18N/hA0yvuoMBSbOpf4NmTEhR6I3GHybB26sZXI0GfR8XL3zUr3sx8J00tK436AbXHvS71923vj01QkbWSKJ0asL7K59WSWoX//VmwWhI9vRGw9kEHz00dzIrT78Ppr4H3UkwJc9cTkbX1lLyLh4aWT54dOg7RuT5eoCQhJ5vpn7JE/p+d4DsMFrD7YAWQX6DhfKWLXmjXhHhDcsw91R1Gfr8DmsOW9v9EpuNJ6hf0FoZk552OvMwNu2QdY6tjDxTG/km1WdXnttSLTv5ru4gehqV4pofFbfFuRBtiJ0N7VA69TWmCW+8w2SmHPpz+2X7pV23RczKwMdOs4nlpdZGelIs4qX/EPKUkufVDkGfGTbHyv/pAv8gteDhVwivYyzRRDPJkFoVlCTn05SrO7RKVzpXUBykjtZj2ikaJliX92wCf8CWFNHWDcotz/yr2SCGDeQ4xRqbRLYERHOqIIpjq7D1a86xy3FLxVm4AoPHX9OjXXpzxxTMpUzoqdNspEoatBbPPc9ZwBkYlXHUvpRG1Y06dFF1FvGDybB0ZtQsqadSwSI52pJTC7BdA4serUKI2rfrKlB1F8tdJTTHv2dwdLQtP2Vm5Qo4pyaEhZZR+xLOCesiHk4DqrnESWMfUchZKqylbehSAcfaeceViqNcvnMiX7AsMfURonL025SnII5JzzPojsfj7uyqfdRud6xnOj/rLKXy3fk5yuO9Y2PVxwURzgIyS8ny0AETf1p1IFhQH4EUg4b93EO3YxQIhxWD3tLhb9S+f2GpyftW45p6o0xtVArLFHGabHjXE2hXRjSvMi2zCFwaYfujThfybbZb6fbvdfzAo13uGxRUpUwRCBXeUPfGp7357c7shyele4U7IgT7dCwwD9bOGEFEdpBQfE0zAY5sllYR+lAProjZHdbW55QkJ+crpgNRCG8dv6qryJRij7u6OEY9zHGOMfv42WrVOXmCDzKyg1iIY5GwkYREsqjPsZhHXISYEa3jZgPrUSNeQCs3AgvR2dkZiCxJcNPuNipbkNfh0smnpzmOCgY5AMn8ysmTcxxxafiJ/+lc0/jSrAvehH1XgU4HfKGpWJkVM0XdUJmolQwUF1rlUE3B70tVS9zpVq6VIzs554LNE1uqimJZqlxVB4pmcHq6WW7lXDwojazZvKE8OdfcTLG9CdMiOXvNd5g86Ptie4//3davud9RHFDDavJkiCsSyoVLu3jVKiHd1vCGJuiGZisig1sh7/H+hxcN1/Fc89s0Pop0tXqblc3BrYmgyK0tzKPRN2kB9Nwhu3nwaiscZRs9c9go40E0PwBfp+axoC0axjEROaoDICCqlsLKvd4+68FR5+i4fdTZnDhyMfzS3EokQ5htHVUJcRFdhB2Ptw5i8M5NXK2XXtEZDpImjAhaVbISrlu2E7SOf6dzKrD8BsfYSaD0Cf7ZAnhNo+8J7Rm7RWCHdOvELk8XecV/yXDMiBywEdVsYfJXD+RCD6/Rtw7ZtpXYqz4d+8ZGcgDYhjPVx8TJsQ342eP/Sn+hEBAVBYG+KckoxfaQAtM4Ssr745zUxo1+7OCQqD6+/Gyjayns5+TcTnhu98fd3YgnvAArrXxpFl9PGbL69JAXo7IQ0YCLxUenPIwX6FgHx0qZSZli63zQguc01h0sMQi/Kp2NSGGt4jhmC9gCfYjTdssRv3pqoD4NI+q6BQiBri9wxRN6CfMdcqqrCXp5hHBgl6oIF05j1AVWvPK+ht5mPXdXiEja8zRC84cYdcxfdBVRPhhOi97qhp3PIOe7OZVHr3rZ2op+JIVBfFUytibDyzk7xkUfCmUmDLbz3XyyX/WEKbOpYFHbs6zwUjThGu8KeS+r5Cqzvp1hE2sVYs+AusBE3sM9JvoCF+mlVem0IwfJxh8p0P2RuwwfDDI8YZTLEWPvveLrE8fTgwF2Prug2EezFxyNg8g4L4FBGXUIGN8BF5cco49tFesxeishECTZWsBCSQzapmgrwiwV7lBRTGJmT1vsWC9bZ3x70hcbTtr/Gig4cc0v0cBDWKlrtw87Ns1/ybh6/O3w0diD6drmuP83IFtyUwCr1MX+sFuIpny36IT5Xi4ZXr+GBUs0/25FJxCu6DALn1jQfwXIegVx/43k0OXe5rtbf+TeRNXmOcD5jK4kv723kLida8zvgk59RNxfY0ha/d5TmfA+fqbXDW6Gdqdy7Rqft/rHr+Kp4Nly0r5Xeai1DYqDyNZzDAkO4PkUXb9kVjrKJoPp6omTOkso+s/5Q2pfwexEEfFhrS8I/kh9ZZitJ65ptkjNUkcPvtpmrE3/307jk/N1q6K1UwhbznslUftNVMuKXoS3zNQnH04azS/N/wBx7+kc</source>
  </file>
  <file path="Database/ConnectionInterface.php" generated-path="Database.ConnectionInterface.html" hash="225d05782ef45d4edd18ec16aa7a3f4b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Database" line="44" package="CodeIgniter\Database">
      <name>ConnectionInterface</name>
      <full_name>\CodeIgniter\Database\ConnectionInterface</full_name>
      <docblock line="44">
        <description>Interface ConnectionInterface</description>
        <long-description></long-description>
        <tag name="package" line="44" description="CodeIgniter\Database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="51" package="CodeIgniter\Database">
        <name>initialize</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::initialize()</full_name>
        <docblock line="51">
          <description>Initializes the database connection/settings.</description>
          <long-description></long-description>
          <tag name="return" line="51" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="61" package="CodeIgniter\Database">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::connect()</full_name>
        <docblock line="61">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="61" description="" type="" variable="$persistent"/>
          <tag name="return" line="61" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="70" package="CodeIgniter\Database">
        <name>persistentConnect</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::persistentConnect()</full_name>
        <docblock line="70">
          <description>Create a persistent database connection.</description>
          <long-description></long-description>
          <tag name="return" line="70" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="80" package="CodeIgniter\Database">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::reconnect()</full_name>
        <docblock line="80">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="94" package="CodeIgniter\Database">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getConnection()</full_name>
        <docblock line="94">
          <description>Returns the actual connection object. If both a 'read' and 'write'
connection has been specified, you can pass either term in to
get that connection. If you pass either alias in and only a single
connection is present, it must return the sole connection.</description>
          <long-description></long-description>
          <tag name="param" line="94" description="" type="string|null" variable="$alias">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="94" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="105" package="CodeIgniter\Database">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::setDatabase()</full_name>
        <docblock line="105">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="105" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="105" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="114" package="CodeIgniter\Database">
        <name>getDatabase</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getDatabase()</full_name>
        <docblock line="114">
          <description>Returns the name of the current database being used.</description>
          <long-description></long-description>
          <tag name="return" line="114" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="123" package="CodeIgniter\Database">
        <name>getError</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getError()</full_name>
        <docblock line="123">
          <description>Returns the last error encountered by this connection.</description>
          <long-description></long-description>
          <tag name="return" line="123" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="132" package="CodeIgniter\Database">
        <name>getPlatform</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getPlatform()</full_name>
        <docblock line="132">
          <description>The name of the platform in use (MySQLi, mssql, etc)</description>
          <long-description></long-description>
          <tag name="return" line="132" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="141" package="CodeIgniter\Database">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getVersion()</full_name>
        <docblock line="141">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="150" package="CodeIgniter\Database">
        <name>saveQueries</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::saveQueries()</full_name>
        <docblock line="150">
          <description>Specifies whether this connection should keep queries objects or not.</description>
          <long-description></long-description>
          <tag name="param" line="150" description="" type="boolean" variable="$doLog">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$doLog</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="167" package="CodeIgniter\Database">
        <name>query</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::query()</full_name>
        <docblock line="167">
          <description>Orchestrates a query against the database. Queries must use
Database\Statement objects to store the query and build it.</description>
          <long-description>This method works with the cache.

Should automatically handle different connections for read/write
queries if needed.</long-description>
          <tag name="param" line="167" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="167" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="return" line="167" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="180" package="CodeIgniter\Database">
        <name>simpleQuery</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::simpleQuery()</full_name>
        <docblock line="180">
          <description>Performs a basic query against the database. No binding or caching
is performed, nor are transactions handled. Simply takes a raw
query string and returns the database-specific result id.</description>
          <long-description></long-description>
          <tag name="param" line="180" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="180" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="191" package="CodeIgniter\Database">
        <name>table</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::table()</full_name>
        <docblock line="191">
          <description>Returns an instance of the query builder for this connection.</description>
          <long-description></long-description>
          <tag name="param" line="191" description="" type="string|array" variable="$tableName">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="return" line="191" description="" type="\CodeIgniter\Database\QueryBuilder">
            <type>\CodeIgniter\Database\QueryBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string|array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="200" package="CodeIgniter\Database">
        <name>getQueries</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getQueries()</full_name>
        <docblock line="200">
          <description>Returns an array containing all of the</description>
          <long-description></long-description>
          <tag name="return" line="200" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="210" package="CodeIgniter\Database">
        <name>getQueryCount</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getQueryCount()</full_name>
        <docblock line="210">
          <description>Returns the total number of queries that have been performed
on this connection.</description>
          <long-description></long-description>
          <tag name="return" line="210" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="219" package="CodeIgniter\Database">
        <name>getLastQuery</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::getLastQuery()</full_name>
        <docblock line="219">
          <description>Returns the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="219" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="233" package="CodeIgniter\Database">
        <name>escape</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::escape()</full_name>
        <docblock line="233">
          <description>"Smart" Escaping</description>
          <long-description>Escapes data based on type.
Sets boolean and null types.</long-description>
          <tag name="param" line="233" description="" type="" variable="$str"/>
          <tag name="return" line="233" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="246" package="CodeIgniter\Database">
        <name>callFunction</name>
        <full_name>\CodeIgniter\Database\ConnectionInterface::callFunction()</full_name>
        <docblock line="246">
          <description>Allows for custom calls to the database engine that are not
supported through our database layer.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="" type="string" variable="$functionName">
            <type>string</type>
          </tag>
          <tag name="param" line="246" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="246" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$functionName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session/Handlers/RedisHandler.php" generated-path="Session.Handlers.RedisHandler.html" hash="dabb0b0e330815167ba153c79f28d965" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Session\Handlers" line="44" package="Default">
      <extends>\CodeIgniter\Session\Handlers\BaseHandler</extends>
      <implements>\SessionHandlerInterface</implements>
      <name>RedisHandler</name>
      <full_name>\CodeIgniter\Session\Handlers\RedisHandler</full_name>
      <docblock line="44">
        <description>Session handler using Redis for persistence</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler" refers="\CodeIgniter\Session\Handlers\BaseHandler" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="52" package="Default">
        <name>$redis</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::redis</full_name>
        <default></default>
        <docblock line="52">
          <description>phpRedis instance</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="resource" variable="">
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="59" package="Default">
        <name>$keyPrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::keyPrefix</full_name>
        <default>'ci_session:'</default>
        <docblock line="59">
          <description>Key prefix</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="66" package="Default">
        <name>$lockKey</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::lockKey</full_name>
        <default></default>
        <docblock line="66">
          <description>Lock key</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="73" package="Default">
        <name>$sessionExpiration</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::sessionExpiration</full_name>
        <default>7200</default>
        <docblock line="73">
          <description>Number of seconds until the session ends.</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="54" package="Default">
        <name>$fingerprint</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::fingerprint</full_name>
        <default></default>
        <docblock line="54">
          <description>The Data fingerprint.</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="61" package="Default">
        <name>$lock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lock</full_name>
        <default>false</default>
        <docblock line="61">
          <description>Lock placeholder.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="68" package="Default">
        <name>$cookiePrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePrefix</full_name>
        <default>''</default>
        <docblock line="68">
          <description>Cookie prefix</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="75" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieDomain</full_name>
        <default>''</default>
        <docblock line="75">
          <description>Cookie domain</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="81" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="81">
          <description>Cookie path</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="88" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieSecure</full_name>
        <default>false</default>
        <docblock line="88">
          <description>Cookie secure?</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="94" package="Default">
        <name>$cookieName</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieName</full_name>
        <default></default>
        <docblock line="94">
          <description>Cookie name to use</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="101" package="Default">
        <name>$matchIP</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::matchIP</full_name>
        <default>false</default>
        <docblock line="101">
          <description>Match IP addresses for cookies?</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="107" package="Default">
        <name>$sessionID</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::sessionID</full_name>
        <default></default>
        <docblock line="107">
          <description>Current session ID</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="83" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::__construct()</full_name>
        <docblock line="83">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
          <tag name="throws" line="83" description="" type="\Exception">
            <type>\Exception</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" refers="\CodeIgniter\Session\Handlers\BaseHandler::__construct()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method___construct"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="129" package="Default">
        <name>open</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::open()</full_name>
        <docblock line="129">
          <description>Open</description>
          <long-description>Sanitizes save_path and initializes connection.</long-description>
          <tag name="param" line="129" description="&lt;p&gt;Server path&lt;/p&gt;" type="string" variable="$save_path">
            <type>string</type>
          </tag>
          <tag name="param" line="129" description="&lt;p&gt;Session cookie name, unused&lt;/p&gt;" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="129" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save_path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="169" package="Default">
        <name>read</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::read()</full_name>
        <docblock line="169">
          <description>Read</description>
          <long-description>Reads session data and acquires a lock</long-description>
          <tag name="param" line="169" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="169" description="Serialized session data" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="196" package="Default">
        <name>write</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::write()</full_name>
        <docblock line="196">
          <description>Write</description>
          <long-description>Writes (create / update) session data</long-description>
          <tag name="param" line="196" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="param" line="196" description="&lt;p&gt;Serialized session data&lt;/p&gt;" type="string" variable="$session_data">
            <type>string</type>
          </tag>
          <tag name="return" line="196" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$session_data</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="244" package="Default">
        <name>close</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::close()</full_name>
        <docblock line="244">
          <description>Close</description>
          <long-description>Releases locks and closes connection.</long-description>
          <tag name="return" line="244" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="282" package="Default">
        <name>destroy</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::destroy()</full_name>
        <docblock line="282">
          <description>Destroy</description>
          <long-description>Destroys the current session.</long-description>
          <tag name="param" line="282" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="282" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="307" package="Default">
        <name>gc</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::gc()</full_name>
        <docblock line="307">
          <description>Garbage Collector</description>
          <long-description>Deletes expired sessions</long-description>
          <tag name="param" line="307" description="&lt;p&gt;Maximum lifetime of sessions&lt;/p&gt;" type="integer" variable="$maxlifetime">
            <type>integer</type>
          </tag>
          <tag name="return" line="307" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$maxlifetime</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="323" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::lockSession()</full_name>
        <docblock line="323">
          <description>Get lock</description>
          <long-description>Acquires an (emulated) lock.</long-description>
          <tag name="param" line="323" description="&lt;p&gt;Session ID&lt;/p&gt;" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::lockSession()" refers="\CodeIgniter\Session\Handlers\BaseHandler::lockSession()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method_lockSession"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="376" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\RedisHandler::releaseLock()</full_name>
        <docblock line="376">
          <description>Release lock</description>
          <long-description>Releases a previously acquired lock</long-description>
          <tag name="return" line="376" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()" refers="\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()" link="/classes/CodeIgniter.Session.Handlers.BaseHandler.html#method_releaseLock"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="115" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="115">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="133" package="Default">
        <name>destroyCookie</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::destroyCookie()</full_name>
        <docblock line="133">
          <description>Internal method to force removal of a cookie by the client
when session_destroy() is called.</description>
          <long-description></long-description>
          <tag name="return" line="133" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="157" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lockSession()</full_name>
        <docblock line="157">
          <description>A dummy method allowing drivers with no locking functionality
(databases other than PostgreSQL and MySQL) to act as if they
do acquire a lock.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="170" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()</full_name>
        <docblock line="170">
          <description>Releases the lock, if any.</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Session\Handlers\BaseHandler</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\LoggerAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/Request.php" generated-path="HTTP.Request.html" hash="ab5c088d9ab8590e4c9e6f075794bbc8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="44" package="Default">
      <extends>\CodeIgniter\HTTP\Message</extends>
      <implements>\CodeIgniter\HTTP\RequestInterface</implements>
      <name>Request</name>
      <full_name>\CodeIgniter\HTTP\Request</full_name>
      <docblock line="44">
        <description>Representation of an iHTTP request.</description>
        <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
        <tag name="package" line="44" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\HTTP\Message" refers="\CodeIgniter\HTTP\Message" link="/classes/CodeIgniter.HTTP.Message.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="51" package="Default">
        <name>$ipAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::ipAddress</full_name>
        <default>''</default>
        <docblock line="51">
          <description>IP address of the current user.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="58" package="Default">
        <name>$proxyIPs</name>
        <full_name>\CodeIgniter\HTTP\Request::proxyIPs</full_name>
        <default></default>
        <docblock line="58">
          <description>Proxy IPs</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="68" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\HTTP\Request::__construct()</full_name>
        <docblock line="68">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$config">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
          <tag name="param" line="68" description="" type="\CodeIgniter\HTTP\type" variable="$uri">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>\CodeIgniter\HTTP\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="80" package="Default">
        <name>getIPAddress</name>
        <full_name>\CodeIgniter\HTTP\Request::getIPAddress()</full_name>
        <docblock line="80">
          <description>Gets the user's IP address.</description>
          <long-description></long-description>
          <tag name="return" line="80" description="IP address" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" refers="\CodeIgniter\HTTP\RequestInterface::getIPAddress()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getIPAddress"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="218" package="Default">
        <name>isValidIP</name>
        <full_name>\CodeIgniter\HTTP\Request::isValidIP()</full_name>
        <docblock line="218">
          <description>Validate an IP address</description>
          <long-description></long-description>
          <tag name="param" line="218" description="&lt;p&gt;IP Address&lt;/p&gt;" type="" variable="$ip"/>
          <tag name="param" line="218" description="&lt;p&gt;IP protocol: 'ipv4' or 'ipv6'&lt;/p&gt;" type="string" variable="$which">
            <type>string</type>
          </tag>
          <tag name="return" line="218" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::isValidIP()" refers="\CodeIgniter\HTTP\RequestInterface::isValidIP()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_isValidIP"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$which</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="246" package="Default">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\Request::getMethod()</full_name>
        <docblock line="246">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag name="param" line="246" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="246" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getMethod()" refers="\CodeIgniter\HTTP\RequestInterface::getMethod()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getMethod"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="262" package="Default">
        <name>getServer</name>
        <full_name>\CodeIgniter\HTTP\Request::getServer()</full_name>
        <docblock line="262">
          <description>Fetch an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag name="param" line="262" description="&lt;p&gt;Index for item to be fetched from $_SERVER&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="262" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="262" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\HTTP\RequestInterface::getServer()" refers="\CodeIgniter\HTTP\RequestInterface::getServer()" link="/classes/CodeIgniter.HTTP.RequestInterface.html#method_getServer"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="276" package="Default">
        <name>getEnv</name>
        <full_name>\CodeIgniter\HTTP\Request::getEnv()</full_name>
        <docblock line="276">
          <description>Fetch an item from the $_ENV array.</description>
          <long-description></long-description>
          <tag name="param" line="276" description="&lt;p&gt;Index for item to be fetched from $_ENV&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="276" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="276" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="299" package="Default">
        <name>fetchGlobal</name>
        <full_name>\CodeIgniter\HTTP\Request::fetchGlobal()</full_name>
        <docblock line="299">
          <description>Fetches one or more items from a global, like cookies, get, post, etc.</description>
          <long-description>Can optionally filter the input when you retrieve it by passing in
a filter.

If $type is an array, it must conform to the input allowed by the
filter_input_array method.

http://php.net/manual/en/filter.filters.sanitize.php</long-description>
          <tag name="param" line="299" description="" type="" variable="$type"/>
          <tag name="param" line="299" description="" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="299" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="299" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\HTTP\Message</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Config/DotEnv.php" generated-path="Config.DotEnv.html" hash="894c2f10e907d0b067d4500ca4c2c850" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Config" line="43" package="Default">
      <extends/>
      <name>DotEnv</name>
      <full_name>\CodeIgniter\Config\DotEnv</full_name>
      <docblock line="43">
        <description>Environment-specific configuration</description>
        <long-description></long-description>
        <tag name="package" line="43" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Config" line="50" package="Default">
        <name>$path</name>
        <full_name>\CodeIgniter\Config\DotEnv::path</full_name>
        <default></default>
        <docblock line="50">
          <description>The directory where the .env file can be located.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Config" line="60" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Config\DotEnv::__construct()</full_name>
        <docblock line="60">
          <description>Builds the path to our file.</description>
          <long-description></long-description>
          <tag name="param" line="60" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="param" line="60" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default>'.env'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Config" line="77" package="Default">
        <name>load</name>
        <full_name>\CodeIgniter\Config\DotEnv::load()</full_name>
        <docblock line="77">
          <description>The main entry point, will load the .env file and process it
so that we end up with all settings in the PHP environment vars
(i.e. getenv(), $_ENV, and $_SERVER)</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Config" line="121" package="Default">
        <name>setVariable</name>
        <full_name>\CodeIgniter\Config\DotEnv::setVariable()</full_name>
        <docblock line="121">
          <description>Sets the variable into the environment. Will parse the string
first to look for {name}={value} pattern, ensure that nested
variables are handled, and strip it of single and double quotes.</description>
          <long-description></long-description>
          <tag name="param" line="121" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="121" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Config" line="140" package="Default">
        <name>normaliseVariable</name>
        <full_name>\CodeIgniter\Config\DotEnv::normaliseVariable()</full_name>
        <docblock line="140">
          <description>Parses for assignment, cleans the $name and $value, and ensures
that nested variables are handled.</description>
          <long-description></long-description>
          <tag name="param" line="140" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="140" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="140" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Config" line="175" package="Default">
        <name>sanitizeValue</name>
        <full_name>\CodeIgniter\Config\DotEnv::sanitizeValue()</full_name>
        <docblock line="175">
          <description>Strips quotes from the environment variable value.</description>
          <long-description>This was borrowed from the excellent phpdotenv with very few changes.
https://github.com/vlucas/phpdotenv</long-description>
          <tag name="param" line="175" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="return" line="175" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="throws" line="175" description="" type="\InvalidArgumentException">
            <type>\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Config" line="237" package="Default">
        <name>resolveNestedVariables</name>
        <full_name>\CodeIgniter\Config\DotEnv::resolveNestedVariables()</full_name>
        <docblock line="237">
          <description>Resolve the nested variables.</description>
          <long-description>Look for ${varname} patterns in the variable value and replace with an existing
environment variable.

This was borrowed from the excellent phpdotenv with very few changes.
https://github.com/vlucas/phpdotenv</long-description>
          <tag name="param" line="237" description="" type="" variable="$value"/>
          <tag name="return" line="237" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Config" line="277" package="Default">
        <name>getVariable</name>
        <full_name>\CodeIgniter\Config\DotEnv::getVariable()</full_name>
        <docblock line="277">
          <description>Search the different places for environment variables and return first value found.</description>
          <long-description>This was borrowed from the excellent phpdotenv with very few changes.
https://github.com/vlucas/phpdotenv</long-description>
          <tag name="param" line="277" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="277" description="" type="string|null">
            <type>string</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/LoggerAwareInterface.php" generated-path="Log.LoggerAwareInterface.html" hash="da8ae6e8aed1aec6cc6881ed1a4b75e9" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Psr\Log" line="39" package="Default">
      <name>LoggerAwareInterface</name>
      <full_name>\Psr\Log\LoggerAwareInterface</full_name>
      <docblock line="39">
        <description>Describes a logger-aware instance</description>
        <long-description></long-description>
        <tag name="package" line="39" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="48" package="Default">
        <name>setLogger</name>
        <full_name>\Psr\Log\LoggerAwareInterface::setLogger()</full_name>
        <docblock line="48">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="48" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="48" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydVcFu4zYQPdtfMQh6SAJt3O5xt8BGsemYqCwJkrxpgF5kiZbYyKRAUmsEi/57ZyjZaRbYSwEDNofz3rw3JMe/f+nbHlR5FLYvKwGpNX9Fuvk8ny9ub+dwC0tdC94o6YTBJUVCBboXCqweDCLKvu9kVTqpFdTim+h0fxTKwcEg6UmbFzhoA+kmneBFKy1UWjlKwp9GdKK0ooZB1cKAawVseQGRrISyAq5xcTNBl7p/NbJpHVxXN/Dx198+Ei+sL5U4shoUZ8q97KR7hUejh35Cp8IcpbWkE8u2woj9KzSmREwdoFwhQB+gakvTiACchlK9AnJZBOi9K6WSqoEStfevxIfJjrxYfXCn0mAnVA2ltbqSJVJCrauBOjG25iA7YeGa7F3lE+LqxtepRdkRoVTe/XkXTtK1enDYIeuMrIgmwKSqG2pSct7u5FFORQjuG2SJD6kHi1ZIcABHXcsDfQvvrx/2nbRtALUk9v3gMGgp6PsekJsFHpwVnReHJBINeNNvGn0aFeqpuW5ql6XIqdXH936kV3UYjMLCwsNqje3zdf8WlaMIIQ666/SJPOI9qSVZs58u1wcbvdffhLc13galnazG/vsT6d9Oetqybdl1sBdT+7C4VMRG0bMzQzKsw/sgyw56bXzdHx3fnXVsGOTJungKMwY8hzRLvvIVW8FVmOP6KoAnXmySXQGYkYVx8QzJGsL4Gf7g8SoA9measTyHJCM2vk0jzjDM42W0W/H4ER4QGif4EDi+AOQtEl9zYuMsJ74ty5YbXIYPPOLFc0Bca17ExLxOMgghDbOCL3dRmEG6y9IkZyhihcwxj9cZFmJbFhd3WBhjwL7iAvJNGEVUzT/3HdrISCgsk/Q544+bAjZJtGIYfGCoL3yI2FgN3S2jkG8DWIXb8JF5VIJE3iRljjLhacMoSlVD/CwLnsTkZ5nERYbLAO1mxQX9xHMWQJjxnDqzzpKtd0rdRVDieRAas5GIOv/+gDCF1rucXThhxcII6fC04h8P9HzI9zgTX8pGzN5PQbi/3L3Z/59JcD+9tVnrXP9psaCpOg7VO22axbRrF3j+s/+MxAmqXs646et0Ot3hMP9wkI3HY97iMsZXwlb4yvGel9DpphHmQzk+SkVXvhI+W5LWA/0PRD4npBR+Ds6/z2dEN0O+XLg3qgsJTDNI++dMiT4Z24jtmDgvdPDLiH5LM8LhcAA14MiZkZ6Zn1IVzgzlxx9OIzeyXP+E7Obz/J/5v5DSJ/w=</source>
  </file>
  <file path="Database/Postgre/Connection.php" generated-path="Database.Postgre.Connection.html" hash="2cb603866cda173ad557f046058c5dc2" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConnection">\CodeIgniter\Database\BaseConnection</namespace-alias>
    <namespace-alias name="ConnectionInterface">\CodeIgniter\Database\ConnectionInterface</namespace-alias>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\Postgre" line="46" package="Default">
      <extends>\CodeIgniter\Database\BaseConnection</extends>
      <implements>\CodeIgniter\Database\ConnectionInterface</implements>
      <name>Connection</name>
      <full_name>\CodeIgniter\Database\Postgre\Connection</full_name>
      <docblock line="46">
        <description>Connection for Postgre</description>
        <long-description></long-description>
        <tag name="package" line="46" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection" refers="\CodeIgniter\Database\BaseConnection" link="/classes/CodeIgniter.Database.BaseConnection.html"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="53" package="Default">
        <name>$DBDriver</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::DBDriver</full_name>
        <default>'postgre'</default>
        <docblock line="53">
          <description>Database driver</description>
          <long-description></long-description>
          <tag name="var" line="53" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::DBDriver" refers="\CodeIgniter\Database\BaseConnection::DBDriver" link="/classes/CodeIgniter.Database.BaseConnection.html#property_DBDriver"/>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="62" package="Default">
        <name>$schema</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::schema</full_name>
        <default>'public'</default>
        <docblock line="62">
          <description>Database schema</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="69" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::escapeChar</full_name>
        <default>'"'</default>
        <docblock line="69">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::escapeChar" refers="\CodeIgniter\Database\BaseConnection::escapeChar" link="/classes/CodeIgniter.Database.BaseConnection.html#property_escapeChar"/>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="51" package="Default">
        <name>$DSN</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DSN</full_name>
        <default></default>
        <docblock line="51">
          <description>Data Source Name / Connect string</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="58" package="Default">
        <name>$port</name>
        <full_name>\CodeIgniter\Database\BaseConnection::port</full_name>
        <default>''</default>
        <docblock line="58">
          <description>Database port</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="65" package="Default">
        <name>$hostname</name>
        <full_name>\CodeIgniter\Database\BaseConnection::hostname</full_name>
        <default></default>
        <docblock line="65">
          <description>Hostname</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="72" package="Default">
        <name>$username</name>
        <full_name>\CodeIgniter\Database\BaseConnection::username</full_name>
        <default></default>
        <docblock line="72">
          <description>Username</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="79" package="Default">
        <name>$password</name>
        <full_name>\CodeIgniter\Database\BaseConnection::password</full_name>
        <default></default>
        <docblock line="79">
          <description>Password</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="86" package="Default">
        <name>$database</name>
        <full_name>\CodeIgniter\Database\BaseConnection::database</full_name>
        <default></default>
        <docblock line="86">
          <description>Database name</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="93" package="Default">
        <name>$DBDriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDriver</full_name>
        <default>'MySQLi'</default>
        <docblock line="93">
          <description>Database driver</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="101" package="Default">
        <name>$subdriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::subdriver</full_name>
        <default></default>
        <docblock line="101">
          <description>Sub-driver</description>
          <long-description></long-description>
          <tag name="used-by" line="101" description="CI_DB_pdo_driver"/>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="108" package="Default">
        <name>$DBPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBPrefix</full_name>
        <default>''</default>
        <docblock line="108">
          <description>Table prefix</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="115" package="Default">
        <name>$pConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::pConnect</full_name>
        <default>false</default>
        <docblock line="115">
          <description>Persistent connection flag</description>
          <long-description></long-description>
          <tag name="var" line="115" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="124" package="Default">
        <name>$DBDebug</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDebug</full_name>
        <default>false</default>
        <docblock line="124">
          <description>Debug flag</description>
          <long-description>Whether to display error messages.</long-description>
          <tag name="var" line="124" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="131" package="Default">
        <name>$cacheOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheOn</full_name>
        <default>false</default>
        <docblock line="131">
          <description>Should we cache results?</description>
          <long-description></long-description>
          <tag name="var" line="131" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="138" package="Default">
        <name>$cacheDir</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheDir</full_name>
        <default></default>
        <docblock line="138">
          <description>Path to store cache files.</description>
          <long-description></long-description>
          <tag name="var" line="138" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="145" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\BaseConnection::charset</full_name>
        <default>'utf8'</default>
        <docblock line="145">
          <description>Character set</description>
          <long-description></long-description>
          <tag name="var" line="145" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="152" package="Default">
        <name>$DBCollat</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBCollat</full_name>
        <default>'utf8_general_ci'</default>
        <docblock line="152">
          <description>Collation</description>
          <long-description></long-description>
          <tag name="var" line="152" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="159" package="Default">
        <name>$swapPre</name>
        <full_name>\CodeIgniter\Database\BaseConnection::swapPre</full_name>
        <default>''</default>
        <docblock line="159">
          <description>Swap Prefix</description>
          <long-description></long-description>
          <tag name="var" line="159" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="166" package="Default">
        <name>$encrypt</name>
        <full_name>\CodeIgniter\Database\BaseConnection::encrypt</full_name>
        <default>false</default>
        <docblock line="166">
          <description>Encryption flag/data</description>
          <long-description></long-description>
          <tag name="var" line="166" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="173" package="Default">
        <name>$compress</name>
        <full_name>\CodeIgniter\Database\BaseConnection::compress</full_name>
        <default>false</default>
        <docblock line="173">
          <description>Compression flag</description>
          <long-description></long-description>
          <tag name="var" line="173" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="182" package="Default">
        <name>$strictOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::strictOn</full_name>
        <default></default>
        <docblock line="182">
          <description>Strict ON flag</description>
          <long-description>Whether we're running in strict SQL mode.</long-description>
          <tag name="var" line="182" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="189" package="Default">
        <name>$failover</name>
        <full_name>\CodeIgniter\Database\BaseConnection::failover</full_name>
        <default>array()</default>
        <docblock line="189">
          <description>Settings for a failover connection.</description>
          <long-description></long-description>
          <tag name="var" line="189" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="197" package="Default">
        <name>$saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries</full_name>
        <default>false</default>
        <docblock line="197">
          <description>Whether to keep an in-memory history of queries
for debugging and timeline purposes.</description>
          <long-description></long-description>
          <tag name="var" line="197" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="207" package="Default">
        <name>$queries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::queries</full_name>
        <default>array()</default>
        <docblock line="207">
          <description>Array of query objects that have executed
on this connection.</description>
          <long-description></long-description>
          <tag name="var" line="207" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="214" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connID</full_name>
        <default>false</default>
        <docblock line="214">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="214" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="221" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::resultID</full_name>
        <default>false</default>
        <docblock line="221">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="221" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="228" package="Default">
        <name>$protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers</full_name>
        <default>true</default>
        <docblock line="228">
          <description>Protect identifiers flag</description>
          <long-description></long-description>
          <tag name="var" line="228" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="237" package="Default">
        <name>$reservedIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reservedIdentifiers</full_name>
        <default>array('*')</default>
        <docblock line="237">
          <description>List of reserved identifiers</description>
          <long-description>Identifiers that must NOT be escaped.</long-description>
          <tag name="var" line="237" description="" type="array&lt;mixed,string&gt;" variable="">
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="244" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeChar</full_name>
        <default>'"'</default>
        <docblock line="244">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="244" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="251" package="Default">
        <name>$likeEscapeStr</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeStr</full_name>
        <default>" ESCAPE '%s' "</default>
        <docblock line="251">
          <description>ESCAPE statement string</description>
          <long-description></long-description>
          <tag name="var" line="251" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="258" package="Default">
        <name>$likeEscapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeChar</full_name>
        <default>'!'</default>
        <docblock line="258">
          <description>ESCAPE character</description>
          <long-description></long-description>
          <tag name="var" line="258" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="266" package="Default">
        <name>$dataCache</name>
        <full_name>\CodeIgniter\Database\BaseConnection::dataCache</full_name>
        <default>array()</default>
        <docblock line="266">
          <description>Holds previously looked up data
for performance reasons.</description>
          <long-description></long-description>
          <tag name="var" line="266" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="272" package="Default">
        <name>$connectTime</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectTime</full_name>
        <default></default>
        <docblock line="272">
          <description>Microtime when connection was made</description>
          <long-description></long-description>
          <tag name="var" line="272" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="279" package="Default">
        <name>$connectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectDuration</full_name>
        <default></default>
        <docblock line="279">
          <description>How long it took to establish connection.</description>
          <long-description></long-description>
          <tag name="var" line="279" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="79" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::connect()</full_name>
        <docblock line="79">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="79" description="" type="boolean" variable="$persistent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="79" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::connect()" refers="\CodeIgniter\Database\BaseConnection::connect()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_connect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="118" package="Default">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::reconnect()</full_name>
        <docblock line="118">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="118" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::reconnect()" refers="\CodeIgniter\Database\BaseConnection::reconnect()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_reconnect"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="135" package="Default">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::setDatabase()</full_name>
        <docblock line="135">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="135" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::setDatabase()" refers="\CodeIgniter\Database\BaseConnection::setDatabase()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_setDatabase"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="147" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::getVersion()</full_name>
        <docblock line="147">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="147" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::getVersion()" refers="\CodeIgniter\Database\BaseConnection::getVersion()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_getVersion"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="172" package="Default">
        <name>execute</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::execute()</full_name>
        <docblock line="172">
          <description>Executes the query against the database.</description>
          <long-description></long-description>
          <tag name="param" line="172" description="" type="" variable="$sql"/>
          <tag name="return" line="172" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::execute()" refers="\CodeIgniter\Database\BaseConnection::execute()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_execute"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="184" package="Default">
        <name>affectedRows</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::affectedRows()</full_name>
        <docblock line="184">
          <description>Returns the total number of rows affected by this query.</description>
          <long-description></long-description>
          <tag name="return" line="184" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::affectedRows()" refers="\CodeIgniter\Database\BaseConnection::affectedRows()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_affectedRows"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="199" package="Default">
        <name>escape</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::escape()</full_name>
        <docblock line="199">
          <description>"Smart" Escape String</description>
          <long-description>Escapes data based on type</long-description>
          <tag name="param" line="199" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="199" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::escape()" refers="\CodeIgniter\Database\BaseConnection::escape()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_escape"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="220" package="Default">
        <name>_escapeString</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::_escapeString()</full_name>
        <docblock line="220">
          <description>Platform-dependant string escape</description>
          <long-description>Will likely be overridden in child classes.</long-description>
          <tag name="param" line="220" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_escapeString()" refers="\CodeIgniter\Database\BaseConnection::_escapeString()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__escapeString"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="234" package="Default">
        <name>_listTables</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::_listTables()</full_name>
        <docblock line="234">
          <description>Generates the SQL for listing tables in a platform-dependent manner.</description>
          <long-description></long-description>
          <tag name="param" line="234" description="" type="boolean" variable="$prefixLimit">
            <type>boolean</type>
          </tag>
          <tag name="return" line="234" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_listTables()" refers="\CodeIgniter\Database\BaseConnection::_listTables()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__listTables"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefixLimit</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="257" package="Default">
        <name>_listColumns</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::_listColumns()</full_name>
        <docblock line="257">
          <description>Generates a platform-specific query string so that the column names can be fetched.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="257" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::_listColumns()" refers="\CodeIgniter\Database\BaseConnection::_listColumns()" link="/classes/CodeIgniter.Database.BaseConnection.html#method__listColumns"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="273" package="Default">
        <name>fieldData</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::fieldData()</full_name>
        <docblock line="273">
          <description>Returns an object with field data</description>
          <long-description></long-description>
          <tag name="param" line="273" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="273" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="312" package="Default">
        <name>error</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::error()</full_name>
        <docblock line="312">
          <description>Returns the last error code and message.</description>
          <long-description>Must return an array with keys 'code' and 'message':

 return ['code' =&gt; null, 'message' =&gt; null);</long-description>
          <tag name="return" line="312" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::error()" refers="\CodeIgniter\Database\BaseConnection::error()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_error"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="327" package="Default">
        <name>insertID</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::insertID()</full_name>
        <docblock line="327">
          <description>Insert ID</description>
          <long-description></long-description>
          <tag name="return" line="327" description="" type="integer">
            <type>integer</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\BaseConnection::insertID()" refers="\CodeIgniter\Database\BaseConnection::insertID()" link="/classes/CodeIgniter.Database.BaseConnection.html#method_insertID"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="374" package="Default">
        <name>buildDSN</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::buildDSN()</full_name>
        <docblock line="374">
          <description>Build a DSN from the provided parameters</description>
          <long-description></long-description>
          <tag name="return" line="374" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="427" package="Default">
        <name>setClientEncoding</name>
        <full_name>\CodeIgniter\Database\Postgre\Connection::setClientEncoding()</full_name>
        <docblock line="427">
          <description>Set client encoding</description>
          <long-description></long-description>
          <tag name="param" line="427" description="&lt;p&gt;The client encoding to which the data will be converted.&lt;/p&gt;" type="string" variable="$charset">
            <type>string</type>
          </tag>
          <tag name="return" line="427" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$charset</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="288" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseConnection::__construct()</full_name>
        <docblock line="288">
          <description>Saves our connection settings.</description>
          <long-description></long-description>
          <tag name="param" line="288" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="304" package="Default">
        <name>initialize</name>
        <full_name>\CodeIgniter\Database\BaseConnection::initialize()</full_name>
        <docblock line="304">
          <description>Initializes the database connection/settings.</description>
          <long-description></long-description>
          <tag name="return" line="304" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::initialize()" refers="\CodeIgniter\Database\ConnectionInterface::initialize()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_initialize"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="368" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connect()</full_name>
        <docblock line="368">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="368" description="" type="boolean" variable="$persistent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="368" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::connect()" refers="\CodeIgniter\Database\ConnectionInterface::connect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_connect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="377" package="Default">
        <name>persistentConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::persistentConnect()</full_name>
        <docblock line="377">
          <description>Create a persistent database connection.</description>
          <long-description></long-description>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" refers="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_persistentConnect"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="390" package="Default">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reconnect()</full_name>
        <docblock line="390">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="390" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::reconnect()" refers="\CodeIgniter\Database\ConnectionInterface::reconnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_reconnect"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="404" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnection()</full_name>
        <docblock line="404">
          <description>Returns the actual connection object. If both a 'read' and 'write'
connection has been specified, you can pass either term in to
get that connection. If you pass either alias in and only a single
connection is present, it must return the sole connection.</description>
          <long-description></long-description>
          <tag name="param" line="404" description="" type="string|null" variable="$alias">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="404" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getConnection()" refers="\CodeIgniter\Database\ConnectionInterface::getConnection()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getConnection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="419" package="Default">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setDatabase()</full_name>
        <docblock line="419">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::setDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::setDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_setDatabase"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="428" package="Default">
        <name>getDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getDatabase()</full_name>
        <docblock line="428">
          <description>Returns the name of the current database being used.</description>
          <long-description></long-description>
          <tag name="return" line="428" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::getDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getDatabase"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="440" package="Default">
        <name>getError</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getError()</full_name>
        <docblock line="440">
          <description>Returns the last error encountered by this connection.</description>
          <long-description></long-description>
          <tag name="return" line="440" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getError()" refers="\CodeIgniter\Database\ConnectionInterface::getError()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getError"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="451" package="Default">
        <name>getPlatform</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getPlatform()</full_name>
        <docblock line="451">
          <description>The name of the platform in use (MySQLi, mssql, etc)</description>
          <long-description></long-description>
          <tag name="return" line="451" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getPlatform()" refers="\CodeIgniter\Database\ConnectionInterface::getPlatform()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getPlatform"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="463" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getVersion()</full_name>
        <docblock line="463">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="463" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getVersion()" refers="\CodeIgniter\Database\ConnectionInterface::getVersion()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getVersion"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="472" package="Default">
        <name>saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries()</full_name>
        <docblock line="472">
          <description>Specifies whether this connection should keep queries objects or not.</description>
          <long-description></long-description>
          <tag name="param" line="472" description="" type="boolean" variable="$save">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::saveQueries()" refers="\CodeIgniter\Database\ConnectionInterface::saveQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_saveQueries"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="488" package="Default">
        <name>execute</name>
        <full_name>\CodeIgniter\Database\BaseConnection::execute()</full_name>
        <docblock line="488">
          <description>Executes the query against the database.</description>
          <long-description></long-description>
          <tag name="param" line="488" description="" type="" variable="$sql"/>
          <tag name="return" line="488" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="506" package="Default">
        <name>query</name>
        <full_name>\CodeIgniter\Database\BaseConnection::query()</full_name>
        <docblock line="506">
          <description>Orchestrates a query against the database. Queries must use
Database\Statement objects to store the query and build it.</description>
          <long-description>This method works with the cache.

Should automatically handle different connections for read/write
queries if needed.</long-description>
          <tag name="param" line="506" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="506" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="param" line="506" description="" type="" variable="$queryClass"/>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::query()" refers="\CodeIgniter\Database\ConnectionInterface::query()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_query"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryClass</name>
          <default>'CodeIgniter\\Database\\Query'</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="562" package="Default">
        <name>simpleQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::simpleQuery()</full_name>
        <docblock line="562">
          <description>Performs a basic query against the database. No binding or caching
is performed, nor are transactions handled. Simply takes a raw
query string and returns the database-specific result id.</description>
          <long-description></long-description>
          <tag name="param" line="562" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="562" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" refers="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_simpleQuery"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="582" package="Default">
        <name>table</name>
        <full_name>\CodeIgniter\Database\BaseConnection::table()</full_name>
        <docblock line="582">
          <description>Returns an instance of the query builder for this connection.</description>
          <long-description></long-description>
          <tag name="param" line="582" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="582" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
          <tag name="throws" line="582" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::table()" refers="\CodeIgniter\Database\ConnectionInterface::table()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_table"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="601" package="Default">
        <name>getQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueries()</full_name>
        <docblock line="601">
          <description>Returns an array containing all of the</description>
          <long-description></long-description>
          <tag name="return" line="601" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueries()" refers="\CodeIgniter\Database\ConnectionInterface::getQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueries"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="614" package="Default">
        <name>getQueryCount</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueryCount()</full_name>
        <docblock line="614">
          <description>Returns the total number of queries that have been performed
on this connection.</description>
          <long-description></long-description>
          <tag name="return" line="614" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" refers="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueryCount"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="626" package="Default">
        <name>getLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getLastQuery()</full_name>
        <docblock line="626">
          <description>Returns the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="626" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" refers="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getLastQuery"/>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="638" package="Default">
        <name>showLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::showLastQuery()</full_name>
        <docblock line="638">
          <description>Returns a string representation of the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="638" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="655" package="Default">
        <name>getConnectStart</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectStart()</full_name>
        <docblock line="655">
          <description>Returns the time we started to connect to this database in
seconds with microseconds.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="return" line="655" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="672" package="Default">
        <name>getConnectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectDuration()</full_name>
        <docblock line="672">
          <description>Returns the number of seconds with microseconds that it took
to connect to the database.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="param" line="672" description="" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="672" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="706" package="Default">
        <name>protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers()</full_name>
        <docblock line="706">
          <description>Protect Identifiers</description>
          <long-description>This function is used extensively by the Query Builder class, and by
a couple functions in this class.
It takes a column or table name (optionally with an alias) and inserts
the table prefix onto it. Some logic is necessary in order to deal with
column names that include the path. Consider a query like this:

SELECT hostname.database.table.column AS c FROM hostname.database.table

Or a query with aliasing:

SELECT m.member_id, m.member_name FROM members AS m

Since the column name can include up to four segments (host, DB, table, column)
or also have an alias prefix, we need to do a bit of work to figure this out and
insert the table prefix (if it exists) in the proper position, and escape only
the correct identifiers.</long-description>
          <tag name="param" line="706" description="" type="string|array" variable="$item">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$prefixSingle">
            <type>boolean</type>
          </tag>
          <tag name="param" line="706" description="" type="mixed" variable="$protectIdentifiers">
            <type>mixed</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$fieldExists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="706" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefixSingle</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$protectIdentifiers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fieldExists</name>
          <default>true</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="879" package="Default">
        <name>escapeIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeIdentifiers()</full_name>
        <docblock line="879">
          <description>Escape the SQL Identifiers</description>
          <long-description>This function escapes column and table names</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$item">
            <type>mixed</type>
          </tag>
          <tag name="return" line="879" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="946" package="Default">
        <name>prefixTable</name>
        <full_name>\CodeIgniter\Database\BaseConnection::prefixTable()</full_name>
        <docblock line="946">
          <description>DB Prefix</description>
          <long-description>Prepends a database prefix if one exists in configuration</long-description>
          <tag name="param" line="946" description="&lt;p&gt;the table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="946" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="967" package="Default">
        <name>setPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setPrefix()</full_name>
        <docblock line="967">
          <description>Set DB Prefix</description>
          <long-description>Set's the DB Prefix to something new without needing to reconnect</long-description>
          <tag name="param" line="967" description="&lt;p&gt;the prefix&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="967" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>''</default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="979" package="Default">
        <name>affectedRows</name>
        <full_name>\CodeIgniter\Database\BaseConnection::affectedRows()</full_name>
        <docblock line="979">
          <description>Returns the total number of rows affected by this query.</description>
          <long-description></long-description>
          <tag name="return" line="979" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="993" package="Default">
        <name>escape</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escape()</full_name>
        <docblock line="993">
          <description>"Smart" Escape String</description>
          <long-description>Escapes data based on type.
Sets boolean and null types</long-description>
          <tag name="param" line="993" description="" type="" variable="$str"/>
          <tag name="return" line="993" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::escape()" refers="\CodeIgniter\Database\ConnectionInterface::escape()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_escape"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1026" package="Default">
        <name>escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeString()</full_name>
        <docblock line="1026">
          <description>Escape String</description>
          <long-description></long-description>
          <tag name="param" line="1026" description="&lt;p&gt;Input string&lt;/p&gt;" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="param" line="1026" description="&lt;p&gt;Whether or not the string will be used in a LIKE condition&lt;/p&gt;" type="boolean" variable="$like">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1026" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string|array&lt;mixed,string&gt;</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$like</name>
          <default>FALSE</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1064" package="Default">
        <name>escapeLikeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeLikeString()</full_name>
        <docblock line="1064">
          <description>Escape LIKE String</description>
          <long-description>Calls the individual driver for platform
specific escaping for LIKE conditions</long-description>
          <tag name="param" line="1064" description="" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="return" line="1064" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1081" package="Default">
        <name>_escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_escapeString()</full_name>
        <docblock line="1081">
          <description>Platform independent string escape.</description>
          <long-description>Will likely be overridden in child classes.</long-description>
          <tag name="param" line="1081" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="1081" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1098" package="Default">
        <name>callFunction</name>
        <full_name>\CodeIgniter\Database\BaseConnection::callFunction()</full_name>
        <docblock line="1098">
          <description>This function enables you to call PHP database functions that are not natively included
in CodeIgniter, in a platform independent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1098" description="" type="string" variable="$functionName">
            <type>string</type>
          </tag>
          <tag name="param" line="1098" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="1098" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="1098" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::callFunction()" refers="\CodeIgniter\Database\ConnectionInterface::callFunction()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_callFunction"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$functionName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1132" package="Default">
        <name>listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::listTables()</full_name>
        <docblock line="1132">
          <description>Returns an array of table names</description>
          <long-description></long-description>
          <tag name="param" line="1132" description="&lt;p&gt;= FALSE&lt;/p&gt;" type="string" variable="$constrain_by_prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="1132" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrain_by_prefix</name>
          <default>FALSE</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1191" package="Default">
        <name>tableExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::tableExists()</full_name>
        <docblock line="1191">
          <description>Determine if a particular table exists</description>
          <long-description></long-description>
          <tag name="param" line="1191" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="1191" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1206" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldNames()</full_name>
        <docblock line="1206">
          <description>Fetch Field Names</description>
          <long-description></long-description>
          <tag name="param" line="1206" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="1206" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1261" package="Default">
        <name>fieldExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::fieldExists()</full_name>
        <docblock line="1261">
          <description>Determine if a particular field exists</description>
          <long-description></long-description>
          <tag name="param" line="1261" description="" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="1261" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="1261" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1274" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldData()</full_name>
        <docblock line="1274">
          <description>Returns an object with field data</description>
          <long-description></long-description>
          <tag name="param" line="1274" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1274" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1291" package="Default">
        <name>error</name>
        <full_name>\CodeIgniter\Database\BaseConnection::error()</full_name>
        <docblock line="1291">
          <description>Returns the last error code and message.</description>
          <long-description>Must return an array with keys 'code' and 'message':

 return ['code' =&gt; null, 'message' =&gt; null);</long-description>
          <tag name="return" line="1291" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="1300" package="Default">
        <name>insertID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::insertID()</full_name>
        <docblock line="1300">
          <description>Insert ID</description>
          <long-description></long-description>
          <tag name="return" line="1300" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1311" package="Default">
        <name>_listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listTables()</full_name>
        <docblock line="1311">
          <description>Generates the SQL for listing tables in a platform-dependent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1311" description="" type="boolean" variable="$constrainByPrefix">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1311" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrainByPrefix</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1322" package="Default">
        <name>_listColumns</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listColumns()</full_name>
        <docblock line="1322">
          <description>Generates a platform-specific query string so that the column names can be fetched.</description>
          <long-description></long-description>
          <tag name="param" line="1322" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1322" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\BaseConnection</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Session/SessionInterface.php" generated-path="Session.SessionInterface.html" hash="ac5ebb132e5f8afa90fc942fb3e49674" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Session" line="44" package="Default">
      <name>SessionInterface</name>
      <full_name>\CodeIgniter\Session\SessionInterface</full_name>
      <docblock line="44">
        <description>Expected behavior of a session container used with CodeIgniter.</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="50" package="Default">
        <name>initialize</name>
        <full_name>\CodeIgniter\Session\SessionInterface::initialize()</full_name>
        <docblock line="50">
          <description>Initialize the session container.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="59" package="Default">
        <name>regenerate</name>
        <full_name>\CodeIgniter\Session\SessionInterface::regenerate()</full_name>
        <docblock line="59">
          <description>Regenerates the session ID.</description>
          <long-description></long-description>
          <tag name="param" line="59" description="&lt;p&gt;Should old session data be destroyed?&lt;/p&gt;" type="boolean" variable="$destroy">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$destroy</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="66" package="Default">
        <name>destroy</name>
        <full_name>\CodeIgniter\Session\SessionInterface::destroy()</full_name>
        <docblock line="66">
          <description>Destroys the current session.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="82" package="Default">
        <name>set</name>
        <full_name>\CodeIgniter\Session\SessionInterface::set()</full_name>
        <docblock line="82">
          <description>Sets user data into the session.</description>
          <long-description>If $data is a string, then it is interpreted as a session property
key, and  $value is expected to be non-null.

If $data is an array, it is expected to be an array of key/value pairs
to be set as session properties.</long-description>
          <tag name="param" line="82" description="&lt;p&gt;Property name or associative array of properties&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="82" description="&lt;p&gt;Property value if single key provided&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="98" package="Default">
        <name>get</name>
        <full_name>\CodeIgniter\Session\SessionInterface::get()</full_name>
        <docblock line="98">
          <description>Get user data that has been set in the session.</description>
          <long-description>If the property exists as "normal", returns it.
Otherwise, returns an array of any temp or flash data values with the
property key.

Replaces the legacy method $session-&gt;userdata();</long-description>
          <tag name="param" line="98" description="&lt;p&gt;Identifier of the session property to retrieve&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="98" description="The property value(s)" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="109" package="Default">
        <name>has</name>
        <full_name>\CodeIgniter\Session\SessionInterface::has()</full_name>
        <docblock line="109">
          <description>Returns whether an index exists in the session array.</description>
          <long-description></long-description>
          <tag name="param" line="109" description="&lt;p&gt;Identifier of the session property we are interested in.&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="109" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="122" package="Default">
        <name>remove</name>
        <full_name>\CodeIgniter\Session\SessionInterface::remove()</full_name>
        <docblock line="122">
          <description>Remove one or more session properties.</description>
          <long-description>If $key is an array, it is interpreted as an array of string property
identifiers to remove. Otherwise, it is interpreted as the identifier
of a specific session property to remove.</long-description>
          <tag name="param" line="122" description="&lt;p&gt;Identifier of the session property or properties to remove.&lt;/p&gt;" type="" variable="$key"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="138" package="Default">
        <name>setFlashdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::setFlashdata()</full_name>
        <docblock line="138">
          <description>Sets data into the session that will only last for a single request.</description>
          <long-description>Perfect for use with single-use status update messages.

If $data is an array, it is interpreted as an associative array of
key/value pairs for flashdata properties.
Otherwise, it is interpreted as the identifier of a specific
flashdata property, with $value containing the property value.</long-description>
          <tag name="param" line="138" description="&lt;p&gt;Property identifier or associative array of properties&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="138" description="&lt;p&gt;Property value if $data is a scalar&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="151" package="Default">
        <name>getFlashdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::getFlashdata()</full_name>
        <docblock line="151">
          <description>Retrieve one or more items of flash data from the session.</description>
          <long-description>If the item key is null, return all flashdata.</long-description>
          <tag name="param" line="151" description="&lt;p&gt;Property identifier&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="return" line="151" description="The requested property value, or an associative&#10;&#9;array  of them" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="160" package="Default">
        <name>keepFlashdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::keepFlashdata()</full_name>
        <docblock line="160">
          <description>Keeps a single piece of flash data alive for one more request.</description>
          <long-description></long-description>
          <tag name="param" line="160" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="170" package="Default">
        <name>markAsFlashdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::markAsFlashdata()</full_name>
        <docblock line="170">
          <description>Mark a session property or properties as flashdata.</description>
          <long-description></long-description>
          <tag name="param" line="170" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="170" description="if any of the properties are not already set" type="False">
            <type>False</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="179" package="Default">
        <name>unmarkFlashdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::unmarkFlashdata()</full_name>
        <docblock line="179">
          <description>Unmark data in the session as flashdata.</description>
          <long-description></long-description>
          <tag name="param" line="179" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="188" package="Default">
        <name>getFlashKeys</name>
        <full_name>\CodeIgniter\Session\SessionInterface::getFlashKeys()</full_name>
        <docblock line="188">
          <description>Retrieve all of the keys for session data marked as flashdata.</description>
          <long-description></long-description>
          <tag name="return" line="188" description="The property names of all flashdata" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="200" package="Default">
        <name>setTempdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::setTempdata()</full_name>
        <docblock line="200">
          <description>Sets new data into the session, and marks it as temporary data
with a set lifespan.</description>
          <long-description></long-description>
          <tag name="param" line="200" description="&lt;p&gt;Session data key or associative array of items&lt;/p&gt;" type="" variable="$data"/>
          <tag name="param" line="200" description="&lt;p&gt;Value to store&lt;/p&gt;" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="param" line="200" description="&lt;p&gt;Time-to-live in seconds&lt;/p&gt;" type="integer" variable="$ttl">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>300</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="211" package="Default">
        <name>getTempdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::getTempdata()</full_name>
        <docblock line="211">
          <description>Returns either a single piece of tempdata, or all temp data currently
in the session.</description>
          <long-description></long-description>
          <tag name="param" line="211" description="&lt;p&gt;Session data key&lt;/p&gt;" type="" variable="$key"/>
          <tag name="return" line="211" description="Session data value or null if not found." type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="220" package="Default">
        <name>removeTempdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::removeTempdata()</full_name>
        <docblock line="220">
          <description>Removes a single piece of temporary data from the session.</description>
          <long-description></long-description>
          <tag name="param" line="220" description="&lt;p&gt;Session data key&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="232" package="Default">
        <name>markAsTempdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::markAsTempdata()</full_name>
        <docblock line="232">
          <description>Mark one of more pieces of data as being temporary, meaning that
it has a set lifespan within the session.</description>
          <long-description></long-description>
          <tag name="param" line="232" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
          <tag name="param" line="232" description="&lt;p&gt;Time to live, in seconds&lt;/p&gt;" type="integer" variable="$ttl">
            <type>integer</type>
          </tag>
          <tag name="return" line="232" description="False if any of the properties were not set" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$ttl</name>
          <default>300</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="242" package="Default">
        <name>unmarkTempdata</name>
        <full_name>\CodeIgniter\Session\SessionInterface::unmarkTempdata()</full_name>
        <docblock line="242">
          <description>Unmarks temporary data in the session, effectively removing its
lifespan and allowing it to live as long as the session does.</description>
          <long-description></long-description>
          <tag name="param" line="242" description="&lt;p&gt;Property identifier or array of them&lt;/p&gt;" type="" variable="$key"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session" line="251" package="Default">
        <name>getTempKeys</name>
        <full_name>\CodeIgniter\Session\SessionInterface::getTempKeys()</full_name>
        <docblock line="251">
          <description>Retrieve the keys of all session data that have been marked as temporary data.</description>
          <long-description></long-description>
          <tag name="return" line="251" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Toolbar/View/toolbar.tpl.php" generated-path="Debug.Toolbar.View.toolbar.tpl.html" hash="19e294aefe9f3d580f8c3f9cfdfb8d44" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJztWNty2zYQfba+AlXUkmpMKWneLIqexPYkmakvYyl+aTociFxJSCiCBSClmk7/vQuQ4EU322PnodO+yDC42F3sOQcL0pdqnQBR6wyGbQV/qn4kZTtoHfmnQ5IJmIUCsoRG4DovfvssPqefFfn95QvnmDgEf6YsgXAGKox4qiBV0g3D84+3Ydhz+orzZEJFDx063S45DVp+30QLWi1fRoJlqh73C13RfNaGf4jzL+i7cG3Wat8xWxEWD9sxTJYzD62MQz0bJVRKjJcv1tNH/vx1cK4NyTsq/D7+19KzMqNpoJPoKK5oMmYLwDBkITGQfrTD5hIWXKy11eW7DSsbOGJeQieQtAOfkrmA6bBdbfuErDiL3VfdNompop6iE7NCYeyEpdAOxsXI79OgFuE0m2dkygXQaE7cjpoz6QURTxKIFBeSUEk6UZec6DodWXs2RdPIC+ZUjunkLK+w263MniFzXRuQkYmDOI6ZSsBVYgmGDu1g53PzrLnDImVIYzYd5OmVM8W+7fSTc15Rgfy/w99GDn4f+aOp4f/gecQCQTzPUksTrg5WyTU6yXmGAxSanS0xNdtTc6BxUXUl8oGeJUYvw/Y3Fqv5CXnz6sd2cPX28sLvq/leq9fa6uz68ub66uJqfJ/poB2cf7p9O/54fVU3tZxCkrDhqwHpMOKTjoTZAmlyxpep0nMvX9b4YgLkemDk59L4fCmoYjy18tmIkUM4KEnXL/avDW1RfDXh8bowMHozFBe4FoTFwm1kd7wV/7gm5a6VQr/0jEMN0BbUZ1ZHXib4isUQE9SLLJB/nPRK5d0jvTqh7tHQJs30gfbLAWGR6tTaNDgHRVkirQBzuz56a1WFR/OYSWwIa7eqoSlXQ6Tm0aZE9WRR1I8p+YlcL9W2foz8mpvSrvUi1OQ5KpVMBV9UsBRIbEGxKqw1AppILJ2RYYDUVLCQRalN+vZoeNEmPI0SFn3ViZiWgB2hp/hshrVBV2PND9fRdZBKKJ7wbyBcHFYtUrdEx8MfG9LU0ukOiAC1FCmZ0kTCYBdSdoGpvS66KS0tkiyPbCZDKgSWv9hIbSf2iNGVfFSSPSc0K53iWLanRSW6reqa4Ka2X2Ft6rqiCXKyeRrYk0yP42qruCTfpoobBuVYB7P/HBW7xi1gqm4Rp1s+/qscHUE053mE3GhQPvq7HAHWf+/aDEOoUBTrj4mR2Q4vp1WqtT2UR9fe7tQ8cWpnTq3HYX5VB86sEhZLBTGe/dw0K6Lwby7Dnt/PHtMirZhGIKU+lAvxPFYEMl++h9ma2DbAJwmC6JWW1ZbUdU5LUG4nHF2MRtiGuruuKpE+1Hfa1GlfpJXT+UFEtg7/5/JzcblBZfK8XK573HJoGRdzkKmjiARYaO8TIDRSbAXW/6b7Vs7YW/hjCVIVHdIlGmO3I/JZL2ByBNFSgG58xPkwHt+MHEzGjJwuvpI4vcoYe+qN4IrjVeAOhE7L9EvS3eyrtcs4riHYYus+3kPzXvBYmaKL/c3nTdAJ31/gBRFHzW5TCUq/fdXF1LyJNaWk89cqSim+K+2UUU1FDRHpFZsqahgUnhoWFUX3MrRO0Bo/Ny4qTRQyLrdguMG5J+GgnR4G4uZ6dBgJ7eLBUJhN/Pux0PcTVM8mHB/y6SchUvgLixCHwCnCHURnw92DgbI7tLdU7JW70SqLAotMrcvWQfSnEZYuYXAvsGaFqd8VQmxv+YdANsZ3evSrfr/aXPGdQN9xDJ5x/pXBk/COjItDMOdBDsOce/lPnIimIcqMp9hy6x0RgclnDTIjRdVSnvEY0ek5xCNOL8+vYXULVOoOeG8LbAi+5uB5FJ87fD7JN/09v+b3cCNfc5AdO4pnJGzXfg/i5Kb244n9wotTNVBYyrCRDmpfa/8BLaUwNQ==</source>
  </file>
  <file path="Security/Security.php" generated-path="Security.Security.html" hash="d5f98ec39bf8e64a43cf09c2b4cbb79f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="RequestInterface">\CodeIgniter\HTTP\RequestInterface</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Security" line="44" package="Default">
      <extends/>
      <name>Security</name>
      <full_name>\CodeIgniter\Security\Security</full_name>
      <docblock line="44">
        <description>HTTP security handler.</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="53" package="Default">
        <name>$CSRFEnabled</name>
        <full_name>\CodeIgniter\Security\Security::CSRFEnabled</full_name>
        <default>true</default>
        <docblock line="53">
          <description>CSRF Enabled</description>
          <long-description>Whether CSRF Protection is enabled.</long-description>
          <tag name="var" line="53" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="62" package="Default">
        <name>$CSRFHash</name>
        <full_name>\CodeIgniter\Security\Security::CSRFHash</full_name>
        <default></default>
        <docblock line="62">
          <description>CSRF Hash</description>
          <long-description>Random hash for Cross Site Request Forgery protection cookie</long-description>
          <tag name="var" line="62" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="72" package="Default">
        <name>$CSRFExpire</name>
        <full_name>\CodeIgniter\Security\Security::CSRFExpire</full_name>
        <default>7200</default>
        <docblock line="72">
          <description>CSRF Expire time</description>
          <long-description>Expiration time for Cross Site Request Forgery protection cookie.
Defaults to two hours (in seconds).</long-description>
          <tag name="var" line="72" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="81" package="Default">
        <name>$CSRFTokenName</name>
        <full_name>\CodeIgniter\Security\Security::CSRFTokenName</full_name>
        <default>'CSRFToken'</default>
        <docblock line="81">
          <description>CSRF Token name</description>
          <long-description>Token name for Cross Site Request Forgery protection cookie.</long-description>
          <tag name="var" line="81" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="90" package="Default">
        <name>$CSRFCookieName</name>
        <full_name>\CodeIgniter\Security\Security::CSRFCookieName</full_name>
        <default>'CSRFToken'</default>
        <docblock line="90">
          <description>CSRF Cookie name</description>
          <long-description>Cookie name for Cross Site Request Forgery protection cookie.</long-description>
          <tag name="var" line="90" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="100" package="Default">
        <name>$CSRFRegenerate</name>
        <full_name>\CodeIgniter\Security\Security::CSRFRegenerate</full_name>
        <default>true</default>
        <docblock line="100">
          <description>CSRF Regenerate</description>
          <long-description>If true, the CSRF Token will be regenerated on every request.
If false, will stay the same for the life of the cookie.</long-description>
          <tag name="var" line="100" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="109" package="Default">
        <name>$CSRFExcludeURIs</name>
        <full_name>\CodeIgniter\Security\Security::CSRFExcludeURIs</full_name>
        <default>array()</default>
        <docblock line="109">
          <description>CSRF Exclude URIs</description>
          <long-description>An array of URIs to skip when checking CSRF.</long-description>
          <tag name="var" line="109" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="116" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Security\Security::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="116">
          <description>Typically will be a forward slash</description>
          <long-description></long-description>
          <tag name="var" line="116" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="123" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Security\Security::cookieDomain</full_name>
        <default>''</default>
        <docblock line="123">
          <description>Set to .your-domain.com for site-wide cookies</description>
          <long-description></long-description>
          <tag name="var" line="123" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Security" line="130" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Security\Security::cookieSecure</full_name>
        <default>false</default>
        <docblock line="130">
          <description>Cookie will only be set if a secure HTTPS connection exists.</description>
          <long-description></long-description>
          <tag name="var" line="130" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Security" line="137" package="Default">
        <name>$filenameBadChars</name>
        <full_name>\CodeIgniter\Security\Security::filenameBadChars</full_name>
        <default>array('../', '&lt;!--', '--&gt;', '&lt;', '&gt;', "'", '"', '&amp;', '$', '#', '{', '}', '[', ']', '=', ';', '?', '%20', '%22', '%3c', '%253c', '%3e', '%0e', '%28', '%29', '%2528', '%26', '%24', '%3f', '%3b', '%3d')</default>
        <docblock line="137">
          <description>List of sanitize filename strings</description>
          <long-description></long-description>
          <tag name="var" line="137" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="166" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Security\Security::__construct()</full_name>
        <docblock line="166">
          <description>Security constructor.</description>
          <long-description>Stores our configuration and fires off the init() method to
setup initial state.</long-description>
          <tag name="param" line="166" description="" type="\Config\App" variable="$config">
            <type>\Config\App</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\Config\App</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="200" package="Default">
        <name>CSRFVerify</name>
        <full_name>\CodeIgniter\Security\Security::CSRFVerify()</full_name>
        <docblock line="200">
          <description>CSRF Verify</description>
          <long-description></long-description>
          <tag name="param" line="200" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
          <tag name="return" line="200" description="" type="\CodeIgniter\Security\Security">
            <type>\CodeIgniter\Security\Security</type>
          </tag>
          <tag name="throws" line="200" description="" type="\LogicException">
            <type>\LogicException</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="261" package="Default">
        <name>CSRFSetCookie</name>
        <full_name>\CodeIgniter\Security\Security::CSRFSetCookie()</full_name>
        <docblock line="261">
          <description>CSRF Set Cookie</description>
          <long-description></long-description>
          <tag name="codeCoverageIgnore" line="261" description=""/>
          <tag name="param" line="261" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
            <type>\CodeIgniter\HTTP\RequestInterface</type>
          </tag>
          <tag name="return" line="261" description="" type="\CodeIgniter\Security\Security">
            <type>\CodeIgniter\Security\Security</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$request</name>
          <default></default>
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="293" package="Default">
        <name>getCSRFHash</name>
        <full_name>\CodeIgniter\Security\Security::getCSRFHash()</full_name>
        <docblock line="293">
          <description>Returns the current CSRF Hash.</description>
          <long-description></long-description>
          <tag name="return" line="293" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="305" package="Default">
        <name>getCSRFTokenName</name>
        <full_name>\CodeIgniter\Security\Security::getCSRFTokenName()</full_name>
        <docblock line="305">
          <description>Returns the CSRF Token Name.</description>
          <long-description></long-description>
          <tag name="return" line="305" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Security" line="317" package="Default">
        <name>CSRFSetHash</name>
        <full_name>\CodeIgniter\Security\Security::CSRFSetHash()</full_name>
        <docblock line="317">
          <description>Sets the CSRF Hash and cookie.</description>
          <long-description></long-description>
          <tag name="return" line="317" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Security" line="357" package="Default">
        <name>sanitizeFilename</name>
        <full_name>\CodeIgniter\Security\Security::sanitizeFilename()</full_name>
        <docblock line="357">
          <description>Sanitize Filename</description>
          <long-description>Tries to sanitize filenames in order to prevent directory traversal attempts
and other security threats, which is particularly useful for files that
were supplied via user input.

If it is acceptable for the user input to include relative paths,
e.g. file/in/some/approved/folder.txt, you can set the second optional
parameter, $relative_path to TRUE.</long-description>
          <tag name="param" line="357" description="&lt;p&gt;Input file name&lt;/p&gt;" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="param" line="357" description="&lt;p&gt;Whether to preserve paths&lt;/p&gt;" type="boolean" variable="$relative_path">
            <type>boolean</type>
          </tag>
          <tag name="return" line="357" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$relative_path</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/LoggerTrait.php" generated-path="Log.LoggerTrait.html" hash="f249fe38794419e92943ca9dffa68366" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <trait namespace="Psr\Log" line="46" package="Default">
      <name>LoggerTrait</name>
      <full_name>\Psr\Log\LoggerTrait</full_name>
      <docblock line="46">
        <description>This is a simple Logger trait that classes unable to extend AbstractLogger
(because they extend another class, etc) can include.</description>
        <long-description>It simply delegates all log-level-specific methods to the `log` method to
reduce boilerplate code that a simple Logger that does the same thing with
messages regardless of the error level has to implement.</long-description>
        <tag name="package" line="46" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="56" package="Default">
        <name>emergency</name>
        <full_name>\Psr\Log\LoggerTrait::emergency()</full_name>
        <docblock line="56">
          <description>System is unusable.</description>
          <long-description></long-description>
          <tag name="param" line="56" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="56" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="56" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="71" package="Default">
        <name>alert</name>
        <full_name>\Psr\Log\LoggerTrait::alert()</full_name>
        <docblock line="71">
          <description>Action must be taken immediately.</description>
          <long-description>Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</long-description>
          <tag name="param" line="71" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="71" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="71" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="85" package="Default">
        <name>critical</name>
        <full_name>\Psr\Log\LoggerTrait::critical()</full_name>
        <docblock line="85">
          <description>Critical conditions.</description>
          <long-description>Example: Application component unavailable, unexpected exception.</long-description>
          <tag name="param" line="85" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="85" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="85" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="98" package="Default">
        <name>error</name>
        <full_name>\Psr\Log\LoggerTrait::error()</full_name>
        <docblock line="98">
          <description>Runtime errors that do not require immediate action but should typically
be logged and monitored.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="98" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="113" package="Default">
        <name>warning</name>
        <full_name>\Psr\Log\LoggerTrait::warning()</full_name>
        <docblock line="113">
          <description>Exceptional occurrences that are not errors.</description>
          <long-description>Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</long-description>
          <tag name="param" line="113" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="113" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="113" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="125" package="Default">
        <name>notice</name>
        <full_name>\Psr\Log\LoggerTrait::notice()</full_name>
        <docblock line="125">
          <description>Normal but significant events.</description>
          <long-description></long-description>
          <tag name="param" line="125" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="125" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="125" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="139" package="Default">
        <name>info</name>
        <full_name>\Psr\Log\LoggerTrait::info()</full_name>
        <docblock line="139">
          <description>Interesting events.</description>
          <long-description>Example: User logs in, SQL logs.</long-description>
          <tag name="param" line="139" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="139" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="139" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="151" package="Default">
        <name>debug</name>
        <full_name>\Psr\Log\LoggerTrait::debug()</full_name>
        <docblock line="151">
          <description>Detailed debug information.</description>
          <long-description></long-description>
          <tag name="param" line="151" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="151" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="151" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="Psr\Log" line="164" package="Default">
        <name>log</name>
        <full_name>\Psr\Log\LoggerTrait::log()</full_name>
        <docblock line="164">
          <description>Logs with an arbitrary level.</description>
          <long-description></long-description>
          <tag name="param" line="164" description="" type="mixed" variable="$level">
            <type>mixed</type>
          </tag>
          <tag name="param" line="164" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="164" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="164" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/MigrationRunner.php" generated-path="Database.MigrationRunner.html" hash="eab8bf34b3631e80a8c0c5b40c36550f" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <namespace-alias name="ConfigException">\CodeIgniter\ConfigException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="45" package="Default">
      <extends/>
      <name>MigrationRunner</name>
      <full_name>\CodeIgniter\Database\MigrationRunner</full_name>
      <docblock line="45">
        <description>Class MigrationRunner</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="52" package="Default">
        <name>$enabled</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::enabled</full_name>
        <default>false</default>
        <docblock line="52">
          <description>Whether or not migrations are allowed to run.</description>
          <long-description></long-description>
          <tag name="var" line="52" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="59" package="Default">
        <name>$type</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::type</full_name>
        <default></default>
        <docblock line="59">
          <description>The type of migrations to use (sequential or timestamp)</description>
          <long-description></long-description>
          <tag name="var" line="59" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="66" package="Default">
        <name>$table</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::table</full_name>
        <default></default>
        <docblock line="66">
          <description>Name of table to store meta information</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="73" package="Default">
        <name>$currentVersion</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::currentVersion</full_name>
        <default>0</default>
        <docblock line="73">
          <description>The version that current() will take us to.</description>
          <long-description></long-description>
          <tag name="var" line="73" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="80" package="Default">
        <name>$path</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::path</full_name>
        <default></default>
        <docblock line="80">
          <description>The location where migrations can be found.</description>
          <long-description></long-description>
          <tag name="var" line="80" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="87" package="Default">
        <name>$regex</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::regex</full_name>
        <default></default>
        <docblock line="87">
          <description>The pattern used to locate migration file versions.</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="94" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::db</full_name>
        <default></default>
        <docblock line="94">
          <description>The main database connection. Used to store
migration information in.</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="101" package="Default">
        <name>$silent</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::silent</full_name>
        <default>false</default>
        <docblock line="101">
          <description>If true, will continue instead of throwing
exceptions.</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="112" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::__construct()</full_name>
        <docblock line="112">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="112" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
          <tag name="param" line="112" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="throws" line="112" description="" type="\CodeIgniter\ConfigException">
            <type>\CodeIgniter\ConfigException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default>null</default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="159" package="Default">
        <name>version</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::version()</full_name>
        <docblock line="159">
          <description>Migrate to a schema version</description>
          <long-description>Calls each migration step required to get to the schema version of
choice</long-description>
          <tag name="param" line="159" description="&lt;p&gt;Target schema version&lt;/p&gt;" type="string" variable="$targetVersion">
            <type>string</type>
          </tag>
          <tag name="param" line="159" description="" type="" variable="$group"/>
          <tag name="return" line="159" description="TRUE if no migrations are found, current version string on success, FALSE on failure" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="throws" line="159" description="" type="\CodeIgniter\ConfigException">
            <type>\CodeIgniter\ConfigException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$targetVersion</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="253" package="Default">
        <name>latest</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::latest()</full_name>
        <docblock line="253">
          <description>Sets the schema to the latest migration</description>
          <long-description></long-description>
          <tag name="return" line="253" description="Current version string on success, FALSE on failure" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="278" package="Default">
        <name>current</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::current()</full_name>
        <docblock line="278">
          <description>Sets the schema to the migration version set in config</description>
          <long-description></long-description>
          <tag name="return" line="278" description="TRUE if no migrations are found, current version string on success, FALSE on failure" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="290" package="Default">
        <name>findMigrations</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::findMigrations()</full_name>
        <docblock line="290">
          <description>Retrieves list of available migration scripts</description>
          <long-description></long-description>
          <tag name="return" line="290" description="list of migration file paths sorted by version" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="329" package="Default">
        <name>setPath</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::setPath()</full_name>
        <docblock line="329">
          <description>Updates the expected location of the migration files.</description>
          <long-description>Allows other scripts to modify on the fly as needed.</long-description>
          <tag name="param" line="329" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
          <tag name="return" line="329" description="" type="\CodeIgniter\Database\MigrationRunner">
            <type>\CodeIgniter\Database\MigrationRunner</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="344" package="Default">
        <name>getHistory</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::getHistory()</full_name>
        <docblock line="344">
          <description>Grabs the full migration history from the database.</description>
          <long-description></long-description>
          <tag name="param" line="344" description="" type="" variable="$group"/>
          <tag name="return" line="344" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="365" package="Default">
        <name>setSilent</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::setSilent()</full_name>
        <docblock line="365">
          <description>If $silent == true, then will not throw exceptions and will
attempt to continue gracefully.</description>
          <long-description></long-description>
          <tag name="param" line="365" description="" type="boolean" variable="$silent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="365" description="" type="\CodeIgniter\Database\MigrationRunner">
            <type>\CodeIgniter\Database\MigrationRunner</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$silent</name>
          <default></default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="383" package="Default">
        <name>getMigrationNumber</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::getMigrationNumber()</full_name>
        <docblock line="383">
          <description>Extracts the migration number from a filename</description>
          <long-description></long-description>
          <tag name="param" line="383" description="" type="string" variable="$migration">
            <type>string</type>
          </tag>
          <tag name="return" line="383" description="Numeric portion of a migration filename" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$migration</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="398" package="Default">
        <name>getMigrationName</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::getMigrationName()</full_name>
        <docblock line="398">
          <description>Extracts the migration class name from a filename</description>
          <long-description></long-description>
          <tag name="param" line="398" description="" type="string" variable="$migration">
            <type>string</type>
          </tag>
          <tag name="return" line="398" description="text portion of a migration filename" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$migration</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="414" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::getVersion()</full_name>
        <docblock line="414">
          <description>Retrieves current schema version</description>
          <long-description></long-description>
          <tag name="param" line="414" description="" type="" variable="$group"/>
          <tag name="return" line="414" description="Current migration version" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>'default'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="461" package="Default">
        <name>removeHistory</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::removeHistory()</full_name>
        <docblock line="461">
          <description>Removes a single history</description>
          <long-description></long-description>
          <tag name="param" line="461" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="param" line="461" description="&lt;p&gt;The database group&lt;/p&gt;" type="string" variable="$group">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$group</name>
          <default>'default'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="475" package="Default">
        <name>ensureTable</name>
        <full_name>\CodeIgniter\Database\MigrationRunner::ensureTable()</full_name>
        <docblock line="475">
          <description>Ensures that we have created our migrations table
in the database.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/BaseUtils.php" generated-path="Database.BaseUtils.html" hash="13607f47e00ff6697eba19965256958a" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="true" namespace="CodeIgniter\Database" line="44" package="Default">
      <extends/>
      <name>BaseUtils</name>
      <full_name>\CodeIgniter\Database\BaseUtils</full_name>
      <docblock line="44">
        <description>Class BaseUtils</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="51" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\BaseUtils::db</full_name>
        <default></default>
        <docblock line="51">
          <description>Database object</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="object" variable="">
            <type>object</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="60" package="Default">
        <name>$listDatabases</name>
        <full_name>\CodeIgniter\Database\BaseUtils::listDatabases</full_name>
        <default>FALSE</default>
        <docblock line="60">
          <description>List databases statement</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="67" package="Default">
        <name>$optimizeTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeTable</full_name>
        <default>FALSE</default>
        <docblock line="67">
          <description>OPTIMIZE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="74" package="Default">
        <name>$repairTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::repairTable</full_name>
        <default>FALSE</default>
        <docblock line="74">
          <description>REPAIR TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="83" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseUtils::__construct()</full_name>
        <docblock line="83">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="\CodeIgniter\Database\ConnectionInterface|object" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
            <type>object</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface|object</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="95" package="Default">
        <name>listDatabases</name>
        <full_name>\CodeIgniter\Database\BaseUtils::listDatabases()</full_name>
        <docblock line="95">
          <description>List databases</description>
          <long-description></long-description>
          <tag name="return" line="95" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="135" package="Default">
        <name>databaseExists</name>
        <full_name>\CodeIgniter\Database\BaseUtils::databaseExists()</full_name>
        <docblock line="135">
          <description>Determine if a particular database exists</description>
          <long-description></long-description>
          <tag name="param" line="135" description="" type="string" variable="$database_name">
            <type>string</type>
          </tag>
          <tag name="return" line="135" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$database_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="148" package="Default">
        <name>optimizeTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeTable()</full_name>
        <docblock line="148">
          <description>Optimize Table</description>
          <long-description></long-description>
          <tag name="param" line="148" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="148" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="176" package="Default">
        <name>optimizeDatabase</name>
        <full_name>\CodeIgniter\Database\BaseUtils::optimizeDatabase()</full_name>
        <docblock line="176">
          <description>Optimize Database</description>
          <long-description></long-description>
          <tag name="return" line="176" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="217" package="Default">
        <name>repairTable</name>
        <full_name>\CodeIgniter\Database\BaseUtils::repairTable()</full_name>
        <docblock line="217">
          <description>Repair Table</description>
          <long-description></long-description>
          <tag name="param" line="217" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="217" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="249" package="Default">
        <name>getCSVFromResult</name>
        <full_name>\CodeIgniter\Database\BaseUtils::getCSVFromResult()</full_name>
        <docblock line="249">
          <description>Generate CSV from a query result object</description>
          <long-description></long-description>
          <tag name="param" line="249" description="&lt;p&gt;Query result object&lt;/p&gt;" type="object" variable="$query">
            <type>object</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Delimiter (default: ,)&lt;/p&gt;" type="string" variable="$delim">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Newline character (default: \n)&lt;/p&gt;" type="string" variable="$newline">
            <type>string</type>
          </tag>
          <tag name="param" line="249" description="&lt;p&gt;Enclosure (default: &quot;)&lt;/p&gt;" type="string" variable="$enclosure">
            <type>string</type>
          </tag>
          <tag name="return" line="249" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$delim</name>
          <default>','</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$newline</name>
          <default>"\n"</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$enclosure</name>
          <default>'"'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="283" package="Default">
        <name>getXMLFromResult</name>
        <full_name>\CodeIgniter\Database\BaseUtils::getXMLFromResult()</full_name>
        <docblock line="283">
          <description>Generate XML data from a query result object</description>
          <long-description></long-description>
          <tag name="param" line="283" description="&lt;p&gt;Query result object&lt;/p&gt;" type="object" variable="$query">
            <type>object</type>
          </tag>
          <tag name="param" line="283" description="&lt;p&gt;Any preferences&lt;/p&gt;" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="283" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$query</name>
          <default></default>
          <type>object</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="323" package="Default">
        <name>backup</name>
        <full_name>\CodeIgniter\Database\BaseUtils::backup()</full_name>
        <docblock line="323">
          <description>Database Backup</description>
          <long-description></long-description>
          <tag name="param" line="323" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="323" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="434" package="Default">
        <name>_backup</name>
        <full_name>\CodeIgniter\Database\BaseUtils::_backup()</full_name>
        <docblock line="434">
          <description>Platform dependent version of the backup function.</description>
          <long-description></long-description>
          <tag name="param" line="434" description="" type="array|null" variable="$prefs">
            <type>array</type>
            <type>null</type>
          </tag>
          <tag name="return" line="434" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefs</name>
          <default>null</default>
          <type>array|null</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Database/BaseBuilder.php" generated-path="Database.BaseBuilder.html" hash="7cb5a794bb72fd6c61e2271641666f29" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="50" package="CodeIgniter\Database">
      <extends/>
      <name>BaseBuilder</name>
      <full_name>\CodeIgniter\Database\BaseBuilder</full_name>
      <docblock line="50">
        <description>Class BaseBuilder</description>
        <long-description>Provides the core Query Builder methods.
Database-specific Builders might need to override
certain methods to make them work.</long-description>
        <tag name="package" line="50" description="CodeIgniter\Database"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="57" package="CodeIgniter\Database">
        <name>$resetDeleteData</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetDeleteData</full_name>
        <default>false</default>
        <docblock line="57">
          <description>Reset DELETE data flag</description>
          <long-description></long-description>
          <tag name="var" line="57" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="64" package="CodeIgniter\Database">
        <name>$QBSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSelect</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>QB SELECT data</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="71" package="CodeIgniter\Database">
        <name>$QBDistinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBDistinct</full_name>
        <default>false</default>
        <docblock line="71">
          <description>QB DISTINCT flag</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="78" package="CodeIgniter\Database">
        <name>$QBFrom</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBFrom</full_name>
        <default>array()</default>
        <docblock line="78">
          <description>QB FROM data</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="85" package="CodeIgniter\Database">
        <name>$QBJoin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBJoin</full_name>
        <default>array()</default>
        <docblock line="85">
          <description>QB JOIN data</description>
          <long-description></long-description>
          <tag name="var" line="85" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="92" package="CodeIgniter\Database">
        <name>$QBWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhere</full_name>
        <default>array()</default>
        <docblock line="92">
          <description>QB WHERE data</description>
          <long-description></long-description>
          <tag name="var" line="92" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="99" package="CodeIgniter\Database">
        <name>$QBGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBGroupBy</full_name>
        <default>array()</default>
        <docblock line="99">
          <description>QB GROUP BY data</description>
          <long-description></long-description>
          <tag name="var" line="99" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="106" package="CodeIgniter\Database">
        <name>$QBHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBHaving</full_name>
        <default>array()</default>
        <docblock line="106">
          <description>QB HAVING data</description>
          <long-description></long-description>
          <tag name="var" line="106" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="113" package="CodeIgniter\Database">
        <name>$QBKeys</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBKeys</full_name>
        <default>array()</default>
        <docblock line="113">
          <description>QB keys</description>
          <long-description></long-description>
          <tag name="var" line="113" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="120" package="CodeIgniter\Database">
        <name>$QBLimit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBLimit</full_name>
        <default>false</default>
        <docblock line="120">
          <description>QB LIMIT data</description>
          <long-description></long-description>
          <tag name="var" line="120" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="127" package="CodeIgniter\Database">
        <name>$QBOffset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOffset</full_name>
        <default>false</default>
        <docblock line="127">
          <description>QB OFFSET data</description>
          <long-description></long-description>
          <tag name="var" line="127" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="134" package="CodeIgniter\Database">
        <name>$QBOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBOrderBy</full_name>
        <default>array()</default>
        <docblock line="134">
          <description>QB ORDER BY data</description>
          <long-description></long-description>
          <tag name="var" line="134" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="141" package="CodeIgniter\Database">
        <name>$QBSet</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBSet</full_name>
        <default>array()</default>
        <docblock line="141">
          <description>QB data sets</description>
          <long-description></long-description>
          <tag name="var" line="141" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="148" package="CodeIgniter\Database">
        <name>$QBAliasedTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBAliasedTables</full_name>
        <default>array()</default>
        <docblock line="148">
          <description>QB aliased tables list</description>
          <long-description></long-description>
          <tag name="var" line="148" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="155" package="CodeIgniter\Database">
        <name>$QBWhereGroupStarted</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupStarted</full_name>
        <default>false</default>
        <docblock line="155">
          <description>QB WHERE group started flag</description>
          <long-description></long-description>
          <tag name="var" line="155" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="162" package="CodeIgniter\Database">
        <name>$QBWhereGroupCount</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::QBWhereGroupCount</full_name>
        <default>0</default>
        <docblock line="162">
          <description>QB WHERE group count</description>
          <long-description></long-description>
          <tag name="var" line="162" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="169" package="CodeIgniter\Database">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::db</full_name>
        <default></default>
        <docblock line="169">
          <description>A reference to the database connection.</description>
          <long-description></long-description>
          <tag name="var" line="169" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="176" package="CodeIgniter\Database">
        <name>$randomKeyword</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::randomKeyword</full_name>
        <default>array('RAND()', 'RAND(%d)')</default>
        <docblock line="176">
          <description>ORDER BY random keyword</description>
          <long-description></long-description>
          <tag name="var" line="176" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="186" package="CodeIgniter\Database">
        <name>$countString</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countString</full_name>
        <default>'SELECT COUNT(*) AS '</default>
        <docblock line="186">
          <description>COUNT string</description>
          <long-description></long-description>
          <tag name="used-by" line="186" description="CI_DB_driver::count_all()"/>
          <tag name="used-by" line="186" description="BaseBuilder::count_all_results()"/>
          <tag name="var" line="186" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="195" package="CodeIgniter\Database">
        <name>$binds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::binds</full_name>
        <default>array()</default>
        <docblock line="195">
          <description>Collects the named parameters and
their values for later binding
in the Query object.</description>
          <long-description></long-description>
          <tag name="var" line="195" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="207" package="CodeIgniter\Database">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::__construct()</full_name>
        <docblock line="207">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\type" variable="$tableName">
            <type>\CodeIgniter\Database\type</type>
          </tag>
          <tag name="param" line="207" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="param" line="207" description="" type="array" variable="$options">
            <type>array</type>
          </tag>
          <tag name="throws" line="207" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>\CodeIgniter\Database\type</type>
        </argument>
        <argument line="0" by_reference="true">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$options</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="236" package="CodeIgniter\Database">
        <name>getBinds</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getBinds()</full_name>
        <docblock line="236">
          <description>Returns an array of bind values and their
named parameters for binding in the Query object later.</description>
          <long-description></long-description>
          <tag name="return" line="236" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="253" package="CodeIgniter\Database">
        <name>select</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::select()</full_name>
        <docblock line="253">
          <description>Select</description>
          <long-description>Generates the SELECT portion of the query</long-description>
          <tag name="param" line="253" description="" type="string|array" variable="$select">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="253" description="" type="mixed" variable="$escape">
            <type>mixed</type>
          </tag>
          <tag name="return" line="253" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>'*'</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="289" package="CodeIgniter\Database">
        <name>selectMax</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMax()</full_name>
        <docblock line="289">
          <description>Select Max</description>
          <long-description>Generates a SELECT MAX(field) portion of a query</long-description>
          <tag name="param" line="289" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="289" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="289" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="306" package="CodeIgniter\Database">
        <name>selectMin</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectMin()</full_name>
        <docblock line="306">
          <description>Select Min</description>
          <long-description>Generates a SELECT MIN(field) portion of a query</long-description>
          <tag name="param" line="306" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="306" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="306" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="323" package="CodeIgniter\Database">
        <name>selectAvg</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectAvg()</full_name>
        <docblock line="323">
          <description>Select Average</description>
          <long-description>Generates a SELECT AVG(field) portion of a query</long-description>
          <tag name="param" line="323" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="323" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="323" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="340" package="CodeIgniter\Database">
        <name>selectSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::selectSum()</full_name>
        <docblock line="340">
          <description>Select Sum</description>
          <long-description>Generates a SELECT SUM(field) portion of a query</long-description>
          <tag name="param" line="340" description="&lt;p&gt;the field&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="340" description="&lt;p&gt;an alias&lt;/p&gt;" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="return" line="340" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="361" package="CodeIgniter\Database">
        <name>maxMinAvgSum</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::maxMinAvgSum()</full_name>
        <docblock line="361">
          <description>SELECT [MAX|MIN|AVG|SUM]()</description>
          <long-description></long-description>
          <tag name="used-by" line="361" description="selectMax()"/>
          <tag name="used-by" line="361" description="selectMin()"/>
          <tag name="used-by" line="361" description="selectAvg()"/>
          <tag name="used-by" line="361" description="selectSum()"/>
          <tag name="param" line="361" description="&lt;p&gt;Field name&lt;/p&gt;" type="string" variable="$select">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$alias">
            <type>string</type>
          </tag>
          <tag name="param" line="361" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="361" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'MAX'</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="397" package="CodeIgniter\Database">
        <name>createAliasFromTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::createAliasFromTable()</full_name>
        <docblock line="397">
          <description>Determines the alias name based on the table</description>
          <long-description></long-description>
          <tag name="param" line="397" description="" type="string" variable="$item">
            <type>string</type>
          </tag>
          <tag name="return" line="397" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="420" package="CodeIgniter\Database">
        <name>distinct</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::distinct()</full_name>
        <docblock line="420">
          <description>DISTINCT</description>
          <long-description>Sets a flag which tells the query string compiler to add DISTINCT</long-description>
          <tag name="param" line="420" description="" type="boolean" variable="$val">
            <type>boolean</type>
          </tag>
          <tag name="return" line="420" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$val</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="439" package="CodeIgniter\Database">
        <name>from</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::from()</full_name>
        <docblock line="439">
          <description>From</description>
          <long-description>Generates the FROM portion of the query</long-description>
          <tag name="param" line="439" description="&lt;p&gt;can be a string or array&lt;/p&gt;" type="mixed" variable="$from">
            <type>mixed</type>
          </tag>
          <tag name="param" line="439" description="&lt;p&gt;Should we remove the first table existing?&lt;/p&gt;" type="boolean" variable="$overwrite">
            <type>boolean</type>
          </tag>
          <tag name="return" line="439" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$from</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$overwrite</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="488" package="CodeIgniter\Database">
        <name>join</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::join()</full_name>
        <docblock line="488">
          <description>JOIN</description>
          <long-description>Generates the JOIN portion of the query</long-description>
          <tag name="param" line="488" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the join condition&lt;/p&gt;" type="string" variable="$cond">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;the type of join&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="488" description="&lt;p&gt;whether not to try to escape identifiers&lt;/p&gt;" type="string" variable="$escape">
            <type>string</type>
          </tag>
          <tag name="return" line="488" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$cond</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="578" package="CodeIgniter\Database">
        <name>where</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::where()</full_name>
        <docblock line="578">
          <description>WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="578" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="578" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="578" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="597" package="CodeIgniter\Database">
        <name>orWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhere()</full_name>
        <docblock line="597">
          <description>OR WHERE</description>
          <long-description>Generates the WHERE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="597" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="597" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="597" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="620" package="CodeIgniter\Database">
        <name>whereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereHaving()</full_name>
        <docblock line="620">
          <description>WHERE, HAVING</description>
          <long-description></long-description>
          <tag name="used-by" line="620" description="where()"/>
          <tag name="used-by" line="620" description="orWhere()"/>
          <tag name="used-by" line="620" description="having()"/>
          <tag name="used-by" line="620" description="orHaving()"/>
          <tag name="param" line="620" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
          <tag name="param" line="620" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="620" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="620" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="684" package="CodeIgniter\Database">
        <name>whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereIn()</full_name>
        <docblock line="684">
          <description>WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="684" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="684" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="684" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="684" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="703" package="CodeIgniter\Database">
        <name>orWhereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereIn()</full_name>
        <docblock line="703">
          <description>OR WHERE IN</description>
          <long-description>Generates a WHERE field IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="703" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="703" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="703" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="703" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="722" package="CodeIgniter\Database">
        <name>whereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::whereNotIn()</full_name>
        <docblock line="722">
          <description>WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'AND' if appropriate.</long-description>
          <tag name="param" line="722" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="722" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="722" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="722" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="741" package="CodeIgniter\Database">
        <name>orWhereNotIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orWhereNotIn()</full_name>
        <docblock line="741">
          <description>OR WHERE NOT IN</description>
          <long-description>Generates a WHERE field NOT IN('item', 'item') SQL query,
joined with 'OR' if appropriate.</long-description>
          <tag name="param" line="741" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="741" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="741" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="741" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="764" package="CodeIgniter\Database">
        <name>_whereIn</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_whereIn()</full_name>
        <docblock line="764">
          <description>Internal WHERE IN</description>
          <long-description></long-description>
          <tag name="used-by" line="764" description="WhereIn()"/>
          <tag name="used-by" line="764" description="orWhereIn()"/>
          <tag name="used-by" line="764" description="whereNotIn()"/>
          <tag name="used-by" line="764" description="orWhereNotIn()"/>
          <tag name="param" line="764" description="&lt;p&gt;The field to search&lt;/p&gt;" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;The values searched on&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="764" description="&lt;p&gt;If the statement would be IN or NOT IN&lt;/p&gt;" type="boolean" variable="$not">
            <type>boolean</type>
          </tag>
          <tag name="param" line="764" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="764" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="764" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="819" package="CodeIgniter\Database">
        <name>like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::like()</full_name>
        <docblock line="819">
          <description>LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="819" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="819" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="819" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="839" package="CodeIgniter\Database">
        <name>notLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notLike()</full_name>
        <docblock line="839">
          <description>NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="839" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="839" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="839" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="859" package="CodeIgniter\Database">
        <name>orLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orLike()</full_name>
        <docblock line="859">
          <description>OR LIKE</description>
          <long-description>Generates a %LIKE% portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="859" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="859" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="859" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="879" package="CodeIgniter\Database">
        <name>orNotLike</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotLike()</full_name>
        <docblock line="879">
          <description>OR NOT LIKE</description>
          <long-description>Generates a NOT LIKE portion of the query.
Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="879" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="879" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="903" package="CodeIgniter\Database">
        <name>_like</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_like()</full_name>
        <docblock line="903">
          <description>Internal LIKE</description>
          <long-description></long-description>
          <tag name="used-by" line="903" description="like()"/>
          <tag name="used-by" line="903" description="orLike()"/>
          <tag name="used-by" line="903" description="notLike()"/>
          <tag name="used-by" line="903" description="orNotLike()"/>
          <tag name="param" line="903" description="" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$match">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$side">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="903" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="903" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$match</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$side</name>
          <default>'both'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="961" package="CodeIgniter\Database">
        <name>groupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupStart()</full_name>
        <docblock line="961">
          <description>Starts a query group.</description>
          <long-description></long-description>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$not">
            <type>string</type>
          </tag>
          <tag name="param" line="961" description="&lt;p&gt;(Internal use only)&lt;/p&gt;" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="961" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$not</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default>'AND '</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="985" package="CodeIgniter\Database">
        <name>orGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orGroupStart()</full_name>
        <docblock line="985">
          <description>Starts a query group, but ORs the group</description>
          <long-description></long-description>
          <tag name="return" line="985" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="997" package="CodeIgniter\Database">
        <name>notGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::notGroupStart()</full_name>
        <docblock line="997">
          <description>Starts a query group, but NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="997" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1009" package="CodeIgniter\Database">
        <name>orNotGroupStart</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orNotGroupStart()</full_name>
        <docblock line="1009">
          <description>Starts a query group, but OR NOTs the group</description>
          <long-description></long-description>
          <tag name="return" line="1009" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1021" package="CodeIgniter\Database">
        <name>groupEnd</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupEnd()</full_name>
        <docblock line="1021">
          <description>Ends a query group</description>
          <long-description></long-description>
          <tag name="return" line="1021" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1048" package="CodeIgniter\Database">
        <name>groupGetType</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupGetType()</full_name>
        <docblock line="1048">
          <description>Group_get_type</description>
          <long-description></long-description>
          <tag name="used-by" line="1048" description="groupStart()"/>
          <tag name="used-by" line="1048" description="_like()"/>
          <tag name="used-by" line="1048" description="whereHaving()"/>
          <tag name="used-by" line="1048" description="_whereIn()"/>
          <tag name="param" line="1048" description="" type="string" variable="$type">
            <type>string</type>
          </tag>
          <tag name="return" line="1048" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$type</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1069" package="CodeIgniter\Database">
        <name>groupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::groupBy()</full_name>
        <docblock line="1069">
          <description>GROUP BY</description>
          <long-description></long-description>
          <tag name="param" line="1069" description="" type="string" variable="$by">
            <type>string</type>
          </tag>
          <tag name="param" line="1069" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1069" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$by</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1108" package="CodeIgniter\Database">
        <name>having</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::having()</full_name>
        <docblock line="1108">
          <description>HAVING</description>
          <long-description>Separates multiple calls with 'AND'.</long-description>
          <tag name="param" line="1108" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1108" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1108" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1126" package="CodeIgniter\Database">
        <name>orHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orHaving()</full_name>
        <docblock line="1126">
          <description>OR HAVING</description>
          <long-description>Separates multiple calls with 'OR'.</long-description>
          <tag name="param" line="1126" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1126" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1126" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1142" package="CodeIgniter\Database">
        <name>orderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::orderBy()</full_name>
        <docblock line="1142">
          <description>ORDER BY</description>
          <long-description></long-description>
          <tag name="param" line="1142" description="" type="string" variable="$orderby">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="&lt;p&gt;ASC, DESC or RANDOM&lt;/p&gt;" type="string" variable="$direction">
            <type>string</type>
          </tag>
          <tag name="param" line="1142" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1142" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orderby</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$direction</name>
          <default>''</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1201" package="CodeIgniter\Database">
        <name>limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::limit()</full_name>
        <docblock line="1201">
          <description>LIMIT</description>
          <long-description></long-description>
          <tag name="param" line="1201" description="&lt;p&gt;LIMIT value&lt;/p&gt;" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="param" line="1201" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1201" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1225" package="CodeIgniter\Database">
        <name>offset</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::offset()</full_name>
        <docblock line="1225">
          <description>Sets the OFFSET value</description>
          <long-description></long-description>
          <tag name="param" line="1225" description="&lt;p&gt;OFFSET value&lt;/p&gt;" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1225" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default></default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1246" package="CodeIgniter\Database">
        <name>_limit</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_limit()</full_name>
        <docblock line="1246">
          <description>LIMIT string</description>
          <long-description>Generates a platform-specific LIMIT clause.</long-description>
          <tag name="param" line="1246" description="&lt;p&gt;SQL Query&lt;/p&gt;" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="1246" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1264" package="CodeIgniter\Database">
        <name>set</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::set()</full_name>
        <docblock line="1264">
          <description>The "set" function.</description>
          <long-description>Allows key/value pairs to be set for inserting or updating</long-description>
          <tag name="param" line="1264" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1264" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1264" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1264" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1295" package="CodeIgniter\Database">
        <name>getCompiledSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledSelect()</full_name>
        <docblock line="1295">
          <description>Get SELECT query string</description>
          <long-description>Compiles a SELECT query string and returns the sql.</long-description>
          <tag name="param" line="1295" description="&lt;p&gt;TRUE: resets QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1295" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1321" package="CodeIgniter\Database">
        <name>get</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::get()</full_name>
        <docblock line="1321">
          <description>Get</description>
          <long-description>Compiles the select statement based on the other functions called
and runs the query</long-description>
          <tag name="param" line="1321" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="string" variable="$limit">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;the offset clause&lt;/p&gt;" type="string" variable="$offset">
            <type>string</type>
          </tag>
          <tag name="param" line="1321" description="&lt;p&gt;If true, returns the generate SQL, otherwise executes the query.&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1321" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1348" package="CodeIgniter\Database">
        <name>countAll</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAll()</full_name>
        <docblock line="1348">
          <description>"Count All" query</description>
          <long-description>Generates a platform-specific query string that counts all records in
the specified database</long-description>
          <tag name="param" line="1348" description="&lt;p&gt;Are we running automated tests?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1348" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1385" package="CodeIgniter\Database">
        <name>countAllResults</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::countAllResults()</full_name>
        <docblock line="1385">
          <description>"Count All Results" query</description>
          <long-description>Generates a platform-specific query string that counts all records
returned by an Query Builder query.</long-description>
          <tag name="param" line="1385" description="" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="1385" description="&lt;p&gt;the reset clause&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1385" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1441" package="CodeIgniter\Database">
        <name>getWhere</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getWhere()</full_name>
        <docblock line="1441">
          <description>Get_Where</description>
          <long-description>Allows the where clause, limit and offset to be added directly</long-description>
          <tag name="param" line="1441" description="" type="string" variable="$where">
            <type>string</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1441" description="" type="integer" variable="$offset">
            <type>integer</type>
          </tag>
          <tag name="return" line="1441" description="" type="\CodeIgniter\Database\CI_DB_result">
            <type>\CodeIgniter\Database\CI_DB_result</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$offset</name>
          <default>null</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1475" package="CodeIgniter\Database">
        <name>insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insertBatch()</full_name>
        <docblock line="1475">
          <description>Insert_Batch</description>
          <long-description>Compiles batch insert strings and runs the queries</long-description>
          <tag name="param" line="1475" description="&lt;p&gt;An associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1475" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1475" description="" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1475" description="" type="boolean" variable="$testing">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1475" description="Number of rows inserted or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
          <tag name="throws" line="1475" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$testing</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1545" package="CodeIgniter\Database">
        <name>_insertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insertBatch()</full_name>
        <docblock line="1545">
          <description>Insert batch statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data.</long-description>
          <tag name="param" line="1545" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1545" description="&lt;p&gt;INSERT values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1545" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1561" package="CodeIgniter\Database">
        <name>setInsertBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setInsertBatch()</full_name>
        <docblock line="1561">
          <description>The "setInsertBatch" function.  Allows key/value pairs to be set for batch inserts</description>
          <long-description></long-description>
          <tag name="param" line="1561" description="" type="mixed" variable="$key">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1561" description="" type="string" variable="$value">
            <type>string</type>
          </tag>
          <tag name="param" line="1561" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1561" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1618" package="CodeIgniter\Database">
        <name>getCompiledInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledInsert()</full_name>
        <docblock line="1618">
          <description>Get INSERT query string</description>
          <long-description>Compiles an insert query and returns the sql</long-description>
          <tag name="param" line="1618" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1618" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1654" package="CodeIgniter\Database">
        <name>insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::insert()</full_name>
        <docblock line="1654">
          <description>Insert</description>
          <long-description>Compiles an insert string and runs the query</long-description>
          <tag name="param" line="1654" description="&lt;p&gt;an associative array of insert values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Whether to escape values and identifiers&lt;/p&gt;" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="param" line="1654" description="&lt;p&gt;Used when running tests&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1654" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1695" package="CodeIgniter\Database">
        <name>validateInsert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateInsert()</full_name>
        <docblock line="1695">
          <description>Validate Insert</description>
          <long-description>This method is used by both insert() and getCompiledInsert() to
validate that the there data is actually being set and that table
has been chosen to be inserted into.</long-description>
          <tag name="param" line="1695" description="&lt;p&gt;the table to insert data into&lt;/p&gt;" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="return" line="1695" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1723" package="CodeIgniter\Database">
        <name>_insert</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_insert()</full_name>
        <docblock line="1723">
          <description>Insert statement</description>
          <long-description>Generates a platform-specific insert string from the supplied data</long-description>
          <tag name="param" line="1723" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1723" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$unescapedKeys">
            <type>array</type>
          </tag>
          <tag name="return" line="1723" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$unescapedKeys</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1782" package="CodeIgniter\Database">
        <name>_replace</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_replace()</full_name>
        <docblock line="1782">
          <description>Replace statement</description>
          <long-description>Generates a platform-specific replace string from the supplied data</long-description>
          <tag name="param" line="1782" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert keys&lt;/p&gt;" type="array" variable="$keys">
            <type>array</type>
          </tag>
          <tag name="param" line="1782" description="&lt;p&gt;the insert values&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1782" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$keys</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1799" package="CodeIgniter\Database">
        <name>_fromTables</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_fromTables()</full_name>
        <docblock line="1799">
          <description>FROM tables</description>
          <long-description>Groups tables in FROM clauses if needed, so there is no confusion
about operator precedence.

Note: This is only used (and overridden) by MySQL and CUBRID.</long-description>
          <tag name="return" line="1799" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1815" package="CodeIgniter\Database">
        <name>getCompiledUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledUpdate()</full_name>
        <docblock line="1815">
          <description>Get UPDATE query string</description>
          <long-description>Compiles an update query and returns the sql</long-description>
          <tag name="param" line="1815" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="$reset">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1815" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1846" package="CodeIgniter\Database">
        <name>update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::update()</full_name>
        <docblock line="1846">
          <description>UPDATE</description>
          <long-description>Compiles an update string and runs the query.</long-description>
          <tag name="param" line="1846" description="&lt;p&gt;An associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1846" description="" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="1846" description="" type="integer" variable="$limit">
            <type>integer</type>
          </tag>
          <tag name="param" line="1846" description="&lt;p&gt;Are we testing the code?&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1846" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1893" package="CodeIgniter\Database">
        <name>_update</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_update()</full_name>
        <docblock line="1893">
          <description>Update statement</description>
          <long-description>Generates a platform-specific update string from the supplied data</long-description>
          <tag name="param" line="1893" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="1893" description="&lt;p&gt;the update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="return" line="1893" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1918" package="CodeIgniter\Database">
        <name>validateUpdate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::validateUpdate()</full_name>
        <docblock line="1918">
          <description>Validate Update</description>
          <long-description>This method is used by both update() and getCompiledUpdate() to
validate that data is actually being set and that a table has been
chosen to be update.</long-description>
          <tag name="return" line="1918" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1947" package="CodeIgniter\Database">
        <name>updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::updateBatch()</full_name>
        <docblock line="1947">
          <description>Update_Batch</description>
          <long-description>Compiles an update string and runs the query</long-description>
          <tag name="param" line="1947" description="&lt;p&gt;an associative array of update values&lt;/p&gt;" type="array" variable="$set">
            <type>array</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;the where key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;The size of the batch to run&lt;/p&gt;" type="integer" variable="$batch_size">
            <type>integer</type>
          </tag>
          <tag name="param" line="1947" description="&lt;p&gt;true means SQL is returned, false will execute the query&lt;/p&gt;" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1947" description="number of rows affected or FALSE on failure" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$set</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$batch_size</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2027" package="CodeIgniter\Database">
        <name>_updateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_updateBatch()</full_name>
        <docblock line="2027">
          <description>Update_Batch statement</description>
          <long-description>Generates a platform-specific batch update string from the supplied data</long-description>
          <tag name="param" line="2027" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;Update data&lt;/p&gt;" type="array" variable="$values">
            <type>array</type>
          </tag>
          <tag name="param" line="2027" description="&lt;p&gt;WHERE key&lt;/p&gt;" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="return" line="2027" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2067" package="CodeIgniter\Database">
        <name>setUpdateBatch</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setUpdateBatch()</full_name>
        <docblock line="2067">
          <description>The "setUpdateBatch" function.  Allows key/value pairs to be set for batch updating</description>
          <long-description></long-description>
          <tag name="param" line="2067" description="" type="array" variable="$key">
            <type>array</type>
          </tag>
          <tag name="param" line="2067" description="" type="string" variable="$index">
            <type>string</type>
          </tag>
          <tag name="param" line="2067" description="" type="boolean" variable="$escape">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2067" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$escape</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2115" package="CodeIgniter\Database">
        <name>emptyTable</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::emptyTable()</full_name>
        <docblock line="2115">
          <description>Empty Table</description>
          <long-description>Compiles a delete string and runs "DELETE FROM table"</long-description>
          <tag name="param" line="2115" description="" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2115" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2144" package="CodeIgniter\Database">
        <name>truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::truncate()</full_name>
        <docblock line="2144">
          <description>Truncate</description>
          <long-description>Compiles a truncate string and runs the query
If the database does not support the truncate() command
This function maps to "DELETE FROM table"</long-description>
          <tag name="param" line="2144" description="&lt;p&gt;Whether we're in test mode or not.&lt;/p&gt;" type="boolean" variable="$test">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2144" description="TRUE on success, FALSE on failure" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$test</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2174" package="CodeIgniter\Database">
        <name>_truncate</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_truncate()</full_name>
        <docblock line="2174">
          <description>Truncate statement</description>
          <long-description>Generates a platform-specific truncate string from the supplied data

If the database does not support the truncate() command,
then this method maps to 'DELETE FROM table'</long-description>
          <tag name="param" line="2174" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2174" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2191" package="CodeIgniter\Database">
        <name>getCompiledDelete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getCompiledDelete()</full_name>
        <docblock line="2191">
          <description>Get DELETE query string</description>
          <long-description>Compiles a delete query string and returns the sql</long-description>
          <tag name="param" line="2191" description="&lt;p&gt;the table to delete from&lt;/p&gt;" type="string" variable="$reset">
            <type>string</type>
          </tag>
          <tag name="param" line="2191" description="&lt;p&gt;TRUE: reset QB values; FALSE: leave QB values alone&lt;/p&gt;" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2191" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$reset</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2216" package="CodeIgniter\Database">
        <name>delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::delete()</full_name>
        <docblock line="2216">
          <description>Delete</description>
          <long-description>Compiles a delete string and runs the query</long-description>
          <tag name="param" line="2216" description="&lt;p&gt;the where clause&lt;/p&gt;" type="mixed" variable="$where">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="&lt;p&gt;the limit clause&lt;/p&gt;" type="mixed" variable="$limit">
            <type>mixed</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$reset_data">
            <type>boolean</type>
          </tag>
          <tag name="param" line="2216" description="" type="boolean" variable="$returnSQL">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2216" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$where</name>
          <default>''</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$limit</name>
          <default>null</default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$reset_data</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$returnSQL</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2265" package="CodeIgniter\Database">
        <name>increment</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::increment()</full_name>
        <docblock line="2265">
          <description>Increments a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2265" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2265" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2265" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2284" package="CodeIgniter\Database">
        <name>decrement</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::decrement()</full_name>
        <docblock line="2284">
          <description>Decrements a numeric column by the specified value.</description>
          <long-description></long-description>
          <tag name="param" line="2284" description="" type="string" variable="$column">
            <type>string</type>
          </tag>
          <tag name="param" line="2284" description="" type="integer" variable="$value">
            <type>integer</type>
          </tag>
          <tag name="return" line="2284" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$column</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2304" package="CodeIgniter\Database">
        <name>_delete</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::_delete()</full_name>
        <docblock line="2304">
          <description>Delete statement</description>
          <long-description>Generates a platform-specific delete string from the supplied data</long-description>
          <tag name="param" line="2304" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2304" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2321" package="CodeIgniter\Database">
        <name>trackAliases</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::trackAliases()</full_name>
        <docblock line="2321">
          <description>Track Aliases</description>
          <long-description>Used to track SQL statements written with aliased tables.</long-description>
          <tag name="param" line="2321" description="&lt;p&gt;The table to inspect&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="2321" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2369" package="CodeIgniter\Database">
        <name>compileSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileSelect()</full_name>
        <docblock line="2369">
          <description>Compile the SELECT statement</description>
          <long-description>Generates a query string based on which functions were used.
Should not be called directly.</long-description>
          <tag name="param" line="2369" description="" type="boolean" variable="$select_override">
            <type>boolean</type>
          </tag>
          <tag name="return" line="2369" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$select_override</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2440" package="CodeIgniter\Database">
        <name>compileWhereHaving</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileWhereHaving()</full_name>
        <docblock line="2440">
          <description>Compile WHERE, HAVING statements</description>
          <long-description>Escapes identifiers in WHERE and HAVING statements at execution time.

Required so that aliases are tracked properly, regardless of whether
where(), orWhere(), having(), orHaving are called prior to from(),
join() and prefixTable is added only if needed.</long-description>
          <tag name="param" line="2440" description="&lt;p&gt;'QBWhere' or 'QBHaving'&lt;/p&gt;" type="string" variable="$qb_key">
            <type>string</type>
          </tag>
          <tag name="return" line="2440" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_key</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2518" package="CodeIgniter\Database">
        <name>compileGroupBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileGroupBy()</full_name>
        <docblock line="2518">
          <description>Compile GROUP BY</description>
          <long-description>Escapes identifiers in GROUP BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
groupBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2518" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2555" package="CodeIgniter\Database">
        <name>compileOrderBy</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::compileOrderBy()</full_name>
        <docblock line="2555">
          <description>Compile ORDER BY</description>
          <long-description>Escapes identifiers in ORDER BY statements at execution time.

Required so that aliases are tracked properly, regardless of wether
orderBy() is called prior to from(), join() and prefixTable is added
only if needed.</long-description>
          <tag name="return" line="2555" description="SQL statement" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2590" package="CodeIgniter\Database">
        <name>objectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::objectToArray()</full_name>
        <docblock line="2590">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2590" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2590" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2621" package="CodeIgniter\Database">
        <name>batchObjectToArray</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::batchObjectToArray()</full_name>
        <docblock line="2621">
          <description>Object to Array</description>
          <long-description>Takes an object as input and converts the class variables to array key/vals</long-description>
          <tag name="param" line="2621" description="" type="object" variable="$object">
            <type>object</type>
          </tag>
          <tag name="return" line="2621" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2659" package="CodeIgniter\Database">
        <name>isLiteral</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::isLiteral()</full_name>
        <docblock line="2659">
          <description>Is literal</description>
          <long-description>Determines if a string represents a literal value or a field name</long-description>
          <tag name="param" line="2659" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2659" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="2690" package="CodeIgniter\Database">
        <name>resetQuery</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetQuery()</full_name>
        <docblock line="2690">
          <description>Reset Query Builder values.</description>
          <long-description>Publicly-visible method to reset the QB values.</long-description>
          <tag name="return" line="2690" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2707" package="CodeIgniter\Database">
        <name>resetRun</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetRun()</full_name>
        <docblock line="2707">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="param" line="2707" description="&lt;p&gt;An array of fields to reset&lt;/p&gt;" type="array" variable="$qb_reset_items">
            <type>array</type>
          </tag>
          <tag name="return" line="2707" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$qb_reset_items</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2722" package="CodeIgniter\Database">
        <name>resetSelect</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetSelect()</full_name>
        <docblock line="2722">
          <description>Resets the query builder values.  Called by the get() function</description>
          <long-description></long-description>
          <tag name="return" line="2722" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2748" package="CodeIgniter\Database">
        <name>resetWrite</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::resetWrite()</full_name>
        <docblock line="2748">
          <description>Resets the query builder "write" values.</description>
          <long-description>Called by the insert() update() insertBatch() updateBatch() and delete() functions</long-description>
          <tag name="return" line="2748" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2769" package="CodeIgniter\Database">
        <name>hasOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::hasOperator()</full_name>
        <docblock line="2769">
          <description>Tests whether the string has an SQL operator</description>
          <long-description></long-description>
          <tag name="param" line="2769" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2769" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2784" package="CodeIgniter\Database">
        <name>getOperator</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::getOperator()</full_name>
        <docblock line="2784">
          <description>Returns the SQL string operator</description>
          <long-description></long-description>
          <tag name="param" line="2784" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="2784" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="2823" package="CodeIgniter\Database">
        <name>setBind</name>
        <full_name>\CodeIgniter\Database\BaseBuilder::setBind()</full_name>
        <docblock line="2823">
          <description>Stores a bind value after ensuring that it's unique.</description>
          <long-description></long-description>
          <tag name="param" line="2823" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="2823" description="" type="null" variable="$value">
            <type>null</type>
          </tag>
          <tag name="return" line="2823" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="Session/Handlers/BaseHandler.php" generated-path="Session.Handlers.BaseHandler.html" hash="b125faca1c1e9d7ea998ae5de3b7f736" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="BaseConfig">\CodeIgniter\Config\BaseConfig</namespace-alias>
    <namespace-alias name="LoggerAwareTrait">\CodeIgniter\Log\LoggerAwareTrait</namespace-alias>
    <class final="false" abstract="true" namespace="CodeIgniter\Session\Handlers" line="45" package="Default">
      <extends/>
      <implements>\SessionHandlerInterface</implements>
      <name>BaseHandler</name>
      <full_name>\CodeIgniter\Session\Handlers\BaseHandler</full_name>
      <docblock line="45">
        <description>Base class for session handling</description>
        <long-description></long-description>
        <tag name="package" line="45" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="54" package="Default">
        <name>$fingerprint</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::fingerprint</full_name>
        <default></default>
        <docblock line="54">
          <description>The Data fingerprint.</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="61" package="Default">
        <name>$lock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lock</full_name>
        <default>false</default>
        <docblock line="61">
          <description>Lock placeholder.</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="68" package="Default">
        <name>$cookiePrefix</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePrefix</full_name>
        <default>''</default>
        <docblock line="68">
          <description>Cookie prefix</description>
          <long-description></long-description>
          <tag name="var" line="68" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="75" package="Default">
        <name>$cookieDomain</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieDomain</full_name>
        <default>''</default>
        <docblock line="75">
          <description>Cookie domain</description>
          <long-description></long-description>
          <tag name="var" line="75" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="81" package="Default">
        <name>$cookiePath</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookiePath</full_name>
        <default>'/'</default>
        <docblock line="81">
          <description>Cookie path</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="88" package="Default">
        <name>$cookieSecure</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieSecure</full_name>
        <default>false</default>
        <docblock line="88">
          <description>Cookie secure?</description>
          <long-description></long-description>
          <tag name="var" line="88" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="94" package="Default">
        <name>$cookieName</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::cookieName</full_name>
        <default></default>
        <docblock line="94">
          <description>Cookie name to use</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="101" package="Default">
        <name>$matchIP</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::matchIP</full_name>
        <default>false</default>
        <docblock line="101">
          <description>Match IP addresses for cookies?</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="107" package="Default">
        <name>$sessionID</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::sessionID</full_name>
        <default></default>
        <docblock line="107">
          <description>Current session ID</description>
          <long-description></long-description>
          <tag name="var" line="107" description="" type="\CodeIgniter\Session\Handlers\type" variable="">
            <type>\CodeIgniter\Session\Handlers\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="115" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::__construct()</full_name>
        <docblock line="115">
          <description>Constructor</description>
          <long-description></long-description>
          <tag name="param" line="115" description="" type="\CodeIgniter\Config\BaseConfig" variable="$config">
            <type>\CodeIgniter\Config\BaseConfig</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$config</name>
          <default></default>
          <type>\CodeIgniter\Config\BaseConfig</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="133" package="Default">
        <name>destroyCookie</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::destroyCookie()</full_name>
        <docblock line="133">
          <description>Internal method to force removal of a cookie by the client
when session_destroy() is called.</description>
          <long-description></long-description>
          <tag name="return" line="133" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="157" package="Default">
        <name>lockSession</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::lockSession()</full_name>
        <docblock line="157">
          <description>A dummy method allowing drivers with no locking functionality
(databases other than PostgreSQL and MySQL) to act as if they
do acquire a lock.</description>
          <long-description></long-description>
          <tag name="param" line="157" description="" type="string" variable="$session_id">
            <type>string</type>
          </tag>
          <tag name="return" line="157" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$session_id</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Session\Handlers" line="170" package="Default">
        <name>releaseLock</name>
        <full_name>\CodeIgniter\Session\Handlers\BaseHandler::releaseLock()</full_name>
        <docblock line="170">
          <description>Releases the lock, if any.</description>
          <long-description></long-description>
          <tag name="return" line="170" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Session\Handlers" line="50" package="Default">
        <name>setLogger</name>
        <full_name>\CodeIgniter\Log\LoggerAwareTrait::setLogger()</full_name>
        <docblock line="50">
          <description>Sets a logger instance on the object</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\Psr\Log\LoggerInterface" variable="$logger">
            <type>\Psr\Log\LoggerInterface</type>
          </tag>
          <tag name="return" line="50" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$logger</name>
          <default></default>
          <type>\Psr\Log\LoggerInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Log\LoggerAwareTrait</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1V21v2zYQ/mz/ikNQoHahxu027EO7rVVspRZmW56sNAtQIKAl2uIiiRpJJTWG/vfdUZJjx17XAI2RwCZ599wr746/vCvTEgqWc12ymMNQJtxfF8Jw9WnBtRay+DRmRZJxpd92u4MXL7rwYpcKl7TjFiBLXoCWlUIYVpaZiJlBdkj4Lc9kmfPCwEqhpDupbmAlFczH84Y9SoWGWBaGiPCn4hlnmidQFQlXYFIOUz+CiYh5oTn0cNFvWIey3CixTg304j788Or1T/CSvn524EwJI3SKJFmVLwUDv9BGmMpwkCuIeJwWMpPrTYM05yoX1mRSIeWKLzewVgy1ShxUnVu2OGVqzR0wElixgRIdgwxyaZgoRLEGhnaUBEnEhuzScmXumEKvFAkwrWUsGEJCIuOKvFK7aSUyrqFHpp4sGo6TvpWTcJYRoCisJ9pTuBMmlZVBb2mjREwwDhLFWZWQJu1xJnLRCCF26yxNeAhdaTSFFHYgl4lY0Te39pXVMkPnOZAIQl+i1xzQtGlj4JA1Awyi5plVDkEEGmCNvtfRkpGgkpxrGndp2rlLZb5vj7BarSpVoGBu2RKJ7rNy/+KxoR3iWMksk3dkI+ZMIsg0/WabSujopbzl1qw6MwppRFz730akvI90c6RTlmWw5I37ULgoCI12W8sUqaEN5oNgGZRSWbkPLT5t9Rh7sAjOo0s39MBfwDwMPvojbwQn7gLXJw5c+tE4uIgAKUJ3Fl1BcA7u7Ap+92cjB7w/56G3WEAQEpo/nU98D7f92XByMfJnH+AMWWcBXgofbwPiRoGV2aD53oLwpl44HOPSPfMnfnTlENa5H80I+TwIwYW5G0b+8GLihjC/COfBwkMlRog882fnIQrypt4sOkXBuAfeR1zAYuxOJiTNXv0LNCMkRWEYzK9C/8M4gnEwGXm4eeahfu7ZxKuloXXDietPHRi5U/eDZ7kCBLJGEmWtJlyOPdolqS7+DSM/mJE9w2AWhbh00Nww2nJf+gvPATf0F+SZ8zCYWkvJu8gUWBxknXk1EHl+P0BIQuuLhbfFhJHnThAOozV7GNA2yO+xaN6wNe/sV0R4zyq8e2p3G0b8FmsOy+35Njc736F+QS81pnwzGCxjYU5jNuhbGc1N7TSHVJ/r8nwq1XrQnOoBZk9np7g2rMVNyxejDaK24TSWtfoarwnvfMTLTHfox9NXp6/svi1iVgYuB90ulpe9ljKUxUqsP51hba9/vj0gmcg1/a+5cuk6RYoJc995iBPiDKuo7SC6blGQUovCemClMrykimG1qOmIpWlhIPIy41RzNbTtrTnyscqrFbbA7j/dDul0RIcOKdFpasyIGYZFu0CiUonCnNKJPX1/yxQspcxoNeh2SiUNFi+sKc926HfxJjK+gTJD6anMsOE9wMrFZ54cgmXE9SusWKb5LtpQyhvBoVR8JT7bnXsosyk5HELFlmVuORDy+fMjeInMscU9Bm9kOf4Lr2Qm/VbFkJRgBsdwNI8rxd89RrGFZfmK72ggatrjN0LOkGMXaMpMnII/B5Yk2J8xUW3C1sT6G7XNCQQxjilaKUXDUnsD/NH/ojWk/sjiDF5+h8+e57A4qSo2UtWalAyHPbi/6uQp+m4Vs6MEdvvCDi5wfR23CL1Dpn63g/ey84za98vfHqRrQ7O///Yh+TYb98hle3BAb5MOjsDj/gHxNqMeENf7B+SULfvYTXCGO8m05WnTwH4Oeab1MTJ8eYrA2spY4MSTc+xpdirDTMaZSfFc3uI+9iLWJDbgxEzDUJwJTE7LfpfSs6DW9DqhSVVuen2asGMcrniyU+sUNzj7HS+d2zxpIGpH9fpvGnLMDvJOA6G5qRXqoRdp/8D7TnNQVFnW/n7tHKOmeB89qPPm6FEd9vYIk5rX6vWfKkguJFWeb9oYsXY+TpS4xS5t3wI46wL1DNpv3ckyYTYWoZdgQ1syKlQSQ0iPLlbAXGqzVnzxx8ROz9MN/urbtw/2V6ZB2OG3Rkho9+9K0EvHCtoJbV0M6CGBwttKdC2SRwafUJu+3TsE202G9u40TZJCQDeqkdIsnyQUYf121fYikHiHvIRvxcdmevMIpuGg9xXTtq3hCY370v0XOxvG0w==</source>
  </file>
  <file path="Database/QueryInterface.php" generated-path="Database.QueryInterface.html" hash="08d330e067f06c99085576fa91cdf718" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Database" line="47" package="CodeIgniter\Database">
      <name>QueryInterface</name>
      <full_name>\CodeIgniter\Database\QueryInterface</full_name>
      <docblock line="47">
        <description>Interface QueryInterface</description>
        <long-description>Represents a single statement that can be executed against the database.
Statements are platform-specific and can handle binding of binds.</long-description>
        <tag name="package" line="47" description="CodeIgniter\Database"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="57" package="CodeIgniter\Database">
        <name>setQuery</name>
        <full_name>\CodeIgniter\Database\QueryInterface::setQuery()</full_name>
        <docblock line="57">
          <description>Sets the raw query string to use for this statement.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="return" line="57" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="67" package="CodeIgniter\Database">
        <name>getQuery</name>
        <full_name>\CodeIgniter\Database\QueryInterface::getQuery()</full_name>
        <docblock line="67">
          <description>Returns the final, processed query string after binding, etal
has been performed.</description>
          <long-description></long-description>
          <tag name="return" line="67" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="81" package="CodeIgniter\Database">
        <name>setDuration</name>
        <full_name>\CodeIgniter\Database\QueryInterface::setDuration()</full_name>
        <docblock line="81">
          <description>Records the execution time of the statement using microtime(true)
for it's start and end values. If no end value is present, will
use the current time to determine total duration.</description>
          <long-description></long-description>
          <tag name="param" line="81" description="" type="integer" variable="$start">
            <type>integer</type>
          </tag>
          <tag name="param" line="81" description="" type="integer|null" variable="$end">
            <type>integer</type>
            <type>null</type>
          </tag>
          <tag name="return" line="81" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$start</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$end</name>
          <default>null</default>
          <type>integer|null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="93" package="CodeIgniter\Database">
        <name>getDuration</name>
        <full_name>\CodeIgniter\Database\QueryInterface::getDuration()</full_name>
        <docblock line="93">
          <description>Returns the duration of this query during execution, or null if
the query has not been executed yet.</description>
          <long-description></long-description>
          <tag name="param" line="93" description="&lt;p&gt;The accuracy of the returned time.&lt;/p&gt;" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="93" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="103" package="CodeIgniter\Database">
        <name>setError</name>
        <full_name>\CodeIgniter\Database\QueryInterface::setError()</full_name>
        <docblock line="103">
          <description>Stores the error description that happened for this query.</description>
          <long-description></long-description>
          <tag name="param" line="103" description="" type="integer" variable="$code">
            <type>integer</type>
          </tag>
          <tag name="param" line="103" description="" type="string" variable="$error">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$code</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$error</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="112" package="CodeIgniter\Database">
        <name>hasError</name>
        <full_name>\CodeIgniter\Database\QueryInterface::hasError()</full_name>
        <docblock line="112">
          <description>Reports whether this statement created an error not.</description>
          <long-description></long-description>
          <tag name="return" line="112" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="121" package="CodeIgniter\Database">
        <name>getErrorCode</name>
        <full_name>\CodeIgniter\Database\QueryInterface::getErrorCode()</full_name>
        <docblock line="121">
          <description>Returns the error code created while executing this statement.</description>
          <long-description></long-description>
          <tag name="return" line="121" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="130" package="CodeIgniter\Database">
        <name>getErrorMessage</name>
        <full_name>\CodeIgniter\Database\QueryInterface::getErrorMessage()</full_name>
        <docblock line="130">
          <description>Returns the error message created while executing this statement.</description>
          <long-description></long-description>
          <tag name="return" line="130" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="139" package="CodeIgniter\Database">
        <name>isWriteType</name>
        <full_name>\CodeIgniter\Database\QueryInterface::isWriteType()</full_name>
        <docblock line="139">
          <description>Determines if the statement is a write-type query or not.</description>
          <long-description></long-description>
          <tag name="return" line="139" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="151" package="CodeIgniter\Database">
        <name>swapPrefix</name>
        <full_name>\CodeIgniter\Database\QueryInterface::swapPrefix()</full_name>
        <docblock line="151">
          <description>Swaps out one table prefix for a new one.</description>
          <long-description></long-description>
          <tag name="param" line="151" description="" type="string" variable="$orig">
            <type>string</type>
          </tag>
          <tag name="param" line="151" description="" type="string" variable="$swap">
            <type>string</type>
          </tag>
          <tag name="return" line="151" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$orig</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$swap</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9V9tu20YQfZa/YhAYqBwwUnpBHtIGDS3RMVFZUik6boC+rMiVuA3FZXaXVoS2/94zS0q+JH5IEcewYe1lzsyZ6+qXX+uipkpspK1FJmmkcxmvK+Wk+XMsnFgKK38+Oho+fXpET2+fYsk7YUW6lhVZ3RiIi7ouVSac0hXl8lqWut7IytHKQMNWm/e00obm5/NOPC2UpUxXji/ho5GlhMacmiqXhlwh6SJOaaIyWVlJfSxOOtGRrndGrQtH/eyEfnj+/U/0jP+9COjUKKdsgStls1kqQXFlnXKNk6RXlMqsqHSp17sOaS7NRlnLNsOEQhq53NHaCFiVBzBderGsEGYtA3KaRLWjWhoLAb10QlWqWpMAj5oh+bJjXlav3FYYeKXKSVirMyUASbnOGvZK66aVKqWlPlN9sugknpx4PbkUJQOqyntif0pb5QrdOHjLOqMyhglwKSubnC3ZH5dqozolLO6dZRkP0I0FFTY4oI3O1Yr/S8+vbpYlnBdQrhh9Ca8FZHnTxyBgNkME0crSGwcQBQKe9I2N/horqtm5rnOX5Z1toTd3+Shv1aoxFRRLL5ZruM/r/UtmjndYYqXLUm+ZI3ImV0zNvjykEhy91NfS02ozo9JOZa3/fUTqm0h3R7YQZUlL2bkPylXFaLy7Z2bYDOuQD0qUVGvj9d5nPNjbcR7RYnaWXoVJRPGC5snsbTyOxvQkXGD9JKCrOD2fXaaEG0k4Td/R7IzC6Tv6LZ6OA4r+mCfRYkGzhNHii/kkjrAdT0eTy3E8fUOnEJ3OUBQxqgG46czr7NDiaMF4F1EyOscyPI0ncfouYKyzOJ0y8tksoZDmYZLGo8tJmND8MpnPFhGMGAN5Gk/PEiiKLqJpOoBi7FH0FgtanIeTCWvzpX8JGgkbSqPZ/F0SvzlP6Xw2GUfYPI1gX3g6iVptYDeahPFFQOPwInwTeakZgDxJvtmaSVfnEe+y1hC/ozSeTZnPaDZNEywD0E3Sg/RVvIgCCpN4wZ45S2YXnil7F0IzjwPRadQCsefvBghXeH25iA6YNI7CCeAQren9gO6D/BrN8r1Yy97djkivRYPaM7e3aSyv0XPExp8fcrP3FfoX9Qvn6pfD4TJTbpCJ4YnX0VVqrzvk/ty254E262F3aofInt6t5tqJVu/3chk4qJbDINOt+RZlIntvUcxcQz8Ong+e+33fxLwOLIeHeRGjhZoVz5XfG2l2h2XnxUTWaGHohBbdE9DrEgWJjiX9zHCFcJSJiqtTfpRZw71TrNFurfOVl3fziYNCi70csNBS6lI4jJrNM1vLTK1U5psAoxX4AD1LVflmCYfyR3s/sp+dhJ6ceojU30c95t1jayTs8E1XbOkDXyNuptDX9l4/Btshsbd7wIJeGCZgXO4Fju2H8va2MEbs6NgbfSNipEP7pI36KHPeGR71fCPP0FYrPyHQsJ03uH8LOOiA6BVVTVmeYNT3hsNnX+Hn6MYZibet9cdKVQJaa6MzaXnQ33GOWHHBdKEJSDrRUi+ERRbgmYEGzlGV+eCLqK/31B+LYKZN3hJsM9XPXLWR+yFxk9UN5zmMzYzmC31nGnniUTgllPvOp4RxPl8l/q5F2UiLPrzCzLrZ4adKVz0BJn7ZOopTi/VljTG+htgG/5JwPPoqXsCplDfGPww+STokN/mfY2/FvaN/OEnoGEZ8aeaNO4X9ValR1i06Hlftill9qwzcUz8809oMxDYH5hC+gOe+p6tWHoNl26ucjXg+tBl56Ew7+WkJd948ztGDNqK01L5SMoRHZLt9crQe5HcPovXFiX3wLCu70fSKXjyOLxdOI+3aXDcGTsqlzYyqu3cmwlngW4BkPocm5/3mmdF99xzzmPlc2/PgDydUxMf9A0JwV+6x0ogffxYvWAn69xs4ZUb69z2GTOsZJMmn4VxqXT5AC4nV0jp56a89ei20ZrL/DsZvC4zyfRnwvHpoSHV0Wrc/nJ6eEM9SJoVwfSNO+D5reYo/Kq2LVgkza+8/CrnxvndbtKJ700Txy2mL56J85nb1vkH9j9RT9opRUoA8avYttqLGVyd8O9U8jMQSUcEYW6mPvlsIquSWjx58DWm8mT/7SgLwlw0lCMy95v5t7OAO4lftI/8e/QcL/R7c</source>
  </file>
  <file path="Database/Database.php" generated-path="Database.Database.html" hash="116e79ad0b7f38d96a64586d7aa96718" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Database" line="46" package="CodeIgniter\Database">
      <extends/>
      <name>Database</name>
      <full_name>\CodeIgniter\Database\Database</full_name>
      <docblock line="46">
        <description>Database Connection Factory</description>
        <long-description>Creates and returns an instance of the appropriate DatabaseConnection</long-description>
        <tag name="package" line="46" description="CodeIgniter\Database"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="55" package="CodeIgniter\Database">
        <name>$connections</name>
        <full_name>\CodeIgniter\Database\Database::connections</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Maintains an array of the instances of all connections
that have been created. Helps to keep track of all open
connections for performance monitoring, logging, etc.</description>
          <long-description></long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="99" package="CodeIgniter\Database">
        <name>loadForge</name>
        <full_name>\CodeIgniter\Database\Database::loadForge()</full_name>
        <docblock line="99">
          <description>Creates a new Forge instance for the current database type.</description>
          <long-description></long-description>
          <tag name="param" line="99" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="return" line="99" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="125" package="CodeIgniter\Database">
        <name>loadUtils</name>
        <full_name>\CodeIgniter\Database\Database::loadUtils()</full_name>
        <docblock line="125">
          <description>Loads the Database Utilities class.</description>
          <long-description></long-description>
          <tag name="param" line="125" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
          <tag name="return" line="125" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/Files/FileCollection.php" generated-path="HTTP.Files.FileCollection.html" hash="b3844931bb866021dea073eef9253f0b" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP\Files" line="46" package="CodeIgniter\HTTP\Files">
      <extends/>
      <name>FileCollection</name>
      <full_name>\CodeIgniter\HTTP\Files\FileCollection</full_name>
      <docblock line="46">
        <description>Class FileCollection</description>
        <long-description>Provides easy access to uploaded files for a request.</long-description>
        <tag name="package" line="46" description="CodeIgniter\HTTP\Files"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="56" package="CodeIgniter\HTTP\Files">
        <name>$files</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::files</full_name>
        <default></default>
        <docblock line="56">
          <description>An array of UploadedFile instances for any files
uploaded as part of this request.</description>
          <long-description>Populated the first time either files(), file(), or hasFile()
is called.</long-description>
          <tag name="var" line="56" description="" type="array|null" variable="">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="67" package="CodeIgniter\HTTP\Files">
        <name>all</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::all()</full_name>
        <docblock line="67">
          <description>Returns an array of all uploaded files that were found.</description>
          <long-description>Each element in the array will be an instance of UploadedFile.
The key of each element will be the client filename.</long-description>
          <tag name="return" line="67" description="" type="array|null">
            <type>array</type>
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="83" package="CodeIgniter\HTTP\Files">
        <name>getFile</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::getFile()</full_name>
        <docblock line="83">
          <description>Attempts to get a single file from the collection of uploaded files.</description>
          <long-description></long-description>
          <tag name="param" line="83" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="83" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP\Files" line="107" package="CodeIgniter\HTTP\Files">
        <name>hasFile</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::hasFile()</full_name>
        <docblock line="107">
          <description>Checks whether an uploaded file with name $fileID exists in
this request.</description>
          <long-description></long-description>
          <tag name="param" line="107" description="&lt;p&gt;The name of the uploaded file (from the input)&lt;/p&gt;" type="string" variable="$fileID">
            <type>string</type>
          </tag>
          <tag name="return" line="107" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fileID</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="141" package="CodeIgniter\HTTP\Files">
        <name>populateFiles</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::populateFiles()</full_name>
        <docblock line="141">
          <description>Taking information from the $_FILES array, it creates an instance
of UploadedFile for each one, saving the results to this-&gt;files.</description>
          <long-description>Called by files(), file(), and hasFile()</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="173" package="CodeIgniter\HTTP\Files">
        <name>createFileObject</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::createFileObject()</full_name>
        <docblock line="173">
          <description>Given a file array, will create UploadedFile instances. Will
loop over an array and create objects for each.</description>
          <long-description></long-description>
          <tag name="param" line="173" description="" type="array" variable="$array">
            <type>array</type>
          </tag>
          <tag name="return" line="173" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$array</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP\Files" line="213" package="CodeIgniter\HTTP\Files">
        <name>fixFilesArray</name>
        <full_name>\CodeIgniter\HTTP\Files\FileCollection::fixFilesArray()</full_name>
        <docblock line="213">
          <description>Reformats the odd $_FILES array into something much more like
we would expect, with each object having its own array.</description>
          <long-description>Thanks to Jack Sleight on the PHP Manual page for the basis
of this method.</long-description>
          <tag name="see" line="213" description="" link="http://php.net/manual/en/reserved.variables.files.php#118294"/>
          <tag name="param" line="213" description="" type="array" variable="$data">
            <type>array</type>
          </tag>
          <tag name="return" line="213" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1WHtz2soV/xt/ipPUcwMpMcntnU7rNA8CItYtBkbguBnHk1mkBbYWWlW7suPb5rv3nLMrQMZOptMbJhMs7Xk/fucsf3uTr3LIxFqaXMQSejqR4TJTVhafTmazyaeBSqV5eXDQefr0AJ7unuMjvelmoHOZgdFlgQJEnqcqFlbpDBJ5LVOdr2VmYVGgjhtdXMFCFzA5mXj22UoZiHVmiQj/LGQqhZEJlFkiC7ArCafhDIYqlpmR0MSHlmft6fy2UMuVhWbcgp+fv/gFntHXn9vwrlBWmRWSpOV6rgSEmbHKllaCXsBMxqtMp3p56yVNZLFWxpDNaMJKFnJ+C8tCoFVJG02XzBavRLGUbbAaRHYLuSwMMui5FSpT2RIE+pGTSCK25JfRC3sjCoxKloAwRsdKoEhIdFxSVFyYFhRiaJKrj6ee43GL9SRSpCRQZRyJ6hRulF3p0mK0jC1UTGLaSBSnZUKWVMepWiuvhNg5WIbkoejSoCtkcBvWOlEL+pbsX17OUwxeGxJF0ucYtTYYesk5aJM3HUyikSkbh0IUOsBOb21kMlKUU3CtD5ehNzcrva77o9iqRVlkqFgyW6IxfKz3nzK29IY4FjpN9Q35iDWTKHLNHG9KCQM919eS3XKVkWmrYhd/zki+zbQ/MiuRpjCXPnyoXGUkjd5WnhVkhrFYD0qkkOuC9d71+Kiy4ySA6XgwO+9GAYRTmETjD2E/6MPj7hSfH7fhPJydjM9mgBRRdzT7COMBdEcf4e/hqN+G4B+TKJhOYRyRtPB0MgwDfB2OesOzfjh6D++QdTTGpgixG1DubMw6vbQwmJK80yDqneBj9104DGcf2yRrEM5GJHkwjqALk240C3tnw24Ek7NoMp4GaEQfJY/C0SBCRcFpMJodoWJ8B8EHfIDpSXc4JG3c+mfoRkSGQm88+RiF709mcDIe9gN8+S5A+7rvhoHTht71ht3wtA397mn3fcBcYxTEThKlMxPOTwJ6S1q7+K83C8cj8qc3Hs0ifGyju9Fsw30eToM2dKNwSpEZRONT9pSii0xjloOso8AJosjXE4Qk9Hw2DTYyoR90hygOszW6m9AqyW8RLq/EUgJ/6rAIb0WJDVjA3iH05TXCj1gz1bZMmer/RjNorqzNjzudeazsUSw6LVbj+9YZ4ykIsh1iH+li2fEkpoMF1djBW8+fXUH18fwx+qScT0exdu4Y7CBZ0X3Adqcu+9PR86PnfMwwxyrxsbOdKCkCI9CYQfdSyVhWwXKhr1WCDYgT4RZEHEvD+FHmqRbUqQ45aaAIhMJ/lYiGe/m5f6KxCfF9qv990CDLGm60iaIQtxTlM6+TqBEhCAziSjcOA7aEmTbGCUQbUdjNMNgYSFQTnZcpzwJGNVUYhDi1liARurFOWF4ThwD9Qd+oZyXMgJ9YAo1NxCiZsEB+9fZaFM7i/2QlYnODnGzkhbboG6o6XPhh3uh0nv0On4NtqCJpEbwNxmIbMkLQO6myK2HhBucrBg4HvItFIOIV4NjnPcFPOifkRjloRqlVyO/mwokg6L+SrFXuSqsEkMg4VbyIIBPtOzthK9j4eyLHMw/HUsalQQ5R8LFCGoeU0mevc5/GgUsXhbbhpXkKH/LG1x8R9a61cp1bboqltNgF2IPLVLKTuLf4MRtvqpsCVE/JThiwWsUaaOTjeD2kGO2F6BvBQf1cnbv83w8Wk8Er0moRw7A0mo6TT9UCmpyVz5jcz/IL7iPGnbdr8W2hItZ0X/AvmOESc8BJaOy48qPy0lvJ+MrgniO5mbF8a0Hn/YyXbteSYR+cb7R6EP8eXtyXIM9Jpc+i/DZS19TcFIHK8tK29jI61/qhjFZ4U1fYOvY838ks5Q45c40Zc5xteHL0pAWPXr2ChUiN3CTt0MgltavBQpBf0P5ENpG0vVHJAhuHMkWCel/Re8RgbvrmVg5ib/VAWpwaNukR7BeUp0R9MuVSqhiqWmFzX/IrLqGNLTK9qLi5wPyxZ7NFKe+WHS6f0jbr9em8vGz9qHKciStKoMowUmt/56jK4vDzIBziNsZRwTuEhRijaaXZBV2WcncI0ujjuOuM7gfimnTwNUOaMnWgtOPmto57PLZgfrs/5WhPr4252vzaVOadenO1SNlV5jM70vwWOmxSQhyEn0juovAg5a44zPvFpQOv6nlz/IUt6joTvEwm3dao46ECddD32lX5thn2oWurweWGlIz5WuTEtZydP6Z43qtrvN0LBye+SnisOlseWIyO4Fy5UQGp1jngrazYLgeUZs+u2Q+zqaY9uHMch/x1/8h+uE72wrUrbKdsHlVtyQcXTyjqTy631XCIl2lEz23md/LpPcJ80gJC6bwWKQL3Hu5sa9MTtPh3D5URSDhQcWouSNI3k+4F7COOl7A36+RNLU9Np857a9f5Z+cxvHnDc7FdO//Wmb3NHzwz6rcHz2RR6GJ7SGc/DP4i6XDPMDrpJKmDHhatpd8a1jisCcLWJeZ1jfmFVF056LvBka3LNKHphAlouwHuwM/9PLFy8KdQib7xdbkt5dlKZFcMiL/irQSmqeSLnv9ZZnIygVORlfTTAt1YqBXo/VwYZSro5ZWATNS7C7+RsrqR5av8KJO2s2ZJHZl1EIdlcY0XBLwWKDEnDHZIjKR/ePHiLz//9ZcHmi0RVvyvvVYHvx1BuDB4Vt4Y7rbStpOIuA6MVZ+6Prqv5xZKYlo2XbfTdIe5xsQi6ryCnzaN5TfBh7uyPv4rGRdOD/ckk7ldoLHt393VACEw5gsz+vhTJcKtB41DuocKq8ks6spPkYxLvClfy9AfVN+uRxt1Ig7uhsKb7Dqr8bCo4+NpMBxgzUfTGdP6hWonohuz9oCsFhC3Oxn6iVc2naO4NVXMz17jJaAvc7tqtuCP8KL1sh5GTgUzXcR4/bNeQguewYvL+2g34SdArAicgMtdAn9EGYVHu/bgLtFbqTQpZNb0qa1c+W5yvx5s/v96B0+3MPs7AtbXg/8CAFffsQ==</source>
  </file>
  <file path="HTTP/Message.php" generated-path="HTTP.Message.html" hash="8945ae339b1e86c52b4247f9b7f1f1d3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\HTTP" line="39" package="CodeIgniter">
      <extends/>
      <name>Message</name>
      <full_name>\CodeIgniter\HTTP\Message</full_name>
      <docblock line="39">
        <description>CodeIgniter</description>
        <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
        <tag name="package" line="39" description="CodeIgniter"/>
        <tag name="author" line="39" description="CodeIgniter Dev Team"/>
        <tag name="copyright" line="39" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
        <tag name="license" line="39" description="MIT License" link="http://opensource.org/licenses/MIT"/>
        <tag name="link" line="39" description="http://codeigniter.com" link="http://codeigniter.com"/>
        <tag name="since" line="39" description="Version 3.0.0"/>
        <tag name="filesource" line="39" description=""/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="46" package="CodeIgniter">
        <name>$headers</name>
        <full_name>\CodeIgniter\HTTP\Message::headers</full_name>
        <default>array()</default>
        <docblock line="46">
          <description>List of all HTTP request headers.</description>
          <long-description></long-description>
          <tag name="var" line="46" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="55" package="CodeIgniter">
        <name>$headerMap</name>
        <full_name>\CodeIgniter\HTTP\Message::headerMap</full_name>
        <default>array()</default>
        <docblock line="55">
          <description>Holds a map of lower-case header names
and their normal-case key as it is in $headers.</description>
          <long-description>Used for case-insensitive header access.</long-description>
          <tag name="var" line="55" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="61" package="CodeIgniter">
        <name>$protocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::protocolVersion</full_name>
        <default></default>
        <docblock line="61">
          <description>Protocol version</description>
          <long-description></long-description>
          <tag name="var" line="61" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="67" package="CodeIgniter">
        <name>$validProtocolVersions</name>
        <full_name>\CodeIgniter\HTTP\Message::validProtocolVersions</full_name>
        <default>array('1.0', '1.1', '2')</default>
        <docblock line="67">
          <description>List of valid protocol versions</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="74" package="CodeIgniter">
        <name>$body</name>
        <full_name>\CodeIgniter\HTTP\Message::body</full_name>
        <default></default>
        <docblock line="74">
          <description>Message body</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="\CodeIgniter\HTTP\type" variable="">
            <type>\CodeIgniter\HTTP\type</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="87" package="CodeIgniter">
        <name>getBody</name>
        <full_name>\CodeIgniter\HTTP\Message::getBody()</full_name>
        <docblock line="87">
          <description>Returns the Message's body.</description>
          <long-description></long-description>
          <tag name="return" line="87" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="101" package="CodeIgniter">
        <name>setBody</name>
        <full_name>\CodeIgniter\HTTP\Message::setBody()</full_name>
        <docblock line="101">
          <description>Sets the body of the current message.</description>
          <long-description></long-description>
          <tag name="param" line="101" description="" type="" variable="$data"/>
          <tag name="return" line="101" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="117" package="CodeIgniter">
        <name>populateHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::populateHeaders()</full_name>
        <docblock line="117">
          <description>Populates the $headers array with any headers the getServer knows about.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="157" package="CodeIgniter">
        <name>getHeaders</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaders()</full_name>
        <docblock line="157">
          <description>Returns an array containing all headers.</description>
          <long-description></long-description>
          <tag name="return" line="157" description="An array of the request headers" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="181" package="CodeIgniter">
        <name>getHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeader()</full_name>
        <docblock line="181">
          <description>Returns a single header object. If multiple headers with the same
name exist, then will return an array of header objects.</description>
          <long-description></long-description>
          <tag name="param" line="181" description="" type="" variable="$name"/>
          <tag name="param" line="181" description="" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="181" description="" type="array|\CodeIgniter\HTTP\Header">
            <type>array</type>
            <type>\CodeIgniter\HTTP\Header</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="202" package="CodeIgniter">
        <name>hasHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::hasHeader()</full_name>
        <docblock line="202">
          <description>Determines whether a header exists.</description>
          <long-description></long-description>
          <tag name="param" line="202" description="" type="" variable="$name"/>
          <tag name="return" line="202" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="227" package="CodeIgniter">
        <name>getHeaderLine</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderLine()</full_name>
        <docblock line="227">
          <description>Retrieves a comma-separated string of the values for a single header.</description>
          <long-description>This method returns all of the header values of the given
case-insensitive header name as a string concatenated together using
a comma.

NOTE: Not all header values may be appropriately represented using
comma concatenation. For such headers, use getHeader() instead
and supply your own delimiter when concatenating.</long-description>
          <tag name="param" line="227" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="227" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="257" package="CodeIgniter">
        <name>setHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::setHeader()</full_name>
        <docblock line="257">
          <description>Sets a header and it's value.</description>
          <long-description></long-description>
          <tag name="param" line="257" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="257" description="" type="" variable="$value"/>
          <tag name="return" line="257" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="287" package="CodeIgniter">
        <name>removeHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::removeHeader()</full_name>
        <docblock line="287">
          <description>Removes a header from the list of headers we track.</description>
          <long-description></long-description>
          <tag name="param" line="287" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="return" line="287" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="308" package="CodeIgniter">
        <name>appendHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::appendHeader()</full_name>
        <docblock line="308">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="308" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="308" description="" type="" variable="$value"/>
          <tag name="return" line="308" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="328" package="CodeIgniter">
        <name>prependHeader</name>
        <full_name>\CodeIgniter\HTTP\Message::prependHeader()</full_name>
        <docblock line="328">
          <description>Adds an additional header value to any headers that accept
multiple values (i.e. are an array or implement ArrayAccess)</description>
          <long-description></long-description>
          <tag name="param" line="328" description="" type="string" variable="$name">
            <type>string</type>
          </tag>
          <tag name="param" line="328" description="" type="" variable="$value"/>
          <tag name="return" line="328" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="344" package="CodeIgniter">
        <name>getProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::getProtocolVersion()</full_name>
        <docblock line="344">
          <description>Returns the HTTP Protocol Version.</description>
          <long-description></long-description>
          <tag name="return" line="344" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="358" package="CodeIgniter">
        <name>setProtocolVersion</name>
        <full_name>\CodeIgniter\HTTP\Message::setProtocolVersion()</full_name>
        <docblock line="358">
          <description>Sets the HTTP protocol version.</description>
          <long-description></long-description>
          <tag name="param" line="358" description="" type="string" variable="$version">
            <type>string</type>
          </tag>
          <tag name="return" line="358" description="" type="\CodeIgniter\HTTP\Message">
            <type>\CodeIgniter\HTTP\Message</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$version</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\HTTP" line="385" package="CodeIgniter">
        <name>getHeaderName</name>
        <full_name>\CodeIgniter\HTTP\Message::getHeaderName()</full_name>
        <docblock line="385">
          <description>Takes a header name in any case, and returns the
normal-case version of the header.</description>
          <long-description></long-description>
          <tag name="param" line="385" description="" type="" variable="$name"/>
          <tag name="return" line="385" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
      <notice line="181" code="PPC:ERR-50013">Parameter $filter could not be found in getHeader()</notice>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Log/NullLogger.php" generated-path="Log.NullLogger.html" hash="fec29e0ec85d35c2b3209cacb2f56554" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Psr\Log" line="46" package="Default">
      <extends>\Psr\Log\AbstractLogger</extends>
      <name>NullLogger</name>
      <full_name>\Psr\Log\NullLogger</full_name>
      <docblock line="46">
        <description>This Logger can be used to avoid conditional log calls</description>
        <long-description>Logging should always be optional, and if no logger is provided to your
library creating a NullLogger instance to have something to throw logs at
is a good way to avoid littering your code with `if ($this-&gt;logger) { }`
blocks.</long-description>
        <tag name="package" line="46" description="Default"/>
        <tag name="inherited_from" description="\Psr\Log\AbstractLogger" refers="\Psr\Log\AbstractLogger" link="/classes/Psr.Log.AbstractLogger.html"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="57" package="Default">
        <name>log</name>
        <full_name>\Psr\Log\NullLogger::log()</full_name>
        <docblock line="57">
          <description>Logs with an arbitrary level.</description>
          <long-description></long-description>
          <tag name="param" line="57" description="" type="mixed" variable="$level">
            <type>mixed</type>
          </tag>
          <tag name="param" line="57" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="57" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="57" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$level</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="55" package="Default">
        <name>emergency</name>
        <full_name>\Psr\Log\AbstractLogger::emergency()</full_name>
        <docblock line="55">
          <description>System is unusable.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="55" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::emergency()" refers="\Psr\Log\LoggerInterface::emergency()" link="/classes/Psr.Log.LoggerInterface.html#method_emergency"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="70" package="Default">
        <name>alert</name>
        <full_name>\Psr\Log\AbstractLogger::alert()</full_name>
        <docblock line="70">
          <description>Action must be taken immediately.</description>
          <long-description>Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</long-description>
          <tag name="param" line="70" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="70" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="70" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::alert()" refers="\Psr\Log\LoggerInterface::alert()" link="/classes/Psr.Log.LoggerInterface.html#method_alert"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="84" package="Default">
        <name>critical</name>
        <full_name>\Psr\Log\AbstractLogger::critical()</full_name>
        <docblock line="84">
          <description>Critical conditions.</description>
          <long-description>Example: Application component unavailable, unexpected exception.</long-description>
          <tag name="param" line="84" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="84" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="84" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::critical()" refers="\Psr\Log\LoggerInterface::critical()" link="/classes/Psr.Log.LoggerInterface.html#method_critical"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="97" package="Default">
        <name>error</name>
        <full_name>\Psr\Log\AbstractLogger::error()</full_name>
        <docblock line="97">
          <description>Runtime errors that do not require immediate action but should typically
be logged and monitored.</description>
          <long-description></long-description>
          <tag name="param" line="97" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="97" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="97" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::error()" refers="\Psr\Log\LoggerInterface::error()" link="/classes/Psr.Log.LoggerInterface.html#method_error"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="112" package="Default">
        <name>warning</name>
        <full_name>\Psr\Log\AbstractLogger::warning()</full_name>
        <docblock line="112">
          <description>Exceptional occurrences that are not errors.</description>
          <long-description>Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</long-description>
          <tag name="param" line="112" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="112" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="112" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::warning()" refers="\Psr\Log\LoggerInterface::warning()" link="/classes/Psr.Log.LoggerInterface.html#method_warning"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="124" package="Default">
        <name>notice</name>
        <full_name>\Psr\Log\AbstractLogger::notice()</full_name>
        <docblock line="124">
          <description>Normal but significant events.</description>
          <long-description></long-description>
          <tag name="param" line="124" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="124" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="124" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::notice()" refers="\Psr\Log\LoggerInterface::notice()" link="/classes/Psr.Log.LoggerInterface.html#method_notice"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="138" package="Default">
        <name>info</name>
        <full_name>\Psr\Log\AbstractLogger::info()</full_name>
        <docblock line="138">
          <description>Interesting events.</description>
          <long-description>Example: User logs in, SQL logs.</long-description>
          <tag name="param" line="138" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="138" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="138" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::info()" refers="\Psr\Log\LoggerInterface::info()" link="/classes/Psr.Log.LoggerInterface.html#method_info"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Psr\Log" line="150" package="Default">
        <name>debug</name>
        <full_name>\Psr\Log\AbstractLogger::debug()</full_name>
        <docblock line="150">
          <description>Detailed debug information.</description>
          <long-description></long-description>
          <tag name="param" line="150" description="" type="string" variable="$message">
            <type>string</type>
          </tag>
          <tag name="param" line="150" description="" type="array" variable="$context">
            <type>array</type>
          </tag>
          <tag name="return" line="150" description="" type="null">
            <type>null</type>
          </tag>
          <tag name="inherited_from" description="\Psr\Log\LoggerInterface::debug()" refers="\Psr\Log\LoggerInterface::debug()" link="/classes/Psr.Log.LoggerInterface.html#method_debug"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$message</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\Psr\Log\AbstractLogger</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJydVU1v2zgQPVu/YhDkkBRqvNtj96uKLcdCbcmQlWYD7KG0RNvcyKJA0nGMIv9931CKk/S4QACHQ86beY+cp9//ardtEDRiJ20rSkkLa/6Z6c1vQTD88CGgDzTSlUw2jXLSYMmRqCHdyoas3htkiLatVSmc0g1V8lHWut3JxtHaAPSgzQOttaHFdNGnF1tlqdSN40P418haCisr2jeVNOS2kuZJQTNVysZKusDisk8d6fZo1Gbr6KK8pE+//PqJcWlyqpQA1aA5I1aqVu5IN0bv2z57Ic1OWct9ouxWGrk60sYI5FQh2pWS9JrKrTAbGZLTJJojAcsiQa+cUI1qNiTQe3tkPBx2zMXqtTsIAyWaioS1ulQCkFTpcs9KdNKsVS0tXTC9s2WfcXbp61RS1AyoGs/+ZZcOym313kEh64wqGSbEobLeV9zJy3atdqovwuleIMt4gN5bUOGGQ9rpSq35V3p+7X5VK7sNqVKMvto7BC0Hve4hsxni4qysfXMAUSDgSb/26I9xoZbFdb1cliOHrd6956N8V+u9aVBY+rRKQz5f919ZOo5wxlrXtT4wR7yTSjE1+/n0fCD0Sj9KT6t7DY12quz09zfSvt50v2W3oq5pJXv5UFw1jMbRF2aG27AO70GJmlptfN2fGV+99DGNaZlNirsojylZ0iLPviXjeExn0RLrs5DukmKa3RaEE3mUFveUTShK7+lrko5Div9e5PFySVnOaMl8MUtihJN0NLsdJ+kNXSM1zTAICSYAuEXma/ZoSbxkvHmcj6ZYRtfJLCnuQ8aaJEXKyJMsp4gWUV4ko9tZlNPiNl9kyxhNjIGcJukkR6F4HqfFFQojRvE3LGg5jWYzrubH/RY0cm6URtniPk9upgVNs9k4RvA6Rn/R9SzuqoHdaBYl85DG0Ty6iX1WBiBPkk92bdLdNOYoV43wNyqSLGU+oywtcixD0M2LU/ZdsoxDivJkycpM8mzumbK6SMo8DlLTuANi5d9fEI7w+nYZnzBpHEczwOG20p8v9OWSv8ATH8RGDt67IH05vb3B//ck+tLP2mDrXPt5OGRX7Uz1SpvNsN+1Q9z/4I0l9qnNw0te/3M4HK7g5h/XauPzcW54snHvujD2DSy2FA2Pwt52MygetapeJw1vv9aYPIyG7WXgPJ5GC7+p4XH1QRwtQ+i2y+hsQK0xbpzMRXgMjX5UVVfkCF4MVauVEeZIpZGwLO+n6b6u+85Uw/OHeUXGVmDGrd5JjDTOeWsw+sD4loTzhol/aKN1RWjolQpUhuScxFXBrOq8lL6jw4tztoiPf3ZtXtIPev7OWKtalw/2yotW1rDxt33JJ3ytKksR/MGI0nXh4EcQDFjfQaeR7apAXWFWynmeNX8Rr/iEP4UHhYdBO/UEWc795ts4OzHaPsfX2OLZvd0SxoDjuf9wPrlux0gHM6UGjXJgGAy8q5fw2MZ/Llisi65MeEINf8KiP7rAxeVlMPgRDAbDIe5Rt8HgOQieg/8AFlSWTA==</source>
  </file>
  <file path="View/Exception/RuntimeException.php" generated-path="View.Exception.RuntimeException.html" hash="569ea75c7119e55b814d577ab7a14dc8" package="Default">
    <docblock line="0">
      <description>Zend Framework (http://framework.zend.com/)</description>
      <long-description></long-description>
      <tag name="link" line="0" description="for the canonical source repository" link="http://github.com/zendframework/zf2"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="Zend\Escaper\Exception" line="15" package="Default">
      <extends>\RuntimeException</extends>
      <implements>\Zend\Escaper\Exception\ExceptionInterface</implements>
      <name>RuntimeException</name>
      <full_name>\Zend\Escaper\Exception\RuntimeException</full_name>
      <docblock line="15">
        <description>Invalid argument exception</description>
        <long-description></long-description>
        <tag name="package" line="15" description="Default"/>
      </docblock>
    </class>
    <source>eJxtkD1PwzAQhnf/ihvbSK1DpS6AxGeRKiEGCgvK4rqX2GpytmyH0CL+O06apAN4snzP++rxXd9YZRlPEgYJfCDt4MmJChvj9jBRIdhLzvPhZX6MwFyaik8j3iZuS0176E4PFzqoettBLT1m+TFfQG4cBIUgBRnSUpTgTe0kgkNrvA7GHbpWaezB6UIFeBhvEzmFRZouZ4v0YnlSfUOpyJSm0OjhfXMHa5LzUbtpmlF42stKJI9n2X9+1jOcsJlt/Q5esIH7zSM8n95jD2eMYsxbEcVbj2zlpbDostWXRBu0oSs2rHRNn6LUOxCuqCukADgwXZMshffwWlPQFY7xCIXY6yH7M9GVLbEt8qxd+jhYU0CXRyP2zX7YL6t3njY=</source>
  </file>
  <file path="Database/Postgre/Forge.php" generated-path="Database.Postgre.Forge.html" hash="ac94708852f9d3ad14d25492205aafdc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Database\Postgre" line="42" package="Default">
      <extends>\CodeIgniter\Database\Forge</extends>
      <name>Forge</name>
      <full_name>\CodeIgniter\Database\Postgre\Forge</full_name>
      <docblock line="42">
        <description>Forge for Postgre</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Database\Forge" refers="\CodeIgniter\Database\Forge" link="/classes/CodeIgniter.Database.Forge.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="49" package="Default">
        <name>$_unsigned</name>
        <full_name>\CodeIgniter\Database\Postgre\Forge::_unsigned</full_name>
        <default>array('INT2' =&gt; 'INTEGER', 'SMALLINT' =&gt; 'INTEGER', 'INT' =&gt; 'BIGINT', 'INT4' =&gt; 'BIGINT', 'INTEGER' =&gt; 'BIGINT', 'INT8' =&gt; 'NUMERIC', 'BIGINT' =&gt; 'NUMERIC', 'REAL' =&gt; 'DOUBLE PRECISION', 'FLOAT' =&gt; 'DOUBLE PRECISION')</default>
        <docblock line="49">
          <description>UNSIGNED support</description>
          <long-description></long-description>
          <tag name="var" line="49" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="66" package="Default">
        <name>$_null</name>
        <full_name>\CodeIgniter\Database\Postgre\Forge::_null</full_name>
        <default>'NULL'</default>
        <docblock line="66">
          <description>NULL value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="51" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Forge::db</full_name>
        <default></default>
        <docblock line="51">
          <description>The active database connection.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="58" package="Default">
        <name>$fields</name>
        <full_name>\CodeIgniter\Database\Forge::fields</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>List of fields.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="64" package="Default">
        <name>$keys</name>
        <full_name>\CodeIgniter\Database\Forge::keys</full_name>
        <default>array()</default>
        <docblock line="64">
          <description>List of keys.</description>
          <long-description></long-description>
          <tag name="var" line="64" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="71" package="Default">
        <name>$primaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::primaryKeys</full_name>
        <default>array()</default>
        <docblock line="71">
          <description>List of primary keys.</description>
          <long-description></long-description>
          <tag name="var" line="71" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="78" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\Forge::charset</full_name>
        <default>''</default>
        <docblock line="78">
          <description>Character set used.</description>
          <long-description></long-description>
          <tag name="var" line="78" description="" type="\CodeIgniter\Database\type" variable="">
            <type>\CodeIgniter\Database\type</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="87" package="Default">
        <name>$createDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabaseStr</full_name>
        <default>'CREATE DATABASE %s'</default>
        <docblock line="87">
          <description>CREATE DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="94" package="Default">
        <name>$dropDatabaseStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabaseStr</full_name>
        <default>'DROP DATABASE %s'</default>
        <docblock line="94">
          <description>DROP DATABASE statement</description>
          <long-description></long-description>
          <tag name="var" line="94" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="101" package="Default">
        <name>$createTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableStr</full_name>
        <default>"%s %s (%s\n)"</default>
        <docblock line="101">
          <description>CREATE TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="108" package="Default">
        <name>$createTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::createTableIfStr</full_name>
        <default>'CREATE TABLE IF NOT EXISTS'</default>
        <docblock line="108">
          <description>CREATE TABLE IF statement</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="118" package="Default">
        <name>$createTableKeys</name>
        <full_name>\CodeIgniter\Database\Forge::createTableKeys</full_name>
        <default>false</default>
        <docblock line="118">
          <description>CREATE TABLE keys flag</description>
          <long-description>Whether table keys are created from within the
CREATE TABLE statement.</long-description>
          <tag name="var" line="118" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="125" package="Default">
        <name>$dropTableIfStr</name>
        <full_name>\CodeIgniter\Database\Forge::dropTableIfStr</full_name>
        <default>'DROP TABLE IF EXISTS'</default>
        <docblock line="125">
          <description>DROP TABLE IF EXISTS statement</description>
          <long-description></long-description>
          <tag name="var" line="125" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="132" package="Default">
        <name>$renameTableStr</name>
        <full_name>\CodeIgniter\Database\Forge::renameTableStr</full_name>
        <default>'ALTER TABLE %s RENAME TO %s;'</default>
        <docblock line="132">
          <description>RENAME TABLE statement</description>
          <long-description></long-description>
          <tag name="var" line="132" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="139" package="Default">
        <name>$unsigned</name>
        <full_name>\CodeIgniter\Database\Forge::unsigned</full_name>
        <default>true</default>
        <docblock line="139">
          <description>UNSIGNED support</description>
          <long-description></long-description>
          <tag name="var" line="139" description="" type="boolean|array" variable="">
            <type>boolean</type>
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="146" package="Default">
        <name>$null</name>
        <full_name>\CodeIgniter\Database\Forge::null</full_name>
        <default>''</default>
        <docblock line="146">
          <description>NULL value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="146" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="153" package="Default">
        <name>$default</name>
        <full_name>\CodeIgniter\Database\Forge::default</full_name>
        <default>' DEFAULT '</default>
        <docblock line="153">
          <description>DEFAULT value representation in CREATE/ALTER TABLE statements</description>
          <long-description></long-description>
          <tag name="var" line="153" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="79" package="Default">
        <name>_alterTable</name>
        <full_name>\CodeIgniter\Database\Postgre\Forge::_alterTable()</full_name>
        <docblock line="79">
          <description>ALTER TABLE</description>
          <long-description></long-description>
          <tag name="param" line="79" description="&lt;p&gt;ALTER type&lt;/p&gt;" type="string" variable="$alter_type">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="79" description="&lt;p&gt;Column definition&lt;/p&gt;" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="return" line="79" description="" type="string|array&lt;mixed,string&gt;">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_alterTable()" refers="\CodeIgniter\Database\Forge::_alterTable()" link="/classes/CodeIgniter.Database.Forge.html#method__alterTable"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alter_type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="141" package="Default">
        <name>_attributeType</name>
        <full_name>\CodeIgniter\Database\Postgre\Forge::_attributeType()</full_name>
        <docblock line="141">
          <description>Field attribute TYPE</description>
          <long-description>Performs a data type mapping between different databases.</long-description>
          <tag name="param" line="141" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="141" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_attributeType()" refers="\CodeIgniter\Database\Forge::_attributeType()" link="/classes/CodeIgniter.Database.Forge.html#method__attributeType"/>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="176" package="Default">
        <name>_attributeAutoIncrement</name>
        <full_name>\CodeIgniter\Database\Postgre\Forge::_attributeAutoIncrement()</full_name>
        <docblock line="176">
          <description>Field attribute AUTO_INCREMENT</description>
          <long-description></long-description>
          <tag name="param" line="176" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="176" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="176" description="" type="void">
            <type>void</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\Forge::_attributeAutoIncrement()" refers="\CodeIgniter\Database\Forge::_attributeAutoIncrement()" link="/classes/CodeIgniter.Database.Forge.html#method__attributeAutoIncrement"/>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="162" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Forge::__construct()</full_name>
        <docblock line="162">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="162" description="" type="\CodeIgniter\Database\ConnectionInterface" variable="$db">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db</name>
          <default></default>
          <type>\CodeIgniter\Database\ConnectionInterface</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="174" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\Forge::getConnection()</full_name>
        <docblock line="174">
          <description>Provides access to the forge's current database connection.</description>
          <long-description></long-description>
          <tag name="return" line="174" description="" type="\CodeIgniter\Database\ConnectionInterface">
            <type>\CodeIgniter\Database\ConnectionInterface</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="189" package="Default">
        <name>createDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::createDatabase()</full_name>
        <docblock line="189">
          <description>Create database</description>
          <long-description></long-description>
          <tag name="param" line="189" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="189" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="229" package="Default">
        <name>dropDatabase</name>
        <full_name>\CodeIgniter\Database\Forge::dropDatabase()</full_name>
        <docblock line="229">
          <description>Drop database</description>
          <long-description></long-description>
          <tag name="param" line="229" description="" type="string" variable="$db_name">
            <type>string</type>
          </tag>
          <tag name="return" line="229" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$db_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="272" package="Default">
        <name>addKey</name>
        <full_name>\CodeIgniter\Database\Forge::addKey()</full_name>
        <docblock line="272">
          <description>Add Key</description>
          <long-description></long-description>
          <tag name="param" line="272" description="" type="string" variable="$key">
            <type>string</type>
          </tag>
          <tag name="param" line="272" description="" type="boolean" variable="$primary">
            <type>boolean</type>
          </tag>
          <tag name="return" line="272" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$key</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$primary</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="305" package="Default">
        <name>addField</name>
        <full_name>\CodeIgniter\Database\Forge::addField()</full_name>
        <docblock line="305">
          <description>Add Field</description>
          <long-description></long-description>
          <tag name="param" line="305" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="305" description="" type="\CodeIgniter\Database\CI_DB_forge">
            <type>\CodeIgniter\Database\CI_DB_forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="350" package="Default">
        <name>createTable</name>
        <full_name>\CodeIgniter\Database\Forge::createTable()</full_name>
        <docblock line="350">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="350" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Whether to add IF NOT EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="350" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="350" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="412" package="Default">
        <name>_createTable</name>
        <full_name>\CodeIgniter\Database\Forge::_createTable()</full_name>
        <docblock line="412">
          <description>Create Table</description>
          <long-description></long-description>
          <tag name="param" line="412" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Whether to add 'IF NOT EXISTS' condition&lt;/p&gt;" type="boolean" variable="$if_not_exists">
            <type>boolean</type>
          </tag>
          <tag name="param" line="412" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="412" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_not_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="467" package="Default">
        <name>_createTableAttributes</name>
        <full_name>\CodeIgniter\Database\Forge::_createTableAttributes()</full_name>
        <docblock line="467">
          <description>CREATE TABLE attributes</description>
          <long-description></long-description>
          <tag name="param" line="467" description="&lt;p&gt;Associative array of table attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="467" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$attributes</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="492" package="Default">
        <name>dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::dropTable()</full_name>
        <docblock line="492">
          <description>Drop Table</description>
          <long-description></long-description>
          <tag name="param" line="492" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="492" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="492" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="537" package="Default">
        <name>_dropTable</name>
        <full_name>\CodeIgniter\Database\Forge::_dropTable()</full_name>
        <docblock line="537">
          <description>Drop Table</description>
          <long-description>Generates a platform-specific DROP TABLE string</long-description>
          <tag name="param" line="537" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="537" description="&lt;p&gt;Whether to add an IF EXISTS condition&lt;/p&gt;" type="boolean" variable="$if_exists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="537" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$if_exists</name>
          <default></default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="569" package="Default">
        <name>renameTable</name>
        <full_name>\CodeIgniter\Database\Forge::renameTable()</full_name>
        <docblock line="569">
          <description>Rename Table</description>
          <long-description></long-description>
          <tag name="param" line="569" description="&lt;p&gt;Old table name&lt;/p&gt;" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="param" line="569" description="&lt;p&gt;New table name&lt;/p&gt;" type="string" variable="$new_table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="569" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$new_table_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="614" package="Default">
        <name>addColumn</name>
        <full_name>\CodeIgniter\Database\Forge::addColumn()</full_name>
        <docblock line="614">
          <description>Column Add</description>
          <long-description></long-description>
          <tag name="param" line="614" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column definition&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="param" line="614" description="&lt;p&gt;Column for AFTER clause (deprecated)&lt;/p&gt;" type="string" variable="$_after">
            <type>string</type>
          </tag>
          <tag name="return" line="614" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$_after</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="657" package="Default">
        <name>dropColumn</name>
        <full_name>\CodeIgniter\Database\Forge::dropColumn()</full_name>
        <docblock line="657">
          <description>Column Drop</description>
          <long-description></long-description>
          <tag name="param" line="657" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="657" description="&lt;p&gt;Column name&lt;/p&gt;" type="string" variable="$column_name">
            <type>string</type>
          </tag>
          <tag name="return" line="657" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$column_name</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database\Postgre" line="683" package="Default">
        <name>modifyColumn</name>
        <full_name>\CodeIgniter\Database\Forge::modifyColumn()</full_name>
        <docblock line="683">
          <description>Column Modify</description>
          <long-description></long-description>
          <tag name="param" line="683" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="683" description="&lt;p&gt;Column definition&lt;/p&gt;" type="string" variable="$field">
            <type>string</type>
          </tag>
          <tag name="return" line="683" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="732" package="Default">
        <name>_alterTable</name>
        <full_name>\CodeIgniter\Database\Forge::_alterTable()</full_name>
        <docblock line="732">
          <description>ALTER TABLE</description>
          <long-description></long-description>
          <tag name="param" line="732" description="&lt;p&gt;ALTER type&lt;/p&gt;" type="string" variable="$alter_type">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="param" line="732" description="&lt;p&gt;Column definition&lt;/p&gt;" type="mixed" variable="$field">
            <type>mixed</type>
          </tag>
          <tag name="return" line="732" description="" type="string|array&lt;mixed,string&gt;">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alter_type</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>mixed</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="765" package="Default">
        <name>_processFields</name>
        <full_name>\CodeIgniter\Database\Forge::_processFields()</full_name>
        <docblock line="765">
          <description>Process fields</description>
          <long-description></long-description>
          <tag name="param" line="765" description="" type="boolean" variable="$create_table">
            <type>boolean</type>
          </tag>
          <tag name="return" line="765" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$create_table</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="873" package="Default">
        <name>_processColumn</name>
        <full_name>\CodeIgniter\Database\Forge::_processColumn()</full_name>
        <docblock line="873">
          <description>Process column</description>
          <long-description></long-description>
          <tag name="param" line="873" description="" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="873" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$field</name>
          <default></default>
          <type>array</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="895" package="Default">
        <name>_attributeType</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeType()</full_name>
        <docblock line="895">
          <description>Field attribute TYPE</description>
          <long-description>Performs a data type mapping between different databases.</long-description>
          <tag name="param" line="895" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="return" line="895" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="919" package="Default">
        <name>_attributeUnsigned</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnsigned()</full_name>
        <docblock line="919">
          <description>Field attribute UNSIGNED</description>
          <long-description>Depending on the unsigned property value:

   - TRUE will always set $field['unsigned'] to 'UNSIGNED'
   - FALSE will always set $field['unsigned'] to ''
   - array(TYPE) will set $field['unsigned'] to 'UNSIGNED',
       if $attributes['TYPE'] is found in the array
   - array(TYPE =&gt; UTYPE) will change $field['type'],
       from TYPE to UTYPE in case of a match</long-description>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="919" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="919" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="963" package="Default">
        <name>_attributeDefault</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeDefault()</full_name>
        <docblock line="963">
          <description>Field attribute DEFAULT</description>
          <long-description></long-description>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="963" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="963" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="997" package="Default">
        <name>_attributeUnique</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeUnique()</full_name>
        <docblock line="997">
          <description>Field attribute UNIQUE</description>
          <long-description></long-description>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="997" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="997" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1015" package="Default">
        <name>_attributeAutoIncrement</name>
        <full_name>\CodeIgniter\Database\Forge::_attributeAutoIncrement()</full_name>
        <docblock line="1015">
          <description>Field attribute AUTO_INCREMENT</description>
          <long-description></long-description>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$attributes&lt;/p&gt;" type="array" variable="$attributes">
            <type>array</type>
          </tag>
          <tag name="param" line="1015" description="&lt;p&gt;&amp;$field&lt;/p&gt;" type="array" variable="$field">
            <type>array</type>
          </tag>
          <tag name="return" line="1015" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="true">
          <name>$attributes</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="true">
          <name>$field</name>
          <default></default>
          <type/>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1034" package="Default">
        <name>_processPrimaryKeys</name>
        <full_name>\CodeIgniter\Database\Forge::_processPrimaryKeys()</full_name>
        <docblock line="1034">
          <description>Process primary keys</description>
          <long-description></long-description>
          <tag name="param" line="1034" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1034" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1064" package="Default">
        <name>_processIndexes</name>
        <full_name>\CodeIgniter\Database\Forge::_processIndexes()</full_name>
        <docblock line="1064">
          <description>Process indexes</description>
          <long-description></long-description>
          <tag name="param" line="1064" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1064" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database\Postgre" line="1107" package="Default">
        <name>_reset</name>
        <full_name>\CodeIgniter\Database\Forge::_reset()</full_name>
        <docblock line="1107">
          <description>Reset</description>
          <long-description>Resets table creation vars</long-description>
          <tag name="return" line="1107" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Database\Forge</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="CLI/CLI.php" generated-path="CLI.CLI.html" hash="bac9f45878610356135e97099e6c0fcc" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\CLI" line="53" package="CodeIgniter\HTTP">
      <extends/>
      <name>CLI</name>
      <full_name>\CodeIgniter\CLI\CLI</full_name>
      <docblock line="53">
        <description>Class CLI</description>
        <long-description>Tools to interact with that request since CLI requests are not
static like HTTP requests might be.

Portions of this code were initially from the FuelPHP Framework,
version 1.7.x, and used here under the MIT license they were
originally made available under.

http://fuelphp.com</long-description>
        <tag name="package" line="53" description="CodeIgniter\HTTP"/>
      </docblock>
      <property static="true" visibility="public" namespace="CodeIgniter\CLI" line="60" package="CodeIgniter\HTTP">
        <name>$readline_support</name>
        <full_name>\CodeIgniter\CLI\CLI::readline_support</full_name>
        <default>false</default>
        <docblock line="60">
          <description>Is the readline library on the system?</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="public" namespace="CodeIgniter\CLI" line="67" package="CodeIgniter\HTTP">
        <name>$wait_msg</name>
        <full_name>\CodeIgniter\CLI\CLI::wait_msg</full_name>
        <default>'Press any key to continue...'</default>
        <docblock line="67">
          <description>The message displayed at prompts.</description>
          <long-description></long-description>
          <tag name="var" line="67" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\CLI" line="74" package="CodeIgniter\HTTP">
        <name>$initialized</name>
        <full_name>\CodeIgniter\CLI\CLI::initialized</full_name>
        <default>false</default>
        <docblock line="74">
          <description>Has the class already been initialized?</description>
          <long-description></long-description>
          <tag name="var" line="74" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\CLI" line="81" package="CodeIgniter\HTTP">
        <name>$inProgress</name>
        <full_name>\CodeIgniter\CLI\CLI::inProgress</full_name>
        <default>false</default>
        <docblock line="81">
          <description>Used by the progress bar</description>
          <long-description></long-description>
          <tag name="var" line="81" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\CLI" line="87" package="CodeIgniter\HTTP">
        <name>$foreground_colors</name>
        <full_name>\CodeIgniter\CLI\CLI::foreground_colors</full_name>
        <default>array('black' =&gt; '0;30', 'dark_gray' =&gt; '1;30', 'blue' =&gt; '0;34', 'dark_blue' =&gt; '1;34', 'light_blue' =&gt; '1;34', 'green' =&gt; '0;32', 'light_green' =&gt; '1;32', 'cyan' =&gt; '0;36', 'light_cyan' =&gt; '1;36', 'red' =&gt; '0;31', 'light_red' =&gt; '1;31', 'purple' =&gt; '0;35', 'light_purple' =&gt; '1;35', 'light_yellow' =&gt; '0;33', 'yellow' =&gt; '1;33', 'light_gray' =&gt; '0;37', 'white' =&gt; '1;37')</default>
        <docblock line="87">
          <description>Foreground color list</description>
          <long-description></long-description>
          <tag name="var" line="87" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\CLI" line="111" package="CodeIgniter\HTTP">
        <name>$background_colors</name>
        <full_name>\CodeIgniter\CLI\CLI::background_colors</full_name>
        <default>array('black' =&gt; '40', 'red' =&gt; '41', 'green' =&gt; '42', 'yellow' =&gt; '43', 'blue' =&gt; '44', 'magenta' =&gt; '45', 'cyan' =&gt; '46', 'light_gray' =&gt; '47')</default>
        <docblock line="111">
          <description>Background color list</description>
          <long-description></long-description>
          <tag name="var" line="111" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="127" package="CodeIgniter\HTTP">
        <name>init</name>
        <full_name>\CodeIgniter\CLI\CLI::init()</full_name>
        <docblock line="127">
          <description>Static "constructor".</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="146" package="CodeIgniter\HTTP">
        <name>input</name>
        <full_name>\CodeIgniter\CLI\CLI::input()</full_name>
        <docblock line="146">
          <description>Get input from the shell, using readline or the standard STDIN</description>
          <long-description>Named options must be in the following formats:
php index.php user -v --v -name=John --name=John</long-description>
          <tag name="param" line="146" description="" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="146" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="179" package="CodeIgniter\HTTP">
        <name>prompt</name>
        <full_name>\CodeIgniter\CLI\CLI::prompt()</full_name>
        <docblock line="179">
          <description>Asks the user for input.  This can have either 1 or 2 arguments.</description>
          <long-description>Usage:

// Waits for any key press
CLI::prompt();

// Takes any input
$color = CLI::prompt('What is your favorite color?');

// Takes any input, but offers default
$color = CLI::prompt('What is your favourite color?', 'white');

// Will only accept the options in the array
$ready = CLI::prompt('Are you ready?', array('y','n'));</long-description>
          <tag name="return" line="179" description="the user input" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="285" package="CodeIgniter\HTTP">
        <name>write</name>
        <full_name>\CodeIgniter\CLI\CLI::write()</full_name>
        <docblock line="285">
          <description>Outputs a string to the cli.</description>
          <long-description></long-description>
          <tag name="param" line="285" description="&lt;p&gt;the text to output&lt;/p&gt;" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="param" line="285" description="" type="string" variable="$foreground">
            <type>string</type>
          </tag>
          <tag name="param" line="285" description="" type="string" variable="$background">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreground</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$background</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="304" package="CodeIgniter\HTTP">
        <name>error</name>
        <full_name>\CodeIgniter\CLI\CLI::error()</full_name>
        <docblock line="304">
          <description>Outputs an error to the CLI using STDERR instead of STDOUT</description>
          <long-description></long-description>
          <tag name="param" line="304" description="&lt;p&gt;the text to output, or array of errors&lt;/p&gt;" type="string|array" variable="$text">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="304" description="" type="string" variable="$foreground">
            <type>string</type>
          </tag>
          <tag name="param" line="304" description="" type="string" variable="$background">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default></default>
          <type>string|array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreground</name>
          <default>'light_red'</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$background</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="321" package="CodeIgniter\HTTP">
        <name>beep</name>
        <full_name>\CodeIgniter\CLI\CLI::beep()</full_name>
        <docblock line="321">
          <description>Beeps a certain number of times.</description>
          <long-description></long-description>
          <tag name="param" line="321" description="&lt;p&gt;the number of times to beep&lt;/p&gt;" type="integer" variable="$num">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$num</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="335" package="CodeIgniter\HTTP">
        <name>wait</name>
        <full_name>\CodeIgniter\CLI\CLI::wait()</full_name>
        <docblock line="335">
          <description>Waits a certain number of seconds, optionally showing a wait message and
waiting for a key press.</description>
          <long-description></long-description>
          <tag name="param" line="335" description="&lt;p&gt;number of seconds&lt;/p&gt;" type="integer" variable="$seconds">
            <type>integer</type>
          </tag>
          <tag name="param" line="335" description="&lt;p&gt;show a countdown or not&lt;/p&gt;" type="boolean" variable="$countdown">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$seconds</name>
          <default></default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$countdown</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="370" package="CodeIgniter\HTTP">
        <name>isWindows</name>
        <full_name>\CodeIgniter\CLI\CLI::isWindows()</full_name>
        <docblock line="370">
          <description>if operating system === windows</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="384" package="CodeIgniter\HTTP">
        <name>newLine</name>
        <full_name>\CodeIgniter\CLI\CLI::newLine()</full_name>
        <docblock line="384">
          <description>Enter a number of empty lines</description>
          <long-description></long-description>
          <tag name="param" line="384" description="&lt;p&gt;Number of lines to output&lt;/p&gt;" type="integer" variable="$num">
            <type>integer</type>
          </tag>
          <tag name="return" line="384" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$num</name>
          <default>1</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="400" package="CodeIgniter\HTTP">
        <name>clearScreen</name>
        <full_name>\CodeIgniter\CLI\CLI::clearScreen()</full_name>
        <docblock line="400">
          <description>Clears the screen of output</description>
          <long-description></long-description>
          <tag name="return" line="400" description="" type="void">
            <type>void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="424" package="CodeIgniter\HTTP">
        <name>color</name>
        <full_name>\CodeIgniter\CLI\CLI::color()</full_name>
        <docblock line="424">
          <description>Returns the given text with the correct color codes for a foreground and
optionally a background color.</description>
          <long-description></long-description>
          <tag name="param" line="424" description="&lt;p&gt;the text to color&lt;/p&gt;" type="string" variable="$text">
            <type>string</type>
          </tag>
          <tag name="param" line="424" description="&lt;p&gt;the foreground color&lt;/p&gt;" type="string" variable="$foreground">
            <type>string</type>
          </tag>
          <tag name="param" line="424" description="&lt;p&gt;the background color&lt;/p&gt;" type="string" variable="$background">
            <type>string</type>
          </tag>
          <tag name="param" line="424" description="&lt;p&gt;other formatting to apply. Currently only 'underline' is understood&lt;/p&gt;" type="string" variable="$format">
            <type>string</type>
          </tag>
          <tag name="return" line="424" description="the color coded string" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$text</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$foreground</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$background</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$format</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="469" package="CodeIgniter\HTTP">
        <name>getWidth</name>
        <full_name>\CodeIgniter\CLI\CLI::getWidth()</full_name>
        <docblock line="469">
          <description>Attempts to determine the width of the viewable CLI window.</description>
          <long-description>This only works on *nix-based systems, so return a sane default
for Windows environments.</long-description>
          <tag name="param" line="469" description="" type="integer" variable="$default">
            <type>integer</type>
          </tag>
          <tag name="return" line="469" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>80</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="490" package="CodeIgniter\HTTP">
        <name>getHeight</name>
        <full_name>\CodeIgniter\CLI\CLI::getHeight()</full_name>
        <docblock line="490">
          <description>Attempts to determine the height of the viewable CLI window.</description>
          <long-description>This only works on *nix-based systems, so return a sane default
for Windows environments.</long-description>
          <tag name="param" line="490" description="" type="integer" variable="$default">
            <type>integer</type>
          </tag>
          <tag name="return" line="490" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$default</name>
          <default>32</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="509" package="CodeIgniter\HTTP">
        <name>showProgress</name>
        <full_name>\CodeIgniter\CLI\CLI::showProgress()</full_name>
        <docblock line="509">
          <description>Displays a progress bar on the CLI. You must call it repeatedly
to update it. Set $thisStep = false to erase the progress bar.</description>
          <long-description></long-description>
          <tag name="param" line="509" description="" type="integer" variable="$thisStep">
            <type>integer</type>
          </tag>
          <tag name="param" line="509" description="" type="integer" variable="$totalSteps">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$thisStep</name>
          <default>1</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$totalSteps</name>
          <default>10</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\CLI" line="563" package="CodeIgniter\HTTP">
        <name>wrap</name>
        <full_name>\CodeIgniter\CLI\CLI::wrap()</full_name>
        <docblock line="563">
          <description>Takes a string and writes it to the command line, wrapping to a maximum
width. If no maximum width is specified, will wrap to the window's max
width.</description>
          <long-description>If an int is passed into $pad_left, then all strings after the first
will padded with that many spaces to the left. Useful when printing
short descriptions that need to start on an existing line.</long-description>
          <tag name="param" line="563" description="" type="string" variable="$string">
            <type>string</type>
          </tag>
          <tag name="param" line="563" description="" type="integer" variable="$max">
            <type>integer</type>
          </tag>
          <tag name="param" line="563" description="" type="integer" variable="$pad_left">
            <type>integer</type>
          </tag>
          <tag name="return" line="563" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$string</name>
          <default>null</default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$max</name>
          <default>0</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$pad_left</name>
          <default>0</default>
          <type>integer</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="HTTP/RequestInterface.php" generated-path="HTTP.RequestInterface.html" hash="0d04e62a8ee15b57103412cdd296f2c0" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\HTTP" line="43" package="Default">
      <name>RequestInterface</name>
      <full_name>\CodeIgniter\HTTP\RequestInterface</full_name>
      <docblock line="43">
        <description>Expected behavior of an HTTP request</description>
        <long-description></long-description>
        <tag name="package" line="43" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="50" package="Default">
        <name>getIPAddress</name>
        <full_name>\CodeIgniter\HTTP\RequestInterface::getIPAddress()</full_name>
        <docblock line="50">
          <description>Gets the user's IP address.</description>
          <long-description></long-description>
          <tag name="return" line="50" description="IP address" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="62" package="Default">
        <name>isValidIP</name>
        <full_name>\CodeIgniter\HTTP\RequestInterface::isValidIP()</full_name>
        <docblock line="62">
          <description>Validate an IP address</description>
          <long-description></long-description>
          <tag name="param" line="62" description="&lt;p&gt;IP Address&lt;/p&gt;" type="" variable="$ip"/>
          <tag name="param" line="62" description="&lt;p&gt;IP protocol: 'ipv4' or 'ipv6'&lt;/p&gt;" type="string" variable="$which">
            <type>string</type>
          </tag>
          <tag name="return" line="62" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$ip</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$which</name>
          <default>null</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="73" package="Default">
        <name>getMethod</name>
        <full_name>\CodeIgniter\HTTP\RequestInterface::getMethod()</full_name>
        <docblock line="73">
          <description>Get the request method.</description>
          <long-description></long-description>
          <tag name="param" line="73" description="&lt;p&gt;Whether to return in upper or lower case.&lt;/p&gt;" type="boolean|false" variable="$upper">
            <type>boolean</type>
            <type>false</type>
          </tag>
          <tag name="return" line="73" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$upper</name>
          <default>false</default>
          <type>boolean|false</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\HTTP" line="84" package="Default">
        <name>getServer</name>
        <full_name>\CodeIgniter\HTTP\RequestInterface::getServer()</full_name>
        <docblock line="84">
          <description>Fetch an item from the $_SERVER array.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="&lt;p&gt;Index for item to be fetched from $_SERVER&lt;/p&gt;" type="null" variable="$index">
            <type>null</type>
          </tag>
          <tag name="param" line="84" description="&lt;p&gt;A filter name to be applied&lt;/p&gt;" type="null" variable="$filter">
            <type>null</type>
          </tag>
          <tag name="return" line="84" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$index</name>
          <default>null</default>
          <type>null</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$filter</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vm1v4zYM/pz8CqIo0PTgS7rtcB+6HVY3cRphiW3YbrsCAwbFVmKtjuWT5L5g238fKTvttbf71isKxKLIh+QjktIvvzZlAzXfCdPwXMBUFYJta2mF/mORZfHPw+Hk3bshvPtyB5ck8WtQjajBqFajKW+aSubcSlVDIe5EpZqdqC1sNKLfK30LG6UhXsS9eVZKA7mqLSnhpxaV4EYU0NaF0GBLASuWwVLmojYCRrg47k2nqnnUcltaGOXH8OPJDx/gPf189OBcSytNiSpVu1tLDqw2VtrWClAbyERe1qpS28ceKRZ6J42hmDGEUmixfoSt5hhV4WHowpnlJddb4YFVwOtHaIQ2aKDWlsta1lvgmEdDkKRsKS+jNvaea2SlLoAbo3LJERIKlbfESkfTRlbCwIhSPUh7i4Nj56cQvCJAWTsm9rtwL22pWotsGatlTjAeKuVVW1Ak++1K7mTvhMwdWYbwELo1mAoF7MFOFXJDv8Ll17TrCsnzoJCEvkbWPDAkdGfgUTYTPEQjKhccgkhMwCX9HKNTI0cNkWt7ugxJ7ku1e5mPdFFtWl2jY+HMCoX0Ob9/idyShCw2qqrUPeWINVNISs2cPpUSEr1Wd8Kl1VVGrazMO/7diTTPJ91vmZJXFaxFTx86lzWhkXSfmaYwjMV6kLyCRmnn93XG430ciwDSaJ5d+0kALIU4ia7YLJjBgZ/i+sCDa5YtossMUCPxw+wGojn44Q38xsKZB8HvcRKkKUQJobFVvGQBilk4XV7OWHgB52gaRtgUDLsBcbPI+ezRWJAS3ipIpgtc+udsybIbj7DmLAsJeR4l4EPsJxmbXi79BOLLJI7SAIOYIXLIwnmCjoJVEGZjdIwyCK5wAenCXy7Jm2v9S0wjoUBhGsU3CbtYZLCIlrMAhecBxuefL4POG2Y3Xfps5cHMX/kXgbOKEMglSZpdmHC9CEhKXn38n2YsCimfaRRmCS49TDfJnqyvWRp44CcsJWbmSbRymRK7aBQ5HDQNgw6ImH95QKhC68s0eMKEWeAvEQ5PK3x9oPtDPsNBecu3YvByIsIZb7H39JdimIk7nDl85/afanPwBvMLRqW1zelkss6lHed8cux89J066DdpPnfjeaz0dtLvmglWz+CL4dqb1rd7uxxzkF0O41x14RtsEzG4wmamHvppfDI+cXI3xJwPXE6e7ovgocHuxaZai5LfSewkjJ/XQLcKTq/PLQ6wzkDisNUbun2STsz2guHfwwHBDRDvQljjmg7Hlz4ywGLgRYFj0Ixp3+mcaWFxkgANLxwUzyq0OxkO3HzLcdrUbnDCVlgW+53K6Pi0t8M7bzCZvH+Dv+Fz+Fe8kgVeAUTBy7i6yBuO1yT0f4eycb+o6D8r7pX67A7vS5mXTqnRyqpcVadwJJu7D0c0t+jr49FX1KyVqr7BhjQuSBaP9h5k473y9gnqtqqQKsL5LkThOXdXVlcLeDVhVxXj10yR/382vMKXwWHb4HCH6xI16eGgoM8V785uC+nAuwM/cnxgfKtcvl0jKxfCqPfzCZzb71suc2GRbawVbMEdvkP6a/PwzzRIrnBOca3541ek0NngqeH76YGqx/3So8uBIC94120IGLvSQe7hvsbApqb5hXdF/0VPxB7CPfRE8YLCnXzoJP/PYCr0ndCjPrSuiLwnL31RvSWR/w7/A456OBU=</source>
  </file>
  <file path="Database/Migration.php" generated-path="Database.Migration.html" hash="ff66c6d8b6b1fd321a1f288beb0586bb" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="true" namespace="CodeIgniter\Database" line="42" package="Default">
      <extends/>
      <name>Migration</name>
      <full_name>\CodeIgniter\Database\Migration</full_name>
      <docblock line="42">
        <description>Class Migration</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="48" package="Default">
        <name>$DBGroup</name>
        <full_name>\CodeIgniter\Database\Migration::DBGroup</full_name>
        <default></default>
        <docblock line="48">
          <description>The name of the database group to use.</description>
          <long-description></long-description>
          <tag name="var" line="48" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="54" package="Default">
        <name>$db</name>
        <full_name>\CodeIgniter\Database\Migration::db</full_name>
        <default></default>
        <docblock line="54">
          <description>Database Connection instance</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="\CodeIgniter\Database\BaseConnection" variable="">
            <type>\CodeIgniter\Database\BaseConnection</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="60" package="Default">
        <name>$forge</name>
        <full_name>\CodeIgniter\Database\Migration::forge</full_name>
        <default></default>
        <docblock line="60">
          <description>Database Forge instance.</description>
          <long-description></long-description>
          <tag name="var" line="60" description="" type="\CodeIgniter\Database\Forge" variable="">
            <type>\CodeIgniter\Database\Forge</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="69" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\Migration::__construct()</full_name>
        <docblock line="69">
          <description>Constructor.</description>
          <long-description></long-description>
          <tag name="param" line="69" description="" type="\CodeIgniter\Database\Forge" variable="$forge">
            <type>\CodeIgniter\Database\Forge</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$forge</name>
          <default>null</default>
          <type>\CodeIgniter\Database\Forge</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="85" package="Default">
        <name>getDBGroup</name>
        <full_name>\CodeIgniter\Database\Migration::getDBGroup()</full_name>
        <docblock line="85">
          <description>Returns the database group name this migration uses.</description>
          <long-description></long-description>
          <tag name="return" line="85" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="95" package="Default">
        <name>up</name>
        <full_name>\CodeIgniter\Database\Migration::up()</full_name>
        <docblock line="95">
          <description>Perform a migration step.</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="102" package="Default">
        <name>down</name>
        <full_name>\CodeIgniter\Database\Migration::down()</full_name>
        <docblock line="102">
          <description>Revert a migration step.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy1Vt9v4jgQfoa/Yq7aB6hS2Puhe2jvdjdAKNFBgkLaXqWVViYx4NtgR7ZTVJ32f78ZJ6G025eTuqgStT3zzffNeMb88bHclSDZnpuSZRzGKufhVgrL9ecJs2zNDL/qdofn5104Pz3FJe34ElTJJRhVaXRnZVmIjFmhJOT8gReq3HNpYaMxwkHpr7BRGpazZeOe7oSBTElLRviv5gXHiDlUMuca7I7DIkxhLjIuDYceLvqN61iVj1psdxZ6WR9+ef/zb3BBX797MNLCCrNDk6LarwWDUBorbGU5qA2kPNtJVajtY4O05HovjCHOSGHHNV8/wlYzZJV7SJ07t2zH9JZ7YBUw+Qgl1wYd1NoyIYXcAkMdJUGSsSVdRm3sgWnMisyBGaMywRAScpVVlJU6TRtRcAM9knq2ajzO+i5OzllBgEK6TLSncBB2pyqL2TJWi4xgPDTKiionJu1xIfaiCULuLlmG8BC6MiiFCHuwV7nY0Dd3+spqXWDyPMgFoa8xax4Y2nQ18EjNEItoeOHIIYhAAU70E0dnRoFKSq5t0mVo57BT++d6hGO1qbTEwNy55QrT5+L+wzNLO+SxUUWhDqQR70wuSJq5PF4lTPRaPXAnq74ZUlmR1fl3FSmfKt0cmR0rCljzJn0YXEhCo91WmSYaxuJ9EKyAUmkX96XiQctjFsAqnqZ3fhJAuIJlEt+Gk2ACZ/4K12ce3IXpLL5JAS0SP0rvIZ6CH93DX2E08SD4e5kEqxXECaGFi+U8DHA7jMbzm0kYXcMIXaMYmyLEbkDcNHYxG7QwWBHeIkjGM1z6o3AepvceYU3DNCLkaZyAD0s/ScPxzdxPYHmTLONVgCQmiByF0TTBQMEiiNIBBsY9CG5xAauZP59TNNf6NygjIaIwjpf3SXg9S2EWzycBbo4C5OeP5kEdDdWN53648GDiL/zrwHnFCOREkmVNE+5mAe1SVB//xmkYR6RnHEdpgksP5Sbp0fsuXAUe+Em4osxMk3jhlFJ20Sl2OOgaBTUQZf55gdCE1jer4IgJk8CfIxxWK3pZ0LbIn3BYfmVb3nk+EeETq7D39Ok2TPgDzhy2d+fHu9l5g/kFvZ215eVwuM6EHWRs2Hcxmk7tNIc0n+vxPFB6O2xOzRBvT+dkuDau8mvrl6EGUWsYZKqmb7BNeOcWm5l66NfB+8F7t++GmIuBy+HTe1Hg2IOFwGFKPePOGLaSZtjT2YvDf7sdcus0vUxvUttjefMS4VRWVdnMr4Ez/fTAsD9xUMktrYfdTqmVxZmBrfxuMromB3zAjtDto4bJlZK72YktT92N3I+AI7Q4MfgeOV+/CjrFDPMj3glDd/A9zIa2r7odhBpevMHHITWkkD/mpcqs0jWRmk3J8C2Gz6899J9r+jWrlqyb/DicZZ2KL1+yFrd3ag5/gqyKoo9RsJCAn3c0ci8+tKc/4Zj/Qia92qHf7Tizjy1As74kbnIjtkdal5fOoNcANkXtUwE6zV6+xginAS8+bLl9qmAPrTvf3jDPT2lOuMWHy7x2T90Vdg/Pvr3ldHGNK0ddDe28X1zgFylHJY3mXv+Y3cbxeU6cyB+gEX8hYVb3+BvnSYixvBw0jI89/ZI6Ub76EYwS/HGp7f8nlKuDfFtK37r/Ae+GSNs=</source>
  </file>
  <file path="Database/BaseConnection.php" generated-path="Database.BaseConnection.html" hash="46e72e9a44d8f1079cd669e35f357679" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="DatabaseException">\CodeIgniter\DatabaseException</namespace-alias>
    <class final="false" abstract="true" namespace="CodeIgniter\Database" line="44" package="Default">
      <extends/>
      <implements>\CodeIgniter\Database\ConnectionInterface</implements>
      <name>BaseConnection</name>
      <full_name>\CodeIgniter\Database\BaseConnection</full_name>
      <docblock line="44">
        <description>Class BaseConnection</description>
        <long-description></long-description>
        <tag name="package" line="44" description="Default"/>
      </docblock>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="51" package="Default">
        <name>$DSN</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DSN</full_name>
        <default></default>
        <docblock line="51">
          <description>Data Source Name / Connect string</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="58" package="Default">
        <name>$port</name>
        <full_name>\CodeIgniter\Database\BaseConnection::port</full_name>
        <default>''</default>
        <docblock line="58">
          <description>Database port</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="integer" variable="">
            <type>integer</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="65" package="Default">
        <name>$hostname</name>
        <full_name>\CodeIgniter\Database\BaseConnection::hostname</full_name>
        <default></default>
        <docblock line="65">
          <description>Hostname</description>
          <long-description></long-description>
          <tag name="var" line="65" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="72" package="Default">
        <name>$username</name>
        <full_name>\CodeIgniter\Database\BaseConnection::username</full_name>
        <default></default>
        <docblock line="72">
          <description>Username</description>
          <long-description></long-description>
          <tag name="var" line="72" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="79" package="Default">
        <name>$password</name>
        <full_name>\CodeIgniter\Database\BaseConnection::password</full_name>
        <default></default>
        <docblock line="79">
          <description>Password</description>
          <long-description></long-description>
          <tag name="var" line="79" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="86" package="Default">
        <name>$database</name>
        <full_name>\CodeIgniter\Database\BaseConnection::database</full_name>
        <default></default>
        <docblock line="86">
          <description>Database name</description>
          <long-description></long-description>
          <tag name="var" line="86" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="93" package="Default">
        <name>$DBDriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDriver</full_name>
        <default>'MySQLi'</default>
        <docblock line="93">
          <description>Database driver</description>
          <long-description></long-description>
          <tag name="var" line="93" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="101" package="Default">
        <name>$subdriver</name>
        <full_name>\CodeIgniter\Database\BaseConnection::subdriver</full_name>
        <default></default>
        <docblock line="101">
          <description>Sub-driver</description>
          <long-description></long-description>
          <tag name="used-by" line="101" description="CI_DB_pdo_driver"/>
          <tag name="var" line="101" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="108" package="Default">
        <name>$DBPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBPrefix</full_name>
        <default>''</default>
        <docblock line="108">
          <description>Table prefix</description>
          <long-description></long-description>
          <tag name="var" line="108" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="115" package="Default">
        <name>$pConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::pConnect</full_name>
        <default>false</default>
        <docblock line="115">
          <description>Persistent connection flag</description>
          <long-description></long-description>
          <tag name="var" line="115" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="124" package="Default">
        <name>$DBDebug</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBDebug</full_name>
        <default>false</default>
        <docblock line="124">
          <description>Debug flag</description>
          <long-description>Whether to display error messages.</long-description>
          <tag name="var" line="124" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="131" package="Default">
        <name>$cacheOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheOn</full_name>
        <default>false</default>
        <docblock line="131">
          <description>Should we cache results?</description>
          <long-description></long-description>
          <tag name="var" line="131" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="138" package="Default">
        <name>$cacheDir</name>
        <full_name>\CodeIgniter\Database\BaseConnection::cacheDir</full_name>
        <default></default>
        <docblock line="138">
          <description>Path to store cache files.</description>
          <long-description></long-description>
          <tag name="var" line="138" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="145" package="Default">
        <name>$charset</name>
        <full_name>\CodeIgniter\Database\BaseConnection::charset</full_name>
        <default>'utf8'</default>
        <docblock line="145">
          <description>Character set</description>
          <long-description></long-description>
          <tag name="var" line="145" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="152" package="Default">
        <name>$DBCollat</name>
        <full_name>\CodeIgniter\Database\BaseConnection::DBCollat</full_name>
        <default>'utf8_general_ci'</default>
        <docblock line="152">
          <description>Collation</description>
          <long-description></long-description>
          <tag name="var" line="152" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="159" package="Default">
        <name>$swapPre</name>
        <full_name>\CodeIgniter\Database\BaseConnection::swapPre</full_name>
        <default>''</default>
        <docblock line="159">
          <description>Swap Prefix</description>
          <long-description></long-description>
          <tag name="var" line="159" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="166" package="Default">
        <name>$encrypt</name>
        <full_name>\CodeIgniter\Database\BaseConnection::encrypt</full_name>
        <default>false</default>
        <docblock line="166">
          <description>Encryption flag/data</description>
          <long-description></long-description>
          <tag name="var" line="166" description="" type="mixed" variable="">
            <type>mixed</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="173" package="Default">
        <name>$compress</name>
        <full_name>\CodeIgniter\Database\BaseConnection::compress</full_name>
        <default>false</default>
        <docblock line="173">
          <description>Compression flag</description>
          <long-description></long-description>
          <tag name="var" line="173" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="182" package="Default">
        <name>$strictOn</name>
        <full_name>\CodeIgniter\Database\BaseConnection::strictOn</full_name>
        <default></default>
        <docblock line="182">
          <description>Strict ON flag</description>
          <long-description>Whether we're running in strict SQL mode.</long-description>
          <tag name="var" line="182" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="189" package="Default">
        <name>$failover</name>
        <full_name>\CodeIgniter\Database\BaseConnection::failover</full_name>
        <default>array()</default>
        <docblock line="189">
          <description>Settings for a failover connection.</description>
          <long-description></long-description>
          <tag name="var" line="189" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="197" package="Default">
        <name>$saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries</full_name>
        <default>false</default>
        <docblock line="197">
          <description>Whether to keep an in-memory history of queries
for debugging and timeline purposes.</description>
          <long-description></long-description>
          <tag name="var" line="197" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="207" package="Default">
        <name>$queries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::queries</full_name>
        <default>array()</default>
        <docblock line="207">
          <description>Array of query objects that have executed
on this connection.</description>
          <long-description></long-description>
          <tag name="var" line="207" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="214" package="Default">
        <name>$connID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connID</full_name>
        <default>false</default>
        <docblock line="214">
          <description>Connection ID</description>
          <long-description></long-description>
          <tag name="var" line="214" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="221" package="Default">
        <name>$resultID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::resultID</full_name>
        <default>false</default>
        <docblock line="221">
          <description>Result ID</description>
          <long-description></long-description>
          <tag name="var" line="221" description="" type="object|resource" variable="">
            <type>object</type>
            <type>resource</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="228" package="Default">
        <name>$protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers</full_name>
        <default>true</default>
        <docblock line="228">
          <description>Protect identifiers flag</description>
          <long-description></long-description>
          <tag name="var" line="228" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="237" package="Default">
        <name>$reservedIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reservedIdentifiers</full_name>
        <default>array('*')</default>
        <docblock line="237">
          <description>List of reserved identifiers</description>
          <long-description>Identifiers that must NOT be escaped.</long-description>
          <tag name="var" line="237" description="" type="array&lt;mixed,string&gt;" variable="">
            <type>array&lt;mixed,string&gt;</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="244" package="Default">
        <name>$escapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeChar</full_name>
        <default>'"'</default>
        <docblock line="244">
          <description>Identifier escape character</description>
          <long-description></long-description>
          <tag name="var" line="244" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="251" package="Default">
        <name>$likeEscapeStr</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeStr</full_name>
        <default>" ESCAPE '%s' "</default>
        <docblock line="251">
          <description>ESCAPE statement string</description>
          <long-description></long-description>
          <tag name="var" line="251" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="public" namespace="CodeIgniter\Database" line="258" package="Default">
        <name>$likeEscapeChar</name>
        <full_name>\CodeIgniter\Database\BaseConnection::likeEscapeChar</full_name>
        <default>'!'</default>
        <docblock line="258">
          <description>ESCAPE character</description>
          <long-description></long-description>
          <tag name="var" line="258" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="266" package="Default">
        <name>$dataCache</name>
        <full_name>\CodeIgniter\Database\BaseConnection::dataCache</full_name>
        <default>array()</default>
        <docblock line="266">
          <description>Holds previously looked up data
for performance reasons.</description>
          <long-description></long-description>
          <tag name="var" line="266" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="272" package="Default">
        <name>$connectTime</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectTime</full_name>
        <default></default>
        <docblock line="272">
          <description>Microtime when connection was made</description>
          <long-description></long-description>
          <tag name="var" line="272" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Database" line="279" package="Default">
        <name>$connectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connectDuration</full_name>
        <default></default>
        <docblock line="279">
          <description>How long it took to establish connection.</description>
          <long-description></long-description>
          <tag name="var" line="279" description="" type="float" variable="">
            <type>float</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="288" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Database\BaseConnection::__construct()</full_name>
        <docblock line="288">
          <description>Saves our connection settings.</description>
          <long-description></long-description>
          <tag name="param" line="288" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="304" package="Default">
        <name>initialize</name>
        <full_name>\CodeIgniter\Database\BaseConnection::initialize()</full_name>
        <docblock line="304">
          <description>Initializes the database connection/settings.</description>
          <long-description></long-description>
          <tag name="return" line="304" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::initialize()" refers="\CodeIgniter\Database\ConnectionInterface::initialize()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_initialize"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="368" package="Default">
        <name>connect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::connect()</full_name>
        <docblock line="368">
          <description>Connect to the database.</description>
          <long-description></long-description>
          <tag name="param" line="368" description="" type="boolean" variable="$persistent">
            <type>boolean</type>
          </tag>
          <tag name="return" line="368" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::connect()" refers="\CodeIgniter\Database\ConnectionInterface::connect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_connect"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$persistent</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="377" package="Default">
        <name>persistentConnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::persistentConnect()</full_name>
        <docblock line="377">
          <description>Create a persistent database connection.</description>
          <long-description></long-description>
          <tag name="return" line="377" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" refers="\CodeIgniter\Database\ConnectionInterface::persistentConnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_persistentConnect"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="390" package="Default">
        <name>reconnect</name>
        <full_name>\CodeIgniter\Database\BaseConnection::reconnect()</full_name>
        <docblock line="390">
          <description>Keep or establish the connection if no queries have been sent for
a length of time exceeding the server's idle timeout.</description>
          <long-description></long-description>
          <tag name="return" line="390" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::reconnect()" refers="\CodeIgniter\Database\ConnectionInterface::reconnect()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_reconnect"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="404" package="Default">
        <name>getConnection</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnection()</full_name>
        <docblock line="404">
          <description>Returns the actual connection object. If both a 'read' and 'write'
connection has been specified, you can pass either term in to
get that connection. If you pass either alias in and only a single
connection is present, it must return the sole connection.</description>
          <long-description></long-description>
          <tag name="param" line="404" description="" type="string|null" variable="$alias">
            <type>string</type>
            <type>null</type>
          </tag>
          <tag name="return" line="404" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getConnection()" refers="\CodeIgniter\Database\ConnectionInterface::getConnection()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getConnection"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$alias</name>
          <default>null</default>
          <type>string|null</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="419" package="Default">
        <name>setDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setDatabase()</full_name>
        <docblock line="419">
          <description>Select a specific database table to use.</description>
          <long-description></long-description>
          <tag name="param" line="419" description="" type="string" variable="$databaseName">
            <type>string</type>
          </tag>
          <tag name="return" line="419" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::setDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::setDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_setDatabase"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$databaseName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="428" package="Default">
        <name>getDatabase</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getDatabase()</full_name>
        <docblock line="428">
          <description>Returns the name of the current database being used.</description>
          <long-description></long-description>
          <tag name="return" line="428" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getDatabase()" refers="\CodeIgniter\Database\ConnectionInterface::getDatabase()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getDatabase"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="440" package="Default">
        <name>getError</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getError()</full_name>
        <docblock line="440">
          <description>Returns the last error encountered by this connection.</description>
          <long-description></long-description>
          <tag name="return" line="440" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getError()" refers="\CodeIgniter\Database\ConnectionInterface::getError()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getError"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="451" package="Default">
        <name>getPlatform</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getPlatform()</full_name>
        <docblock line="451">
          <description>The name of the platform in use (MySQLi, mssql, etc)</description>
          <long-description></long-description>
          <tag name="return" line="451" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getPlatform()" refers="\CodeIgniter\Database\ConnectionInterface::getPlatform()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getPlatform"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="463" package="Default">
        <name>getVersion</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getVersion()</full_name>
        <docblock line="463">
          <description>Returns a string containing the version of the database being used.</description>
          <long-description></long-description>
          <tag name="return" line="463" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getVersion()" refers="\CodeIgniter\Database\ConnectionInterface::getVersion()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getVersion"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="472" package="Default">
        <name>saveQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::saveQueries()</full_name>
        <docblock line="472">
          <description>Specifies whether this connection should keep queries objects or not.</description>
          <long-description></long-description>
          <tag name="param" line="472" description="" type="boolean" variable="$save">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::saveQueries()" refers="\CodeIgniter\Database\ConnectionInterface::saveQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_saveQueries"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$save</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database" line="488" package="Default">
        <name>execute</name>
        <full_name>\CodeIgniter\Database\BaseConnection::execute()</full_name>
        <docblock line="488">
          <description>Executes the query against the database.</description>
          <long-description></long-description>
          <tag name="param" line="488" description="" type="" variable="$sql"/>
          <tag name="return" line="488" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="506" package="Default">
        <name>query</name>
        <full_name>\CodeIgniter\Database\BaseConnection::query()</full_name>
        <docblock line="506">
          <description>Orchestrates a query against the database. Queries must use
Database\Statement objects to store the query and build it.</description>
          <long-description>This method works with the cache.

Should automatically handle different connections for read/write
queries if needed.</long-description>
          <tag name="param" line="506" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="param" line="506" description="" type="array" variable="$binds">
            <type>array</type>
          </tag>
          <tag name="param" line="506" description="" type="" variable="$queryClass"/>
          <tag name="return" line="506" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::query()" refers="\CodeIgniter\Database\ConnectionInterface::query()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_query"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$binds</name>
          <default>null</default>
          <type>array</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$queryClass</name>
          <default>'CodeIgniter\\Database\\Query'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="562" package="Default">
        <name>simpleQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::simpleQuery()</full_name>
        <docblock line="562">
          <description>Performs a basic query against the database. No binding or caching
is performed, nor are transactions handled. Simply takes a raw
query string and returns the database-specific result id.</description>
          <long-description></long-description>
          <tag name="param" line="562" description="" type="string" variable="$sql">
            <type>string</type>
          </tag>
          <tag name="return" line="562" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" refers="\CodeIgniter\Database\ConnectionInterface::simpleQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_simpleQuery"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$sql</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="582" package="Default">
        <name>table</name>
        <full_name>\CodeIgniter\Database\BaseConnection::table()</full_name>
        <docblock line="582">
          <description>Returns an instance of the query builder for this connection.</description>
          <long-description></long-description>
          <tag name="param" line="582" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="582" description="" type="\CodeIgniter\Database\BaseBuilder">
            <type>\CodeIgniter\Database\BaseBuilder</type>
          </tag>
          <tag name="throws" line="582" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::table()" refers="\CodeIgniter\Database\ConnectionInterface::table()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_table"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="601" package="Default">
        <name>getQueries</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueries()</full_name>
        <docblock line="601">
          <description>Returns an array containing all of the</description>
          <long-description></long-description>
          <tag name="return" line="601" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueries()" refers="\CodeIgniter\Database\ConnectionInterface::getQueries()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueries"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="614" package="Default">
        <name>getQueryCount</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getQueryCount()</full_name>
        <docblock line="614">
          <description>Returns the total number of queries that have been performed
on this connection.</description>
          <long-description></long-description>
          <tag name="return" line="614" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" refers="\CodeIgniter\Database\ConnectionInterface::getQueryCount()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getQueryCount"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="626" package="Default">
        <name>getLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getLastQuery()</full_name>
        <docblock line="626">
          <description>Returns the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="626" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" refers="\CodeIgniter\Database\ConnectionInterface::getLastQuery()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_getLastQuery"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="638" package="Default">
        <name>showLastQuery</name>
        <full_name>\CodeIgniter\Database\BaseConnection::showLastQuery()</full_name>
        <docblock line="638">
          <description>Returns a string representation of the last query's statement object.</description>
          <long-description></long-description>
          <tag name="return" line="638" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="655" package="Default">
        <name>getConnectStart</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectStart()</full_name>
        <docblock line="655">
          <description>Returns the time we started to connect to this database in
seconds with microseconds.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="return" line="655" description="" type="float">
            <type>float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="672" package="Default">
        <name>getConnectDuration</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getConnectDuration()</full_name>
        <docblock line="672">
          <description>Returns the number of seconds with microseconds that it took
to connect to the database.</description>
          <long-description>Used by the Debug Toolbar's timeline.</long-description>
          <tag name="param" line="672" description="" type="integer" variable="$decimals">
            <type>integer</type>
          </tag>
          <tag name="return" line="672" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$decimals</name>
          <default>6</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="706" package="Default">
        <name>protectIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::protectIdentifiers()</full_name>
        <docblock line="706">
          <description>Protect Identifiers</description>
          <long-description>This function is used extensively by the Query Builder class, and by
a couple functions in this class.
It takes a column or table name (optionally with an alias) and inserts
the table prefix onto it. Some logic is necessary in order to deal with
column names that include the path. Consider a query like this:

SELECT hostname.database.table.column AS c FROM hostname.database.table

Or a query with aliasing:

SELECT m.member_id, m.member_name FROM members AS m

Since the column name can include up to four segments (host, DB, table, column)
or also have an alias prefix, we need to do a bit of work to figure this out and
insert the table prefix (if it exists) in the proper position, and escape only
the correct identifiers.</long-description>
          <tag name="param" line="706" description="" type="string|array" variable="$item">
            <type>string</type>
            <type>array</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$prefixSingle">
            <type>boolean</type>
          </tag>
          <tag name="param" line="706" description="" type="mixed" variable="$protectIdentifiers">
            <type>mixed</type>
          </tag>
          <tag name="param" line="706" description="" type="boolean" variable="$fieldExists">
            <type>boolean</type>
          </tag>
          <tag name="return" line="706" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$prefixSingle</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$protectIdentifiers</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$fieldExists</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="879" package="Default">
        <name>escapeIdentifiers</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeIdentifiers()</full_name>
        <docblock line="879">
          <description>Escape the SQL Identifiers</description>
          <long-description>This function escapes column and table names</long-description>
          <tag name="param" line="879" description="" type="mixed" variable="$item">
            <type>mixed</type>
          </tag>
          <tag name="return" line="879" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$item</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="946" package="Default">
        <name>prefixTable</name>
        <full_name>\CodeIgniter\Database\BaseConnection::prefixTable()</full_name>
        <docblock line="946">
          <description>DB Prefix</description>
          <long-description>Prepends a database prefix if one exists in configuration</long-description>
          <tag name="param" line="946" description="&lt;p&gt;the table&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="946" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="967" package="Default">
        <name>setPrefix</name>
        <full_name>\CodeIgniter\Database\BaseConnection::setPrefix()</full_name>
        <docblock line="967">
          <description>Set DB Prefix</description>
          <long-description>Set's the DB Prefix to something new without needing to reconnect</long-description>
          <tag name="param" line="967" description="&lt;p&gt;the prefix&lt;/p&gt;" type="string" variable="$prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="967" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$prefix</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="979" package="Default">
        <name>affectedRows</name>
        <full_name>\CodeIgniter\Database\BaseConnection::affectedRows()</full_name>
        <docblock line="979">
          <description>Returns the total number of rows affected by this query.</description>
          <long-description></long-description>
          <tag name="return" line="979" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="993" package="Default">
        <name>escape</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escape()</full_name>
        <docblock line="993">
          <description>"Smart" Escape String</description>
          <long-description>Escapes data based on type.
Sets boolean and null types</long-description>
          <tag name="param" line="993" description="" type="" variable="$str"/>
          <tag name="return" line="993" description="" type="mixed">
            <type>mixed</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::escape()" refers="\CodeIgniter\Database\ConnectionInterface::escape()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_escape"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1026" package="Default">
        <name>escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeString()</full_name>
        <docblock line="1026">
          <description>Escape String</description>
          <long-description></long-description>
          <tag name="param" line="1026" description="&lt;p&gt;Input string&lt;/p&gt;" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="param" line="1026" description="&lt;p&gt;Whether or not the string will be used in a LIKE condition&lt;/p&gt;" type="boolean" variable="$like">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1026" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string|array&lt;mixed,string&gt;</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$like</name>
          <default>FALSE</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1064" package="Default">
        <name>escapeLikeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::escapeLikeString()</full_name>
        <docblock line="1064">
          <description>Escape LIKE String</description>
          <long-description>Calls the individual driver for platform
specific escaping for LIKE conditions</long-description>
          <tag name="param" line="1064" description="" type="string|array&lt;mixed,string&gt;" variable="$str">
            <type>string</type>
            <type>array&lt;mixed,string&gt;</type>
          </tag>
          <tag name="return" line="1064" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1081" package="Default">
        <name>_escapeString</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_escapeString()</full_name>
        <docblock line="1081">
          <description>Platform independent string escape.</description>
          <long-description>Will likely be overridden in child classes.</long-description>
          <tag name="param" line="1081" description="" type="string" variable="$str">
            <type>string</type>
          </tag>
          <tag name="return" line="1081" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$str</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1098" package="Default">
        <name>callFunction</name>
        <full_name>\CodeIgniter\Database\BaseConnection::callFunction()</full_name>
        <docblock line="1098">
          <description>This function enables you to call PHP database functions that are not natively included
in CodeIgniter, in a platform independent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1098" description="" type="string" variable="$functionName">
            <type>string</type>
          </tag>
          <tag name="param" line="1098" description="" type="array" variable="$params">
            <type>array</type>
          </tag>
          <tag name="return" line="1098" description="" type="boolean">
            <type>boolean</type>
          </tag>
          <tag name="throws" line="1098" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Database\ConnectionInterface::callFunction()" refers="\CodeIgniter\Database\ConnectionInterface::callFunction()" link="/classes/CodeIgniter.Database.ConnectionInterface.html#method_callFunction"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$functionName</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$params</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1132" package="Default">
        <name>listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::listTables()</full_name>
        <docblock line="1132">
          <description>Returns an array of table names</description>
          <long-description></long-description>
          <tag name="param" line="1132" description="&lt;p&gt;= FALSE&lt;/p&gt;" type="string" variable="$constrain_by_prefix">
            <type>string</type>
          </tag>
          <tag name="return" line="1132" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrain_by_prefix</name>
          <default>FALSE</default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1191" package="Default">
        <name>tableExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::tableExists()</full_name>
        <docblock line="1191">
          <description>Determine if a particular table exists</description>
          <long-description></long-description>
          <tag name="param" line="1191" description="" type="string" variable="$table_name">
            <type>string</type>
          </tag>
          <tag name="return" line="1191" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table_name</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1206" package="Default">
        <name>getFieldNames</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldNames()</full_name>
        <docblock line="1206">
          <description>Fetch Field Names</description>
          <long-description></long-description>
          <tag name="param" line="1206" description="&lt;p&gt;Table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1206" description="" type="array">
            <type>array</type>
          </tag>
          <tag name="throws" line="1206" description="" type="\CodeIgniter\DatabaseException">
            <type>\CodeIgniter\DatabaseException</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1261" package="Default">
        <name>fieldExists</name>
        <full_name>\CodeIgniter\Database\BaseConnection::fieldExists()</full_name>
        <docblock line="1261">
          <description>Determine if a particular field exists</description>
          <long-description></long-description>
          <tag name="param" line="1261" description="" type="string" variable="$fieldName">
            <type>string</type>
          </tag>
          <tag name="param" line="1261" description="" type="string" variable="$tableName">
            <type>string</type>
          </tag>
          <tag name="return" line="1261" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$fieldName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$tableName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Database" line="1274" package="Default">
        <name>getFieldData</name>
        <full_name>\CodeIgniter\Database\BaseConnection::getFieldData()</full_name>
        <docblock line="1274">
          <description>Returns an object with field data</description>
          <long-description></long-description>
          <tag name="param" line="1274" description="&lt;p&gt;the table name&lt;/p&gt;" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1274" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="1291" package="Default">
        <name>error</name>
        <full_name>\CodeIgniter\Database\BaseConnection::error()</full_name>
        <docblock line="1291">
          <description>Returns the last error code and message.</description>
          <long-description>Must return an array with keys 'code' and 'message':

 return ['code' =&gt; null, 'message' =&gt; null);</long-description>
          <tag name="return" line="1291" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="CodeIgniter\Database" line="1300" package="Default">
        <name>insertID</name>
        <full_name>\CodeIgniter\Database\BaseConnection::insertID()</full_name>
        <docblock line="1300">
          <description>Insert ID</description>
          <long-description></long-description>
          <tag name="return" line="1300" description="" type="integer">
            <type>integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1311" package="Default">
        <name>_listTables</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listTables()</full_name>
        <docblock line="1311">
          <description>Generates the SQL for listing tables in a platform-dependent manner.</description>
          <long-description></long-description>
          <tag name="param" line="1311" description="" type="boolean" variable="$constrainByPrefix">
            <type>boolean</type>
          </tag>
          <tag name="return" line="1311" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$constrainByPrefix</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="CodeIgniter\Database" line="1322" package="Default">
        <name>_listColumns</name>
        <full_name>\CodeIgniter\Database\BaseConnection::_listColumns()</full_name>
        <docblock line="1322">
          <description>Generates a platform-specific query string so that the column names can be fetched.</description>
          <long-description></long-description>
          <tag name="param" line="1322" description="" type="string" variable="$table">
            <type>string</type>
          </tag>
          <tag name="return" line="1322" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$table</name>
          <default>''</default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source></source>
  </file>
  <file path="Common.php" generated-path="Common.html" hash="fb85b6d0183ffa79b02aa9130db71a89" package="CodeIgniter">
    <docblock line="0">
      <description>CodeIgniter</description>
      <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
      <tag name="package" line="0" description="CodeIgniter"/>
      <tag name="author" line="0" description="CodeIgniter Dev Team"/>
      <tag name="copyright" line="0" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
      <tag name="license" line="0" description="MIT License" link="http://opensource.org/licenses/MIT"/>
      <tag name="link" line="0" description="http://codeigniter.com" link="http://codeigniter.com"/>
      <tag name="since" line="0" description="Version 3.0.0"/>
      <tag name="filesource" line="0" description=""/>
    </docblock>
    <namespace-alias name="RequestInterface">\CodeIgniter\HTTP\RequestInterface</namespace-alias>
    <namespace-alias name="ResponseInterface">\CodeIgniter\HTTP\ResponseInterface</namespace-alias>
    <namespace-alias name="RedirectException">\CodeIgniter\HTTP\RedirectException</namespace-alias>
    <namespace-alias name="Services">\CodeIgniter\Services</namespace-alias>
    <function namespace="" line="73" package="CodeIgniter">
      <name>view</name>
      <full_name>\view()</full_name>
      <docblock line="73">
        <description>Grabs the current RenderableInterface-compatible class
and tells it to render the specified view. Simply provides
a convenience method that can be used in Controllers,
libraries, and routed closures.</description>
        <long-description>NOTE: Does not provide any escaping of the data, so that must
all be handled manually by the developer.</long-description>
        <tag name="package" line="73" description="CodeIgniter"/>
        <tag name="param" line="73" description="" type="string" variable="$name">
          <type>string</type>
        </tag>
        <tag name="param" line="73" description="" type="array" variable="$data">
          <type>array</type>
        </tag>
        <tag name="param" line="73" description="&lt;p&gt;Unused - reserved for third-party extensions.&lt;/p&gt;" type="array" variable="$options">
          <type>array</type>
        </tag>
        <tag name="return" line="73" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$name</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$data</name>
        <default>array()</default>
        <type>array</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$options</name>
        <default>array()</default>
        <type>array</type>
      </argument>
    </function>
    <function namespace="" line="112" package="CodeIgniter">
      <name>esc</name>
      <full_name>\esc()</full_name>
      <docblock line="112">
        <description>Performs simple auto-escaping of data for security reasons.</description>
        <long-description>Might consider making this more complex at a later date.

If $data is a string, then it simply escapes and returns it.
If $data is an array, then it loops over it, escaping each
'value' of the key/value pairs.

Valid context values: html, js, css, url, attr, raw, null</long-description>
        <tag name="package" line="112" description="CodeIgniter"/>
        <tag name="param" line="112" description="" type="string|array" variable="$data">
          <type>string</type>
          <type>array</type>
        </tag>
        <tag name="param" line="112" description="" type="string" variable="$context">
          <type>string</type>
        </tag>
        <tag name="param" line="112" description="" type="string" variable="$encoding">
          <type>string</type>
        </tag>
        <tag name="return" line="112" description="" type="\$data">
          <type>\$data</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$data</name>
        <default></default>
        <type>string|array</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$context</name>
        <default>'html'</default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$encoding</name>
        <default>null</default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="" line="173" package="CodeIgniter">
      <name>session</name>
      <full_name>\session()</full_name>
      <docblock line="173">
        <description>A convenience method for accessing the session instance,
or an item that has been set in the session.</description>
        <long-description>Examples:
   session()-&gt;set('foo', 'bar');
   $foo = session('bar');</long-description>
        <tag name="package" line="173" description="CodeIgniter"/>
        <tag name="param" line="173" description="" type="null" variable="$val">
          <type>null</type>
        </tag>
        <tag name="return" line="173" description="" type="\CodeIgniter\Session\Session|null|void">
          <type>\CodeIgniter\Session\Session</type>
          <type>null</type>
          <type>void</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$val</name>
        <default>null</default>
        <type>null</type>
      </argument>
    </function>
    <function namespace="" line="198" package="CodeIgniter">
      <name>timer</name>
      <full_name>\timer()</full_name>
      <docblock line="198">
        <description>A convenience method for working with the timer.</description>
        <long-description>If no parameter is passed, it will return the timer instance,
otherwise will start or stop the timer intelligently.</long-description>
        <tag name="package" line="198" description="CodeIgniter"/>
        <tag name="param" line="198" description="" type="string|null" variable="$name">
          <type>string</type>
          <type>null</type>
        </tag>
        <tag name="return" line="198" description="" type="$this|\CodeIgniter\Debug\Timer|mixed">
          <type>$this</type>
          <type>\CodeIgniter\Debug\Timer</type>
          <type>mixed</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$name</name>
        <default>null</default>
        <type>string|null</type>
      </argument>
    </function>
    <function namespace="" line="232" package="CodeIgniter">
      <name>service</name>
      <full_name>\service()</full_name>
      <docblock line="232">
        <description>Allows cleaner access to the Services Config file.</description>
        <long-description>These are equal:
 - $timer = service('timer')
 - $timer = \CodeIgniter\Services::timer();</long-description>
        <tag name="package" line="232" description="CodeIgniter"/>
        <tag name="param" line="232" description="" type="string" variable="$name">
          <type>string</type>
        </tag>
        <tag name="param" line="232" description="" type="\...$params" variable="$params">
          <type>\...$params</type>
        </tag>
        <tag name="return" line="232" description="" type="mixed">
          <type>mixed</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$name</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$params</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="252" package="CodeIgniter">
      <name>shared_service</name>
      <full_name>\shared_service()</full_name>
      <docblock line="252">
        <description>Allow cleaner access to shared services</description>
        <long-description></long-description>
        <tag name="package" line="252" description="CodeIgniter"/>
        <tag name="param" line="252" description="" type="string" variable="$name">
          <type>string</type>
        </tag>
        <tag name="param" line="252" description="" type="array|null" variable="$params">
          <type>array</type>
          <type>null</type>
        </tag>
        <tag name="return" line="252" description="" type="\type">
          <type>\type</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$name</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$params</name>
        <default></default>
        <type>array|null</type>
      </argument>
    </function>
    <function namespace="" line="286" package="CodeIgniter">
      <name>log_message</name>
      <full_name>\log_message()</full_name>
      <docblock line="286">
        <description>A convenience/compatibility method for logging events through
the Log system.</description>
        <long-description>Allowed log levels are:
 - emergency
 - alert
 - critical
 - error
 - warning
 - notice
 - info
 - debug</long-description>
        <tag name="package" line="286" description="CodeIgniter"/>
        <tag name="param" line="286" description="" type="string" variable="$level">
          <type>string</type>
        </tag>
        <tag name="param" line="286" description="" type="string" variable="$message">
          <type>string</type>
        </tag>
        <tag name="param" line="286" description="" type="array|null" variable="$context">
          <type>array</type>
          <type>null</type>
        </tag>
        <tag name="return" line="286" description="" type="mixed">
          <type>mixed</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$level</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$message</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$context</name>
        <default>array()</default>
        <type>array|null</type>
      </argument>
    </function>
    <function namespace="" line="314" package="CodeIgniter">
      <name>is_cli</name>
      <full_name>\is_cli()</full_name>
      <docblock line="314">
        <description>Is CLI?</description>
        <long-description>Test to see if a request was made from the command line.</long-description>
        <tag name="package" line="314" description="CodeIgniter"/>
        <tag name="return" line="314" description="" type="boolean">
          <type>boolean</type>
        </tag>
      </docblock>
    </function>
    <function namespace="" line="337" package="CodeIgniter">
      <name>route_to</name>
      <full_name>\route_to()</full_name>
      <docblock line="337">
        <description>Given a controller/method string and any params,
will attempt to build the relative URL to the
matching route.</description>
        <long-description>NOTE: This requires the controller/method to
have a route defined in the routes Config file.</long-description>
        <tag name="package" line="337" description="CodeIgniter"/>
        <tag name="param" line="337" description="" type="string" variable="$method">
          <type>string</type>
        </tag>
        <tag name="param" line="337" description="" type="\...$params" variable="$params">
          <type>\...$params</type>
        </tag>
        <tag name="return" line="337" description="" type="\CodeIgniter\Router\string">
          <type>\CodeIgniter\Router\string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$method</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$params</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="359" package="CodeIgniter">
      <name>remove_invisible_characters</name>
      <full_name>\remove_invisible_characters()</full_name>
      <docblock line="359">
        <description>Remove Invisible Characters</description>
        <long-description>This prevents sandwiching null characters
between ascii characters, like Java\0script.</long-description>
        <tag name="package" line="359" description="CodeIgniter"/>
        <tag name="param" line="359" description="" type="string" variable="$str">
          <type>string</type>
        </tag>
        <tag name="param" line="359" description="" type="boolean" variable="$url_encoded">
          <type>boolean</type>
        </tag>
        <tag name="return" line="359" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$str</name>
        <default></default>
        <type/>
      </argument>
      <argument line="0" by_reference="false">
        <name>$url_encoded</name>
        <default>TRUE</default>
        <type/>
      </argument>
    </function>
    <function namespace="" line="395" package="CodeIgniter">
      <name>helper</name>
      <full_name>\helper()</full_name>
      <docblock line="395">
        <description>Loads a helper file into memory. Supports namespaced helpers,
both in and out of the 'helpers' directory of a namespaced directory.</description>
        <long-description></long-description>
        <tag name="package" line="395" description="CodeIgniter"/>
        <tag name="param" line="395" description="" type="string" variable="$filename">
          <type>string</type>
        </tag>
        <tag name="return" line="395" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$filename</name>
        <default></default>
        <type>string</type>
      </argument>
    </function>
    <function namespace="" line="424" package="CodeIgniter">
      <name>csrf_token</name>
      <full_name>\csrf_token()</full_name>
      <docblock line="424">
        <description>Returns the CSRF token name.</description>
        <long-description>Can be used in Views when building hidden inputs manually,
or used in javascript vars when using APIs.</long-description>
        <tag name="package" line="424" description="CodeIgniter"/>
        <tag name="return" line="424" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
    </function>
    <function namespace="" line="443" package="CodeIgniter">
      <name>csrf_hash</name>
      <full_name>\csrf_hash()</full_name>
      <docblock line="443">
        <description>Returns the current hash value for the CSRF protection.</description>
        <long-description>Can be used in Views when building hidden inputs manually,
or used in javascript vars for API usage.</long-description>
        <tag name="package" line="443" description="CodeIgniter"/>
        <tag name="return" line="443" description="" type="string">
          <type>string</type>
        </tag>
      </docblock>
    </function>
    <function namespace="" line="468" package="CodeIgniter">
      <name>force_https</name>
      <full_name>\force_https()</full_name>
      <docblock line="468">
        <description>Used to force a page to be accessed in via HTTPS.</description>
        <long-description>Uses a standard redirect, plus will set the HSTS header
for modern browsers that support, which gives best
protection against man-in-the-middle attacks.</long-description>
        <tag name="package" line="468" description="CodeIgniter"/>
        <tag name="see" line="468" description="" link="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security"/>
        <tag name="param" line="468" description="&lt;p&gt;How long should the SSL header be set for? (in seconds)&#10;Defaults to 1 year.&lt;/p&gt;" type="integer" variable="$duration">
          <type>integer</type>
        </tag>
        <tag name="param" line="468" description="" type="\CodeIgniter\HTTP\RequestInterface" variable="$request">
          <type>\CodeIgniter\HTTP\RequestInterface</type>
        </tag>
        <tag name="param" line="468" description="" type="\CodeIgniter\HTTP\ResponseInterface" variable="$response">
          <type>\CodeIgniter\HTTP\ResponseInterface</type>
        </tag>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$duration</name>
        <default>31536000</default>
        <type>integer</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$request</name>
        <default>null</default>
        <type>\CodeIgniter\HTTP\RequestInterface</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$response</name>
        <default>null</default>
        <type>\CodeIgniter\HTTP\ResponseInterface</type>
      </argument>
    </function>
    <function namespace="" line="519" package="CodeIgniter">
      <name>redirect</name>
      <full_name>\redirect()</full_name>
      <docblock line="519">
        <description>Convenience method that works with the current global $request and
$router instances to redirect using named/reverse-routed routes
to determine the URL to go to. If nothing is found, will treat
as a traditional redirect and pass the string in, letting
$response-&gt;redirect() determine the correct method and code.</description>
        <long-description>If more control is needed, you must use $response-&gt;redirect explicitly.</long-description>
        <tag name="package" line="519" description="CodeIgniter"/>
        <tag name="param" line="519" description="" type="string" variable="$uri">
          <type>string</type>
        </tag>
        <tag name="param" line="519" description="" type="" variable="$params"/>
      </docblock>
      <argument line="0" by_reference="false">
        <name>$uri</name>
        <default></default>
        <type>string</type>
      </argument>
      <argument line="0" by_reference="false">
        <name>$params</name>
        <default></default>
        <type/>
      </argument>
    </function>
    <source>eJy9WntzGzeS/5v6FFiXLiRzfEjr3WxWOdmhJSrinSxpScq+nOVSgUOQRDScmcXMUNad89331w1gZviQk1T5xJJEDQbobvS7G/iP18ki2et+++2e+FacxFM1mEc6UwaPNNKLRJyoSKRxbgIlZJKEOpCZjiMxVSsVxslSRZmYGblUD7G5F7PYiOvza7d8vNCpCOIoo0n416hQyVRNRR5NlRHZQom3g7G40IGKUiUaeGi6pSdx8mj0fJGJRtAUfz44/Ito09d3LfHG6EynC0wJ8+VESzGI0kxneaZEPBNjFSyiOIznjw7StTJLnaZEM0hYKKMmj2JuJKiatkC64mXBQpq5aoksFjJ6FIkyKRbEk0zqSEdzIbGPhEDS5Iz2lcaz7EEacCWaCpmmcaAlQIppHOTEFcummQ5VKhq01Rcjt+JFk/FMlQwJoI6YE/6teNDZIs4zcCvNjA4ITAuTgjCfEiX+daiX2iGh5cyslOABdJ5iK0RwSyzjqZ7Rt+L9JfkkBPNaYqoJ+gRca4mUBlkGLdpNF0JMVcjEAYjGBnjTJY08jRAlxNzMsSulkYdFvFzfj2aqZrmJgFjxsmkM9jHeX1SQ0QitmMVhGD/QHqEzU01bS48KVQKjJ/FK8basZkRxpgPLf5ZIUkravUoXMgzFRDn2AbmOCBqN+p0ZIiPNoA9ahiKJDePd3HHH03HeF6Ors/H73rAvBiNxPbx6Nzjtn4oXvRGeX7TE+8H4/OpmLDBj2Lsc/yyuzkTv8mfxX4PL05bo//f1sD8aiashQRu8vb4Y9DE8uDy5uDkdXP4k3mDp5RWMYgBrANzxFeN00Ab9EcF72x+enOOx92ZwMRj/3CJYZ4PxJUE+uxqKnrjuDceDk5uL3lBc3wyvr0Z9EHEKyJeDy7MhEPXf9i/HHSDGmOi/w4MYnfcuLggbm/4NtjEkQsXJ1fXPw8FP52NxfnVx2sfgmz7o67256Fts2N3JRW/wtiVOe297P/V51RUA8SZppiVTvD/v0yhh7eHnZDy4uqT9nFxdjod4bGG7w3Gx+v1g1G+J3nAwIs6cDa/e8k6Ju1h0xXCw9LJvARHn1wWEKfR8M+oXMMVpv3cBcJDW5aZAvZB/TGRwL+eqtu4RxY8yh+2Z6rA4VSv4HLnk94Vu1r6C/xKNRZYlR93uJNBZJ5DdJuNwllpzL8k/W/fcic28696mXWhPreJc3dLo3q8LsAdt99AJYkt+CjNRtXcwZrKhl52DzgGPsxNjHHjs7u3BvVSDxe35eHx9O1T/zOGxBvCrZiYD9cNT09IE9qV+e95UGziH/qdAJWSS2/NGyqywu/SHvTKCLZeg/CyP2G2mTp4jxCoD467Er/aDniqRZzrU2SOcI+Q6TTflL8SmAmCxmsfmcRcmMKbbbX+FD8AIvzcgilYq0gqSqWD7Soj29Ew0xJ/gnC3gO/UJYSFt1FdaPdSbzb3/26sRa2vY+09GTlL2iUFuDEX0oaIwLidhKcw2VCkBgzEmghBRkZeyh0ZASYVmZ29UEf/TRAV6puGZCWVHjPQyCRF/TbyCgNxyigcFE6yssFhmIpARefc8Zc9OvMoMgggUuMUrQz0x0sDN24BlEDcxMwjjNEd07dAcngeH2z8SpzH4jcjhsXMmoNJAJhSTXECYykwicsWWgGWeZpZGG2cWQBMCxVJGOYYeBXINXmWzJdhagRNKhrRJUBQG9P0IKVR1XBojH4XYJ3y7xuPExqmbiHffpnQBOoN/KQdDPDTTNlZAudUn5F9k0ZUN/2hUhoDssNNQd6/mtYBF0agS1nJomRpxLD58LEY8HTTY3KtBYazGMJaVNGsW+w6A+Y/YtzoAs6pZ5LViBKC89h8d+cFGE1aOSalcqVNLxEyGKbxHrUZKzNTc3avHQoX9zHqrILIpvvmmePhQzvgojo+PRWZyhR3wFtYQNSZxHDZ3rSPstRzeLGvset2k978S3Y7dxR7br7CGJjX2rULVjYTBETM2Pu1Xdk3DCcLjwX8eEaH5de/Xr+Z+nvQKsIUNp4DkGuq2RDZMdguLybO4XTUZVpgZJ5RwG+RrDUoAr4viLYdImHeqySMs5T2t42xuGRtK9gjsJwFTkyKUFHABUZWKPJg5pcQK6dS5RSYXka9JrTdhgmDb7ANYEuSJOtsAIqvVJYAwjhPkgggfeGqVzkDJYMHL6ysZ5qruvQMUsMsjIpHaVAzunQz11NZCnzLBU9IjsciWYUv8AmEGKf7kBk8yy0xLQB1aIsqRhO/0F58r9rjDm9jPvkP39AQ41HjqHMCaXygAV90Cdu/V1YOGddRpE2RkHtgxke1cAWmSTu+YWru2WZgYtILYKOw4SiixD/aJ41fim31mEM20U2t2ANiYBn4oiWAzgwU4W3M47U43kVYIx4QMidYD2VYJiSYh/l77ECAewGfELMrJrR5ZneZcyU3ObJ2bh1OKAQEcP9wwmcISoTBwcaCYqwR7QBubHjs0TiSrZZI9lpSIz58rXD4uHYTjSFVQbv8eEkxXR57nDkRLfPCCqv+S0l9oHH1B5+iLtA4Oq4IgW5j4QUSg9HYQrUh9e2bOlW2RkjXq7o3njKfXBdBpp97coG1tS4y0KmUX2/HKAjwHxT2aVEi4puD0v7Ci3smDGSwva2xqB0vfTqIQwxv7H7jW274d89+NQpGdNlj1FFjjl7dfObxOu7bcvBPKV3fKO3wycn2K7Rt+ubcrZSI3LIOAFrCTRfalXGMkogI4UDZromnk/dTSJjkLmOZEURtIZb5b4VaWDq7/SZKrRsFOT/i4GY0mx7pGfRbHpGgTaVgp7KR9jJIpurmVt1WnRQ5FkNVv+anb9XqAofjvz7Ts8yrW001H5tERSFKF0l/BQIcM2fZ8iFGIasSK19ueBatLx+JFfzdCEY5q9AO9/iheHzH4TQ0B3dFMz2/LRKdg1zPpTaaXyvxeraHenu89sfh5dRFAo1iwoBTFZ2rEIPGn5hoC6IOG6Nymi4Wb+oYX5kGnys7GK5NxXyaLk7VFVEPoOTxQ+PhEHv3ZqopPptdjGrnpz2sac6om+fx2TOA/L/UntaUpjHktFV7Xl31L2vEOgdql1odU/DvB2NYanlwoCTtKHmq/gvF9cRGsC2xyU7YcUTEFLC3nPI9fYkZsahh1+BArQyUj5b2R7/9Va17wknunpZzHCxQ4ghqK6p+orZyfaYtCBA5jodpbE253NQ8qgvqdlZn7dDqdfR5ItzRtpyp58tbrqhJK6YH6EZWnsJ66LUcl9TENl7jWbDDN1jtJni4abn3LFkRW4Rwh5SYZXaOC7bnUgCm/+4I27FAGt123yDYBfnfN7FxAKZpCLNljorakskbfbwnn+dlKn6fKsTCe3y3BMjnfYmzVkXd9T6ba62K3DgBzrmYwNaPejonzua1ryB4v4rlIH1MEv9IKWWSQDZaKkJoaKZlkYYyKjxmi4NEPyFCZzD8E1PkMbBjn2cbExj88SI66/tF28P2Tjmax/39KTvspY2Wadr1wjHpCXdZqpd+25QrnG2uYW5v4ij5JWXeUfZKueE91pskjzjcyBbG2xAPioIy4USZDVB+pUNYhcDIGwdilY8yGhOY25DoYWL3QqKl8/8x1OOmgY0aspoWcBiJAm8ymgZLK3HkKvKYoXlyWRxQJ6hR3XFTqX74bDK8u6eyAM3iaACj1sr4KLUkuwa56XBB7WxLdcO85arqhps3VffCyoNqv8N3w7C35upbf/7rT6VkADd/Y2eqs/DbgZ2mrIKUMQm1NuLThAeLgxeB1Gf9IFuQcFULDDEHB2IY7lCUVS4ladWbc0RsMfkm9jlBHarvnhw81tDZ12lLRWPd0jevz67tR73rAHbI6kUmF6VTNAHraqI/Gp4PLevPZWMUd3Lss3uxNa3gw2yd2DeCuc3POHPmMls51bajkRZxsogSlxIwYO8l1OLVnqSqEv1wpcTO8cMkJr0A5HywIHJOx2T7m024SijbKNcq3yMmsF1vIFbUWGIxnprc5HnwiB9ryaQT0j+UmayY5JFzmdncX2PO6sY5uLSweFR1kzoYd7WsNXB5qrKUlbh61NlfKpIrJaOyC/2x6pZbxSt3paKVTOry4o/sAMgBz0g1VG/JMMfAzxUkxs5KqUhFkXFhNoXwP2ioOB5tgbQVK6+yBqmuZBlpXXrZgv/dK/KdcyduDFLEzyTY1oVZKzo940/YCrz0h3Kc33NhPqQO5n5vwjlshivor4+FN3xc9ETg31WkSykc6/SGB226TlTJiDMn10et/uSehuHVEsYF8k2hMVSAOD5otuyoAFE3nbt778OuXTTbfRWz0/wIgSvZMTuy7g783fblUobYMRpuEfvhInaLuvx18OGh/PwnU7GO3/gNhxmrh93pw0D74viUOD/H7Z/z+Bb9//SK4Q4D7u2zvhHb4XfvloY9QT0H4cPsJWPHne/y+we8JfvsYODy7/fS3s4//3h1ZyFu0ATj9+zeCPo3L04uMQjBUcH5nFLAhtd3C3RJ1atuysNuHHPfyyIfTWg2JBLS7UYxWzBdLnql8WKgw2WpTXMRySt1++5JdJDUHYqS2y9g8dsQoT+geB6onZOdpgt1P3WTn+idxtiB/S3pFd2lc996hS+vCnj3TQW9MobYCp3jzpFcmenY2IHZbosXZ2Fzd7HY3nGuIbW+cjoVxIEGLzXCKTgNWJTHM2IOCoO88IzmO20KxUBY/T3SOy5lFVgVXDGYdC4efsiY6BT/DojUU5453JR1/Eq7nQRDK9oW7iyN42Gnbc+hSkJoZwtm92myWDt2REKnAyWh4JngSC922uE7Wj5mpfY90mVJ3zhlIbgs9ndKRUZTkWVoc/xb9VL/0Fzhz68rFShoHJOd+LJKs331AW27F52uUtFK+UOTdnFf3kmQj8tpp7Ve0zzEBuMQun8mYmeqFTBdf4L+/W0DT7DGZO892okFhkykG+/8tGkJLiW9OVcEfEgzRXsilOPes2q0fbFA+0BKl+RYe1k1ov5qrjDZ+zjCfSVDYeqDu6KLQZvZzk9oLfDwDjjGhaE25s3LtG8vLlZaCbvGMOn6VPZ2Fv5WGzmCtF22JJMxT1/VVXNuK89F4BJ9IrobXkhiWiKTgysTEDyhbU1uzptbJ+4p3jnydjincfYxST4ScS2qckeTbOmoDSXsJlaDT6iyTwX3V6qi44n0fdbsq6jzoe52AWMl3q+ipS9u6G/HFzLuxkVFKRNyNnLw2YwLCktif5sbe0zyPH1BqQyXTBR8WctNzdOG2S0wkLmDHr0VDU8eQ7kGmTX9Ysv05VTOZhxk3zQ7Fo5KuJ++wb17JovsHPLI+aeNCFs2yQ5vaXdGLxvrOjsXLw7++/O7g4KD1NFbXOm99CeV6e90duNBIw0NpNqsAqzdFeGzdpLZAWCwWRoGxCsQObhkm55gORfuVTlngqrHZlC+iJnK1wWztjM2d91KzhiPplDs9ThOQqKlIgZmuuVNdODi1FyjkTMGNpPK+6MbwDavCat2xV903ggvStg+ZKrujIszjbpS9FOTTmoJ+sWU8/+DG+UBvFCzUUiFDs17ih8qi263LfDfDwdFRYBRw4N+RPT/j3IPBzQtwXAmUoz2+b0mOkmldf3mN9AELBNjVm6RxSLU0oKeep3RdUIoX3Re24xXZbERQ1rEG5x85apVNzGdGzumsm/x4rShrRjBPAFrzUbVCk5gv5zwMabCLaBcuou1dBB2CLuWnNjzncb1TmBCzvgLK+0iqbDS/hJyzZwsBHv2G/z954iIeHRCm5fGgj+LzMJ6gXivsFf6fwdgGQHkOmNpbgRaly4co/Zp2XYeg7a7u2caB7VDTDfqMrnxHipG6Zs08xt+OPZbMuOjWFMzziAyOIk1GesggJEWlzEh711yGJQlUGNAppjVEm5rrCBW5yjJfcO8SVnODpiA2DM/xisC6dmp5f8lddLKlMmiNlGLv8BjnfL+QFXkHMhTTdJ1VP30aSgfs0J7qi0pbaL0d4DbgyxAs23H+8UecZtkOErsaQpuulVthx0+1hjbJKYsX76doXum9vmBHX9V6/gWQOFib</source>
  </file>
  <file path="Test/ReflectionHelper.php" generated-path="Test.ReflectionHelper.html" hash="a21a2d381eceecf04cd59d69376c3309" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <namespace-alias name="ReflectionMethod">\ReflectionMethod</namespace-alias>
    <namespace-alias name="ReflectionObject">\ReflectionObject</namespace-alias>
    <namespace-alias name="ReflectionClass">\ReflectionClass</namespace-alias>
    <trait namespace="CodeIgniter\Test" line="46" package="Default">
      <name>ReflectionHelper</name>
      <full_name>\CodeIgniter\Test\ReflectionHelper</full_name>
      <docblock line="46">
        <description>Testing helper.</description>
        <long-description></long-description>
        <tag name="package" line="46" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="55" package="Default">
        <name>getPrivateMethodInvoker</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateMethodInvoker()</full_name>
        <docblock line="55">
          <description>Find a private method invoker.</description>
          <long-description></long-description>
          <tag name="param" line="55" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="55" description="&lt;p&gt;method name&lt;/p&gt;" type="string" variable="$method">
            <type>string</type>
          </tag>
          <tag name="return" line="55" description="" type="\Closure">
            <type>\Closure</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$method</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="CodeIgniter\Test" line="74" package="Default">
        <name>getAccessibleRefProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getAccessibleRefProperty()</full_name>
        <docblock line="74">
          <description>Find an accessible property.</description>
          <long-description></long-description>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$obj">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="param" line="74" description="" type="\CodeIgniter\Test\type" variable="$property">
            <type>\CodeIgniter\Test\type</type>
          </tag>
          <tag name="return" line="74" description="" type="\CodeIgniter\Test\type">
            <type>\CodeIgniter\Test\type</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>\CodeIgniter\Test\type</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="98" package="Default">
        <name>setPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::setPrivateProperty()</full_name>
        <docblock line="98">
          <description>Set a private property.</description>
          <long-description></long-description>
          <tag name="param" line="98" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="param" line="98" description="&lt;p&gt;value&lt;/p&gt;" type="mixed" variable="$value">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$value</name>
          <default></default>
          <type>mixed</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Test" line="111" package="Default">
        <name>getPrivateProperty</name>
        <full_name>\CodeIgniter\Test\ReflectionHelper::getPrivateProperty()</full_name>
        <docblock line="111">
          <description>Retrieve a private property.</description>
          <long-description></long-description>
          <tag name="param" line="111" description="&lt;p&gt;object or class name&lt;/p&gt;" type="object|string" variable="$obj">
            <type>object</type>
            <type>string</type>
          </tag>
          <tag name="param" line="111" description="&lt;p&gt;property name&lt;/p&gt;" type="string" variable="$property">
            <type>string</type>
          </tag>
          <tag name="return" line="111" description="value" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$obj</name>
          <default></default>
          <type>object|string</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$property</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </trait>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJzNVttu20YQfaa+YmAYiBQwUnpBH+w6CS3RFlGJFCjaroEABkWuxK0pLrG7tGu0+ffOLEndbDcpkIcKtqSdnTkzc+ZC/fqxzEoo4jVTZZwwGIqUeauCayY/R0zp005n8PZtB97u3uCRJE4BomQFKFFJNI3LMudJrLkoIGUPLBflmhUalhLRH4W8h6WQMBvPGvMo4woSUWhSwq+S5SxWLIWqSJkEnTGYehFMeMIKxaCLh15jOhTlk+SrTEM36cGP73/4Gd7Rxy82nEuuucpQJa/WCx6DVyjNdaUZiCVELMkKkYvVU4M0Y3LNlaKYMYSMSbZ4gpWMMarUxtCZMUuyWK6YDVpAXDxByaRCA7HQMS94sYIY8ygJkpQ15aXEUj/GElkpUoiVEgmPERJSkVTESk3TkudMQZdSPZo3Fkc94ydlcU6AvDBMtLfwyHUmKo1sKS15QjA2KiV5lVIk7XXO17xxQuaGLEV4CF0pTIUCtmEtUr6kT2byK6tFjuTZkHJCXyBrNigSmhrYlM0Ai6hYboJDEI4JmKS3MRo1clQSubqhS5HkMRPr/Xy4iWpZyQIdM2OWCqTP+P2DJZokZLEUeS4eKUfsmZRTaupk00pI9EI8MJNW3RmF0Dyp+TcVKbeVbq5UFuc5LFhDHzrnBaGRtM1MUhhKYz/wOIdSSOP3MON+G8fYhXlwEd04oQveHGZhcO2N3BEcOXM8H9lw40Xj4CoC1AgdP7qF4AIc/xZ+8/yRDe7vs9CdzyEICc2bziaei2LPH06uRp5/Cedo6gc4FB5OA+JGgfHZoHnunPCmbjgc49E59yZedGsT1oUX+YR8EYTgwMwJI294NXFCmF2Fs2DuYhAjRPY9/yJER+7U9aM+OkYZuNd4gPnYmUzImxn9K0wjpEBhGMxuQ+9yHME4mIxcFJ67GJ9zPnFrb5jdcOJ4UxtGztS5dI1VgEAmSdKsw4SbsUtS8urg3zDyAp/yGQZ+FOLRxnTDaGN9481dG5zQmxMzF2EwNZkSu2gUGBw09d0aiJjfLxCq0Plq7m4wYeQ6E4TDavmHBW2L/AkX5X28Ytb+RoRPcYWzJ3fFMGIPuHPitbnf9Kb1HfYXdDOty5PBYJFw3U/iQc/4aCbVai5pP9fruS/katDcqgF2j7WzXBvT4r61SzAHXufQT0QdvsIxYdY1DjPN0E/99/33Rm6WmPGBx0Gng+sFQrbMmVlOU4akpKcH0sCM9qF0mOOm3D5x6PlD856xHIe3b9C1jHGjbE3G5q7zV8ciI4s6ndPGhVLyB9y4uNnIP072g7gnEFIxb1hGfDDhEqdI/qZ1h66O8Qj4qqU0/gnFZB6Qu1aNevM6bpw0H1tlyTQuNvg8zIWqpBEOOpbZsgli4H5OcPUVJhNYMT2rg6458+qQuxST3frodSzM1TqWbHnXuDuDgj0+Y/zA7HTf6N0HxbSTJAwX4iJnXS0rVusQAWfQxWD0U8kMSg/Ozs7gTc3Jmx58rGk6gaLKcyyXZTV5blLp9ughA20MW789oOitY3ycKnRDBnfo6o7OXRNAi7UXbF09h5QaSDIw+l/w7UvnsPwFxJvksBVwDKR+el58StEk81zYGu0Vkq7aIjb99UIVt7xiUWYNTht4i9sUki+hy9VdzW3NNt5YNUtEQd1/hzUOdvQNC/jPchzkr5uaIdu1bDujjQwttubvPpi2bHPYRH96aPVKR3X2C9pqHxRtzvTOyL5er5eH9T+P6ybTzZdDgzX/E38ObAwe4rxi9M18+fcxVpsxfq30dgO4O8s75OOPq+XJyTf30cuVuCYHrW7t7YDzkCEp+DP9/0J80yY189/A8+qrPH8/fl9qYTMZW5prer90/gEbOjjp</source>
  </file>
  <file path="Router/RouterInterface.php" generated-path="Router.RouterInterface.html" hash="050cc0a9d94a13be17eef640b3a01b65" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="CodeIgniter\Router" line="42" package="Default">
      <name>RouterInterface</name>
      <full_name>\CodeIgniter\Router\RouterInterface</full_name>
      <docblock line="42">
        <description>Expected behaviour of a Router.</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="50" package="Default">
        <name>__construct</name>
        <full_name>\CodeIgniter\Router\RouterInterface::__construct()</full_name>
        <docblock line="50">
          <description>Stores a reference to the RouteCollection object.</description>
          <long-description></long-description>
          <tag name="param" line="50" description="" type="\CodeIgniter\Router\RouteCollectionInterface" variable="$routes">
            <type>\CodeIgniter\Router\RouteCollectionInterface</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$routes</name>
          <default></default>
          <type>\CodeIgniter\Router\RouteCollectionInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="62" package="Default">
        <name>handle</name>
        <full_name>\CodeIgniter\Router\RouterInterface::handle()</full_name>
        <docblock line="62">
          <description>Scans the URI and attempts to match the current URI to the
one of the defined routes in the RouteCollection.</description>
          <long-description></long-description>
          <tag name="param" line="62" description="" type="null" variable="$uri">
            <type>null</type>
          </tag>
          <tag name="return" line="62" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$uri</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="71" package="Default">
        <name>controllerName</name>
        <full_name>\CodeIgniter\Router\RouterInterface::controllerName()</full_name>
        <docblock line="71">
          <description>Returns the name of the matched controller.</description>
          <long-description></long-description>
          <tag name="return" line="71" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="81" package="Default">
        <name>methodName</name>
        <full_name>\CodeIgniter\Router\RouterInterface::methodName()</full_name>
        <docblock line="81">
          <description>Returns the name of the method to run in the
chosen container.</description>
          <long-description></long-description>
          <tag name="return" line="81" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="92" package="Default">
        <name>params</name>
        <full_name>\CodeIgniter\Router\RouterInterface::params()</full_name>
        <docblock line="92">
          <description>Returns the binds that have been matched and collected
during the parsing process as an array, ready to send to
call_user_func_array().</description>
          <long-description></long-description>
          <tag name="return" line="92" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Router" line="106" package="Default">
        <name>setIndexPage</name>
        <full_name>\CodeIgniter\Router\RouterInterface::setIndexPage()</full_name>
        <docblock line="106">
          <description>Sets the value that should be used to match the index.php file. Defaults
to index.php but this allows you to modify it in case your are using
something like mod_rewrite to remove the page. This allows you to set
it a blank.</description>
          <long-description></long-description>
          <tag name="param" line="106" description="" type="" variable="$page"/>
          <tag name="return" line="106" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$page</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>eJy9Vttu20YQfZa+YmDkQQ4UKb2gD0mLlpboiKhEChQV10ABY0WuxK0pLrG7tGMU/feeWUq+BUVhIIkgQNrLnJlzZnd2fv61KRuqxV7aRuSSJrqQ0a5WTpo/U93i532/P379uk+vH69hyDNBTbqRNVndGhiLpqlULpzSNRXyRla62cva0dYA/1aba9pqQ8vZ8mCelcpSrmvHm/DXyEoKKwtq60IacqWkRZTRXOWytpIGGJweTCe6uTNqVzoa5Kf0/dvvfqQ3/PPTkM6McsqW2FK1+40SFNXWKQcupLeUybysdaV3dwekpTR7ZS3HjBBKaeTmjnZGIKpiiNClN8tLYXZySE6TqO+okcbCQG+cULWqdyTAo2FI3uyYl9VbdysMVKkLEtbqXAlAUqHzllXpZNqqSloaMNWT1cHi5NT7KaSoGFDVXonjKt0qVyIzUMs6o3KGGWJTXrUFR3JcrtReHZywuRfLMh6gWwsqHPCQ9rpQW/6Vnl/TbiqIN6RCMfoGqg3J8qTPwZDZjJFEKysfHEAUCHjSDzH6beyoYXHdQS7LM7el3j/lo3xU29bUcCy9WaEhn/f7l8wdz7DFVleVvmWOODOFYmr23f1RgtAbfSM9re5k1NqpvNPfZ6R5yPRhyZaiqmgjD/LBuaoZjWePzAyHYR3OgxIVNdp4v88Zj45xzEJaJefZRZCGFK1omSYfo2k4pZNghfHJkC6ibJasM8KONIizS0rOKYgv6fcong4p/GOZhqsVJSmjRYvlPAoxHcWT+XoaxR/oDKZxgksR4TYAN0u8zwNaFK4YbxGmkxmGwVk0j7LLIWOdR1nMyOdJSgEtgzSLJut5kNJynS6TVYggpkCOo/g8haNwEcbZCI4xR+FHDGg1C+Zz9uav/ho0Ug6UJsnyMo0+zDKaJfNpiMmzEPEFZ/Ow8wZ2k3kQLYY0DRbBh9BbJQDyJHlnFyZdzEKeZa8BvpMsSmLmM0niLMVwCLppdm99Ea3CIQVptGJlztNk4ZmyujBKPA5M47ADYuWfJghbeLxehfeYNA2DOeCQrfh5Qo9J/g2l8lrsZO9pRaTfRIu7Zx5P01TeoOaIvV+/P5u9L1C/aFA617wbjze5cqNcjE+9j8NN7R0WuT535XmkzW58WLVjnJ7eo+J6MK2vj3Y5OKiOwyjXXfgW10T2PuIy8x36YfR29NbP+yLmfWA4vn8vwk8Nbi8u1UaW4kZhAxMQ1L0rI79XocyaLb883Wx0HPf/7vd7DNQD0sppVDuYGrlFgUYUx5rgraBUJX0hREXmijFiK2+JVOHxeb7t3gu9Mrxiee+43/PVL0ctqju0qytUGtTBNneD/4M4fc8Bj998gc9j5rngugmm6zTqnhLn5L5xvpjuhctLv5q3xvAryrs6aby5ruWxUhVyq2oko4v2+Ko8Y/WZcHWLUviqNephwUiHWk179UkW/6FbiUArOeAXBNWazekXD/V1REp9RJ1M3MocKXt5QJlbDMMczehFNB7sYqAOvnHwErXEv4amrQ/p8gZ5qa3sgkPz8VJOHew34rNRdcH/hMORwNu8kQj8mBU+zHl38rpoqWj9eWFLnD7L/xujc2lx9fGtSRgj0KsYKYo7VgY6sEKdLHi0r9DYmCvmeuW3Dk5fJo4/8/YrCbOSrlPlRlSt7FSxaNUqLpDckhVPrzS0k59G3J5zfR3hJdmKtnK+VvHOh3V0aV2HI7hBsnSnWw/lWztC/4XTk6Ox5gVD3HO1LK4HsppPBEtdqWvJNldG3uIJ8iXWyD33VF1Gdggi+9yNlc4jwY+gTSXq68+qyCs2flEmABoxvyUMB978iybln/6/OxTcnw==</source>
  </file>
  <file path="Debug/Toolbar/Collectors/Files.php" generated-path="Debug.Toolbar.Collectors.Files.html" hash="417d748458383a5ae1ce560dd48f0f60" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="42" package="Default">
      <extends>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</extends>
      <name>Files</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files</full_name>
      <docblock line="42">
        <description>Files collector</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
        <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTimeline"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files::hasTabContent</full_name>
        <default>true</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_hasTabContent"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files::title</full_name>
        <default>'Files'</default>
        <docblock line="66">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="66" description="" type="string" variable="">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#property_title"/>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="75" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files::getTitleDetails()</full_name>
        <docblock line="75">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="75" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_getTitleDetails"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="88" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\Files::display()</full_name>
        <docblock line="88">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="88" description="" type="string">
            <type>string</type>
          </tag>
          <tag name="inherited_from" description="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" refers="\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()" link="/classes/CodeIgniter.Debug.Toolbar.Collectors.BaseCollector.html#method_display"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
        <inherited_from>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</inherited_from>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Iterator.php" generated-path="Debug.Iterator.html" hash="f46dcf03ffcc5ba93a615258c637d4d3" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug" line="43" package="Default">
      <extends/>
      <name>Iterator</name>
      <full_name>\CodeIgniter\Debug\Iterator</full_name>
      <docblock line="43">
        <description>Iterator for debugging.</description>
        <long-description></long-description>
        <tag name="package" line="43" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="51" package="Default">
        <name>$tests</name>
        <full_name>\CodeIgniter\Debug\Iterator::tests</full_name>
        <default>array()</default>
        <docblock line="51">
          <description>Stores the tests that we are to run.</description>
          <long-description></long-description>
          <tag name="var" line="51" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug" line="58" package="Default">
        <name>$results</name>
        <full_name>\CodeIgniter\Debug\Iterator::results</full_name>
        <default>array()</default>
        <docblock line="58">
          <description>Stores the results of each of the tests.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="73" package="Default">
        <name>add</name>
        <full_name>\CodeIgniter\Debug\Iterator::add()</full_name>
        <docblock line="73">
          <description>Adds a test to run.</description>
          <long-description>Tests are simply closures that the user can define any sequence of
things to happen during the test.</long-description>
          <tag name="param" line="73" description="" type="" variable="$name"/>
          <tag name="param" line="73" description="" type="\Closure" variable="$closure">
            <type>\Closure</type>
          </tag>
          <tag name="return" line="73" description="" type="\CodeIgniter\Debug\Iterator">
            <type>\CodeIgniter\Debug\Iterator</type>
          </tag>
          <tag name="fluent" description="This method is part of a fluent interface and will return the same instance"/>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$closure</name>
          <default></default>
          <type>\Closure</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="94" package="Default">
        <name>run</name>
        <full_name>\CodeIgniter\Debug\Iterator::run()</full_name>
        <docblock line="94">
          <description>Runs through all of the tests that have been added, recording
time to execute the desired number of iterations, and the approximate
memory usage used during those iterations.</description>
          <long-description></long-description>
          <tag name="param" line="94" description="" type="integer" variable="$iterations">
            <type>integer</type>
          </tag>
          <tag name="param" line="94" description="" type="boolean" variable="$output">
            <type>boolean</type>
          </tag>
          <tag name="return" line="94" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$iterations</name>
          <default>1000</default>
          <type>integer</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$output</name>
          <default>true</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug" line="133" package="Default">
        <name>getReport</name>
        <full_name>\CodeIgniter\Debug\Iterator::getReport()</full_name>
        <docblock line="133">
          <description>Get results.</description>
          <long-description></long-description>
          <tag name="return" line="133" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="View/Exception/ExceptionInterface.php" generated-path="View.Exception.ExceptionInterface.html" hash="ad183a264f6ab3c227ceac0ffc1889d9" package="Default">
    <docblock line="0">
      <description>Zend Framework (http://framework.zend.com/)</description>
      <long-description></long-description>
      <tag name="link" line="0" description="for the canonical source repository" link="http://github.com/zendframework/zf2"/>
      <tag name="copyright" line="0" description="Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag name="license" line="0" description="New BSD License" link="http://framework.zend.com/license/new-bsd"/>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <interface namespace="Zend\Escaper\Exception" line="12" package="Default">
      <name>ExceptionInterface</name>
      <full_name>\Zend\Escaper\Exception\ExceptionInterface</full_name>
      <docblock line="12">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="12" description="Default"/>
      </docblock>
    </interface>
    <parse_markers>
      <error line="12" code="PPC:ERR-50009">No summary for interface \Zend\Escaper\Exception\ExceptionInterface</error>
    </parse_markers>
    <source>eJxtj01rwzAMhu/+FTo2gcZZoJdtsI+2g8LYpdtl9JK6SmyaSsZ28dqx/74kTbPLdBIvzyse3T9YbYVMUwEpfCLt4MWVB4zs9jDRIdhbKatrkp1bIFN8kEmLd43HxtAe+hng2gR93PZQR49dea4KqNhB0AiqJCajygY8H51CcGjZm8Du1F9VbE/O1DrAfNwmKoEiz2fTIr+ZXVTfUWnihmuDHj7WT7AilY3aMcZROBlkFZLHP9l/PhsYSRinW7+DN4zwvF7A6yVv70ghqK15W7bincdm6VVp0W2WXwptMEx3QhgK6KoOGdPVNRLf4kf8Atqhfm8=</source>
  </file>
  <file path="Hooks/Hooks.php" generated-path="Hooks.Hooks.html" hash="b05bafda20d0f54152e2c1be6650ecc8" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <constant namespace="" line="39" package="CodeIgniter">
      <name>HOOKS_PRIORITY_LOW</name>
      <full_name>\HOOKS_PRIORITY_LOW</full_name>
      <value>200</value>
      <docblock line="39">
        <description>CodeIgniter</description>
        <long-description>An open source application development framework for PHP

This content is released under the MIT License (MIT)

Copyright (c) 2014 - 2016, British Columbia Institute of Technology

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</long-description>
        <tag name="package" line="39" description="CodeIgniter"/>
        <tag name="author" line="39" description="CodeIgniter Dev Team"/>
        <tag name="copyright" line="39" description="Copyright (c) 2014 - 2016, British Columbia Institute of Technology (http://bcit.ca/)"/>
        <tag name="license" line="39" description="MIT License" link="http://opensource.org/licenses/MIT"/>
        <tag name="link" line="39" description="http://codeigniter.com" link="http://codeigniter.com"/>
        <tag name="since" line="39" description="Version 3.0.0"/>
        <tag name="filesource" line="39" description=""/>
      </docblock>
    </constant>
    <constant namespace="" line="40" package="Default">
      <name>HOOKS_PRIORITY_NORMAL</name>
      <full_name>\HOOKS_PRIORITY_NORMAL</full_name>
      <value>100</value>
      <docblock line="40">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="40" description="Default"/>
      </docblock>
    </constant>
    <constant namespace="" line="41" package="Default">
      <name>HOOKS_PRIORITY_HIGH</name>
      <full_name>\HOOKS_PRIORITY_HIGH</full_name>
      <value>10</value>
      <docblock line="41">
        <description></description>
        <long-description></long-description>
        <tag name="package" line="41" description="Default"/>
      </docblock>
    </constant>
    <class final="false" abstract="false" namespace="CodeIgniter\Hooks" line="46" package="Default">
      <extends/>
      <name>Hooks</name>
      <full_name>\CodeIgniter\Hooks\Hooks</full_name>
      <docblock line="46">
        <description>Hooks</description>
        <long-description></long-description>
        <tag name="package" line="46" description="Default"/>
      </docblock>
      <property static="true" visibility="protected" namespace="CodeIgniter\Hooks" line="54" package="Default">
        <name>$listeners</name>
        <full_name>\CodeIgniter\Hooks\Hooks::listeners</full_name>
        <default>array()</default>
        <docblock line="54">
          <description>The list of listeners.</description>
          <long-description></long-description>
          <tag name="var" line="54" description="" type="array" variable="">
            <type>array</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\Hooks" line="62" package="Default">
        <name>$haveReadFromFile</name>
        <full_name>\CodeIgniter\Hooks\Hooks::haveReadFromFile</full_name>
        <default>false</default>
        <docblock line="62">
          <description>Flag to let us know if we've read from the Config file
and have all of the defined events.</description>
          <long-description></long-description>
          <tag name="var" line="62" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="true" visibility="protected" namespace="CodeIgniter\Hooks" line="69" package="Default">
        <name>$hooksFile</name>
        <full_name>\CodeIgniter\Hooks\Hooks::hooksFile</full_name>
        <default></default>
        <docblock line="69">
          <description>The path to the file containing the hooks to load in.</description>
          <long-description></long-description>
          <tag name="var" line="69" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Hooks" line="86" package="Default">
        <name>on</name>
        <full_name>\CodeIgniter\Hooks\Hooks::on()</full_name>
        <docblock line="86">
          <description>Registers an action to happen on an event. The action can be any sort
of callable:</description>
          <long-description>Hooks::on('create', 'myFunction');               // procedural function
 Hooks::on('create', ['myClass', 'myMethod']);    // Class::method
 Hooks::on('create', [$myInstance, 'myMethod']);  // Method on an existing instance
 Hooks::on('create', function() {});              // Closure</long-description>
          <tag name="param" line="86" description="" type="" variable="$event_name"/>
          <tag name="param" line="86" description="" type="callable" variable="$callback">
            <type>callable</type>
          </tag>
          <tag name="param" line="86" description="" type="integer" variable="$priority">
            <type>integer</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$callback</name>
          <default></default>
          <type>callable</type>
        </argument>
        <argument line="0" by_reference="false">
          <name>$priority</name>
          <default>HOOKS_PRIORITY_NORMAL</default>
          <type>integer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Hooks" line="117" package="Default">
        <name>trigger</name>
        <full_name>\CodeIgniter\Hooks\Hooks::trigger()</full_name>
        <docblock line="117">
          <description>Runs through all subscribed methods running them one at a time,
until either:
 a) All subscribers have finished or
 b) a method returns false, at which point execution of subscribers stops.</description>
          <long-description></long-description>
          <tag name="param" line="117" description="" type="" variable="$event_name"/>
          <tag name="param" line="117" description="" type="" variable="$arguments"/>
          <tag name="return" line="117" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$arguments</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Hooks" line="157" package="Default">
        <name>listeners</name>
        <full_name>\CodeIgniter\Hooks\Hooks::listeners()</full_name>
        <docblock line="157">
          <description>Returns an array of listeners for a single event. They are
sorted by priority.</description>
          <long-description>If the listener could not be found, returns FALSE, or TRUE if
it was removed.</long-description>
          <tag name="param" line="157" description="" type="" variable="$event_name"/>
          <tag name="return" line="157" description="" type="array">
            <type>array</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event_name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Hooks" line="190" package="Default">
        <name>removeListener</name>
        <full_name>\CodeIgniter\Hooks\Hooks::removeListener()</full_name>
        <docblock line="190">
          <description>Removes a single listener from an event.</description>
          <long-description>If the listener couldn't be found, returns FALSE, else TRUE if
it was removed.</long-description>
          <tag name="param" line="190" description="" type="" variable="$event_name"/>
          <tag name="param" line="190" description="" type="callable" variable="$listener">
            <type>callable</type>
          </tag>
          <tag name="return" line="190" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event_name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="0" by_reference="false">
          <name>$listener</name>
          <default></default>
          <type>callable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="CodeIgniter\Hooks" line="221" package="Default">
        <name>removeAllListeners</name>
        <full_name>\CodeIgniter\Hooks\Hooks::removeAllListeners()</full_name>
        <docblock line="221">
          <description>Removes all listeners.</description>
          <long-description>If the event_name is specified, only listeners for that event will be
removed, otherwise all listeners for all events are removed.</long-description>
          <tag name="param" line="221" description="" type="null" variable="$event_name">
            <type>null</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$event_name</name>
          <default>null</default>
          <type>null</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Hooks" line="240" package="Default">
        <name>setFile</name>
        <full_name>\CodeIgniter\Hooks\Hooks::setFile()</full_name>
        <docblock line="240">
          <description>Sets the path to the file that routes are read from.</description>
          <long-description></long-description>
          <tag name="param" line="240" description="" type="string" variable="$path">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$path</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <file path="Debug/Toolbar/Collectors/BaseCollector.php" generated-path="Debug.Toolbar.Collectors.BaseCollector.html" hash="235f7cb13b29addb933d1a95d24ffec0" package="Default">
    <docblock line="0">
      <description></description>
      <long-description></long-description>
      <tag name="package" line="0" description="Default"/>
    </docblock>
    <class final="false" abstract="false" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="42" package="Default">
      <extends/>
      <name>BaseCollector</name>
      <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector</full_name>
      <docblock line="42">
        <description>Base Toolbar collector</description>
        <long-description></long-description>
        <tag name="package" line="42" description="Default"/>
      </docblock>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="50" package="Default">
        <name>$hasTimeline</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimeline</full_name>
        <default>false</default>
        <docblock line="50">
          <description>Whether this collector has data that can
be displayed in the Timeline.</description>
          <long-description></long-description>
          <tag name="var" line="50" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="58" package="Default">
        <name>$hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent</full_name>
        <default>false</default>
        <docblock line="58">
          <description>Whether this collector needs to display
content in a tab or not.</description>
          <long-description></long-description>
          <tag name="var" line="58" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="66" package="Default">
        <name>$hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData</full_name>
        <default>false</default>
        <docblock line="66">
          <description>Whether this collector has data that
should be shown in the Vars tab.</description>
          <long-description></long-description>
          <tag name="var" line="66" description="" type="boolean" variable="">
            <type>boolean</type>
          </tag>
        </docblock>
      </property>
      <property static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="74" package="Default">
        <name>$title</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::title</full_name>
        <default>''</default>
        <docblock line="74">
          <description>The 'title' of this Collector.</description>
          <long-description>Used to name things in the toolbar HTML.</long-description>
          <tag name="var" line="74" description="" type="string" variable="">
            <type>string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="84" package="Default">
        <name>getTitle</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitle()</full_name>
        <docblock line="84">
          <description>Gets the Collector's title.</description>
          <long-description></long-description>
          <tag name="param" line="84" description="" type="boolean" variable="$safe">
            <type>boolean</type>
          </tag>
          <tag name="return" line="84" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$safe</name>
          <default>false</default>
          <type>boolean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="101" package="Default">
        <name>getTitleDetails</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getTitleDetails()</full_name>
        <docblock line="101">
          <description>Returns any information that should be shown next to the title.</description>
          <long-description></long-description>
          <tag name="return" line="101" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="115" package="Default">
        <name>hasTabContent</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTabContent()</full_name>
        <docblock line="115">
          <description>Does this collector need it's own tab?</description>
          <long-description></long-description>
          <tag name="return" line="115" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="127" package="Default">
        <name>hasTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasTimelineData()</full_name>
        <docblock line="127">
          <description>Does this collector have information for the timeline?</description>
          <long-description></long-description>
          <tag name="return" line="127" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="141" package="Default">
        <name>timelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::timelineData()</full_name>
        <docblock line="141">
          <description>Grabs the data for the timeline, properly formatted,
or returns an empty array.</description>
          <long-description></long-description>
          <tag name="return" line="141" description="" type="boolean">
            <type>boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="159" package="Default">
        <name>hasVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::hasVarData()</full_name>
        <docblock line="159">
          <description>Does this Collector have data that should be shown in the
'Vars' tab?</description>
          <long-description></long-description>
          <tag name="return" line="159" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="184" package="Default">
        <name>getVarData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::getVarData()</full_name>
        <docblock line="184">
          <description>Gets a collection of data that should be shown in the 'Vars' tab.</description>
          <long-description>The format is an array of sections, each with their own array
of key/value pairs:

 $data = [
     'section 1' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
     'section 2' =&gt; [
         'foo' =&gt; 'bar,
         'bar' =&gt; 'baz'
     ],
 ];</long-description>
          <tag name="return" line="184" description="" type="null">
            <type>null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="207" package="Default">
        <name>formatTimelineData</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::formatTimelineData()</full_name>
        <docblock line="207">
          <description>Child classes should implement this to return the timeline data
formatted for correct usage.</description>
          <long-description>Timeline data should be formatted into arrays that look like:

 [
     'name'      =&gt; 'Database::Query',
     'component' =&gt; 'Database',
     'start'     =&gt; 10       // milliseconds
     'duration'  =&gt; 15       // milliseconds
 ]</long-description>
          <tag name="return" line="207" description="" type="mixed">
            <type>mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="220" package="Default">
        <name>display</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::display()</full_name>
        <docblock line="220">
          <description>Builds and returns the HTML needed to fill a tab to display
within the Debug Bar</description>
          <long-description></long-description>
          <tag name="return" line="220" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="CodeIgniter\Debug\Toolbar\Collectors" line="236" package="Default">
        <name>cleanPath</name>
        <full_name>\CodeIgniter\Debug\Toolbar\Collectors\BaseCollector::cleanPath()</full_name>
        <docblock line="236">
          <description>Clean Path</description>
          <long-description>This makes nicer looking paths for the error output.</long-description>
          <tag name="param" line="236" description="" type="string" variable="$file">
            <type>string</type>
          </tag>
          <tag name="return" line="236" description="" type="string">
            <type>string</type>
          </tag>
        </docblock>
        <argument line="0" by_reference="false">
          <name>$file</name>
          <default></default>
          <type>string</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="PPC:ERR-50000">No summary was found for this file</error>
    </parse_markers>
    <source>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</source>
  </file>
  <package name="CodeIgniter" full_name="CodeIgniter">
    <package name="Autoloader" full_name="CodeIgniter\Autoloader"/>
    <package name="Benchmark" full_name="CodeIgniter\Benchmark"/>
    <package name="Database" full_name="CodeIgniter\Database"/>
    <package name="Debug" full_name="CodeIgniter\Debug"/>
    <package name="HTTP" full_name="CodeIgniter\HTTP">
      <package name="Files" full_name="CodeIgniter\HTTP\Files"/>
    </package>
    <package name="HTTPLite" full_name="CodeIgniter\HTTPLite"/>
    <package name="Log" full_name="CodeIgniter\Log">
      <package name="Handlers" full_name="CodeIgniter\Log\Handlers"/>
    </package>
    <package name="Router" full_name="CodeIgniter\Router"/>
    <package name="View" full_name="CodeIgniter\View"/>
  </package>
  <package name="Default" full_name="Default"/>
  <package name="global" full_name="global"/>
  <namespace name="global" full_name="global"/>
  <namespace name="CodeIgniter" full_name="CodeIgniter">
    <namespace name="Autoloader" full_name="CodeIgniter\Autoloader"/>
    <namespace name="CLI" full_name="CodeIgniter\CLI"/>
    <namespace name="Commands" full_name="CodeIgniter\Commands"/>
    <namespace name="Config" full_name="CodeIgniter\Config"/>
    <namespace name="Database" full_name="CodeIgniter\Database">
      <namespace name="MySQLi" full_name="CodeIgniter\Database\MySQLi"/>
      <namespace name="Postgre" full_name="CodeIgniter\Database\Postgre"/>
    </namespace>
    <namespace name="Debug" full_name="CodeIgniter\Debug">
      <namespace name="Toolbar" full_name="CodeIgniter\Debug\Toolbar">
        <namespace name="Collectors" full_name="CodeIgniter\Debug\Toolbar\Collectors"/>
      </namespace>
    </namespace>
    <namespace name="HTTP" full_name="CodeIgniter\HTTP">
      <namespace name="Files" full_name="CodeIgniter\HTTP\Files"/>
    </namespace>
    <namespace name="Hooks" full_name="CodeIgniter\Hooks"/>
    <namespace name="Log" full_name="CodeIgniter\Log">
      <namespace name="Handlers" full_name="CodeIgniter\Log\Handlers"/>
    </namespace>
    <namespace name="Router" full_name="CodeIgniter\Router"/>
    <namespace name="Security" full_name="CodeIgniter\Security"/>
    <namespace name="Session" full_name="CodeIgniter\Session">
      <namespace name="Handlers" full_name="CodeIgniter\Session\Handlers"/>
    </namespace>
    <namespace name="Test" full_name="CodeIgniter\Test"/>
    <namespace name="View" full_name="CodeIgniter\View"/>
  </namespace>
  <namespace name="Psr" full_name="Psr">
    <namespace name="Log" full_name="Psr\Log"/>
  </namespace>
  <namespace name="Zend" full_name="Zend">
    <namespace name="Escaper" full_name="Zend\Escaper">
      <namespace name="Exception" full_name="Zend\Escaper\Exception"/>
    </namespace>
  </namespace>
  <deprecated count="0"/>
</project>
